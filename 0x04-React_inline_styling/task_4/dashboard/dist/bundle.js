/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={272:(e,t,n)=>{"use strict";var r=n(723),l=[],o=[],a=r.makeRequestCallFromTimer((function(){if(o.length)throw o.shift()}));function i(e){var t;(t=l.length?l.pop():new u).task=e,r(t)}function u(){this.task=null}e.exports=i,u.prototype.call=function(){try{this.task.call()}catch(e){i.onerror?i.onerror(e):(o.push(e),a())}finally{this.task=null,l[l.length]=this}}},723:(e,t,n)=>{"use strict";function r(e){o.length||l(),o[o.length]=e}e.exports=r;var l,o=[],a=0;function i(){for(;a<o.length;){var e=a;if(a+=1,o[e].call(),a>1024){for(var t=0,n=o.length-a;t<n;t++)o[t]=o[t+a];o.length-=a,a=0}}o.length=0,a=0}var u,c,s,f=void 0!==n.g?n.g:self,d=f.MutationObserver||f.WebKitMutationObserver;function p(e){return function(){var t=setTimeout(r,0),n=setInterval(r,50);function r(){clearTimeout(t),clearInterval(n),e()}}}"function"==typeof d?(u=1,c=new d(i),s=document.createTextNode(""),c.observe(s,{characterData:!0}),l=function(){u=-u,s.data=u}):l=p(i),r.requestFlush=l,r.makeRequestCallFromTimer=p},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function l(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var a,i,u=l(e),c=1;c<arguments.length;c++){for(var s in a=Object(arguments[c]))n.call(a,s)&&(u[s]=a[s]);if(t){i=t(a);for(var f=0;f<i.length;f++)r.call(a,i[f])&&(u[i[f]]=a[i[f]])}}return u}},703:(e,t,n)=>{"use strict";var r=n(414);function l(){}function o(){}o.resetWarningCache=l,e.exports=function(){function e(e,t,n,l,o,a){if(a!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:l};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),l=n(418),o=n(840);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));var i=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)i.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,m={},h={};function y(e,t,n,r,l,o,a){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=l,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=a}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new y(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new y(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new y(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new y(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new y(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new y(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new y(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new y(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new y(e,5,!1,e.toLowerCase(),null,!1,!1)}));var v=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var l=g.hasOwnProperty(t)?g[t]:null;(null!==l?0===l.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,l,r)&&(n=null),r||null===l?function(e){return!!p.call(h,e)||!p.call(m,e)&&(d.test(e)?h[e]=!0:(m[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):l.mustUseProperty?e[l.propertyName]=null===n?3!==l.type&&"":n:(t=l.attributeName,r=l.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(l=l.type)||4===l&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(v,b);g[t]=new y(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(v,b);g[t]=new y(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(v,b);g[t]=new y(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new y(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new y("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new y(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,S=60103,E=60106,x=60107,_=60108,C=60114,O=60109,P=60110,N=60112,T=60113,z=60120,M=60115,R=60116,L=60121,j=60128,I=60129,F=60130,D=60131;if("function"==typeof Symbol&&Symbol.for){var A=Symbol.for;S=A("react.element"),E=A("react.portal"),x=A("react.fragment"),_=A("react.strict_mode"),C=A("react.profiler"),O=A("react.provider"),P=A("react.context"),N=A("react.forward_ref"),T=A("react.suspense"),z=A("react.suspense_list"),M=A("react.memo"),R=A("react.lazy"),L=A("react.block"),A("react.scope"),j=A("react.opaque.id"),I=A("react.debug_trace_mode"),F=A("react.offscreen"),D=A("react.legacy_hidden")}var B,W="function"==typeof Symbol&&Symbol.iterator;function U(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=W&&e[W]||e["@@iterator"])?e:null}function V(e){if(void 0===B)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);B=t&&t[1]||""}return"\n"+B+e}var H=!1;function $(e,t){if(!e||H)return"";H=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var l=e.stack.split("\n"),o=r.stack.split("\n"),a=l.length-1,i=o.length-1;1<=a&&0<=i&&l[a]!==o[i];)i--;for(;1<=a&&0<=i;a--,i--)if(l[a]!==o[i]){if(1!==a||1!==i)do{if(a--,0>--i||l[a]!==o[i])return"\n"+l[a].replace(" at new "," at ")}while(1<=a&&0<=i);break}}}finally{H=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?V(e):""}function Q(e){switch(e.tag){case 5:return V(e.type);case 16:return V("Lazy");case 13:return V("Suspense");case 19:return V("SuspenseList");case 0:case 2:case 15:return $(e.type,!1);case 11:return $(e.type.render,!1);case 22:return $(e.type._render,!1);case 1:return $(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case E:return"Portal";case C:return"Profiler";case _:return"StrictMode";case T:return"Suspense";case z:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case P:return(e.displayName||"Context")+".Consumer";case O:return(e._context.displayName||"Context")+".Provider";case N:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case M:return q(e.type);case L:return q(e._render);case R:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function G(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Y(e){e._valueTracker||(e._valueTracker=function(e){var t=G(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var l=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return l.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=G(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return l({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?le(e,t.type,n):t.hasOwnProperty("defaultValue")&&le(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function le(e,t,n){"number"===t&&Z(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function oe(e,t){return e=l({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ae(e,t,n,r){if(e=e.options,t){t={};for(var l=0;l<n.length;l++)t["$"+n[l]]=!0;for(n=0;n<e.length;n++)l=t.hasOwnProperty("$"+e[n].value),e[n].selected!==l&&(e[n].selected=l),l&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,l=0;l<e.length;l++){if(e[l].value===n)return e[l].selected=!0,void(r&&(e[l].defaultSelected=!0));null!==t||e[l].disabled||(t=e[l])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return l({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function ce(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var me,he,ye=(he=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((me=me||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=me.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return he(e,t)}))}:he);function ge(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ve={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ve.hasOwnProperty(e)&&ve[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),l=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,l):e[n]=l}}Object.keys(ve).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ve[t]=ve[e]}))}));var Se=l({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ee(e,t){if(t){if(Se[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function _e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Oe=null,Pe=null;function Ne(e){if(e=Jr(e)){if("function"!=typeof Ce)throw Error(a(280));var t=e.stateNode;t&&(t=tl(t),Ce(e.stateNode,e.type,t))}}function Te(e){Oe?Pe?Pe.push(e):Pe=[e]:Oe=e}function ze(){if(Oe){var e=Oe,t=Pe;if(Pe=Oe=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function Me(e,t){return e(t)}function Re(e,t,n,r,l){return e(t,n,r,l)}function Le(){}var je=Me,Ie=!1,Fe=!1;function De(){null===Oe&&null===Pe||(Le(),ze())}function Ae(e,t){var n=e.stateNode;if(null===n)return null;var r=tl(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}var Be=!1;if(f)try{var We={};Object.defineProperty(We,"passive",{get:function(){Be=!0}}),window.addEventListener("test",We,We),window.removeEventListener("test",We,We)}catch(he){Be=!1}function Ue(e,t,n,r,l,o,a,i,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Ve=!1,He=null,$e=!1,Qe=null,qe={onError:function(e){Ve=!0,He=e}};function Ke(e,t,n,r,l,o,a,i,u){Ve=!1,He=null,Ue.apply(qe,arguments)}function Ge(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ye(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Xe(e){if(Ge(e)!==e)throw Error(a(188))}function Ze(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ge(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var l=n.return;if(null===l)break;var o=l.alternate;if(null===o){if(null!==(r=l.return)){n=r;continue}break}if(l.child===o.child){for(o=l.child;o;){if(o===n)return Xe(l),e;if(o===r)return Xe(l),t;o=o.sibling}throw Error(a(188))}if(n.return!==r.return)n=l,r=o;else{for(var i=!1,u=l.child;u;){if(u===n){i=!0,n=l,r=o;break}if(u===r){i=!0,r=l,n=o;break}u=u.sibling}if(!i){for(u=o.child;u;){if(u===n){i=!0,n=o,r=l;break}if(u===r){i=!0,r=o,n=l;break}u=u.sibling}if(!i)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Je(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,lt=!1,ot=[],at=null,it=null,ut=null,ct=new Map,st=new Map,ft=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,l){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:l,targetContainers:[r]}}function mt(e,t){switch(e){case"focusin":case"focusout":at=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":ct.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":st.delete(t.pointerId)}}function ht(e,t,n,r,l,o){return null===e||e.nativeEvent!==o?(e=pt(t,n,r,l,o),null!==t&&null!==(t=Jr(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==l&&-1===t.indexOf(l)&&t.push(l),e)}function yt(e){var t=Zr(e.target);if(null!==t){var n=Ge(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ye(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function gt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Jr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function vt(e,t,n){gt(e)&&n.delete(t)}function bt(){for(lt=!1;0<ot.length;){var e=ot[0];if(null!==e.blockedOn){null!==(e=Jr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&ot.shift()}null!==at&&gt(at)&&(at=null),null!==it&&gt(it)&&(it=null),null!==ut&&gt(ut)&&(ut=null),ct.forEach(vt),st.forEach(vt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,lt||(lt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,bt)))}function kt(e){function t(t){return wt(t,e)}if(0<ot.length){wt(ot[0],e);for(var n=1;n<ot.length;n++){var r=ot[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==at&&wt(at,e),null!==it&&wt(it,e),null!==ut&&wt(ut,e),ct.forEach(t),st.forEach(t),n=0;n<ft.length;n++)(r=ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ft.length&&null===(n=ft[0]).blockedOn;)yt(n),null===n.blockedOn&&ft.shift()}function St(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Et={animationend:St("Animation","AnimationEnd"),animationiteration:St("Animation","AnimationIteration"),animationstart:St("Animation","AnimationStart"),transitionend:St("Transition","TransitionEnd")},xt={},_t={};function Ct(e){if(xt[e])return xt[e];if(!Et[e])return e;var t,n=Et[e];for(t in n)if(n.hasOwnProperty(t)&&t in _t)return xt[e]=n[t];return e}f&&(_t=document.createElement("div").style,"AnimationEvent"in window||(delete Et.animationend.animation,delete Et.animationiteration.animation,delete Et.animationstart.animation),"TransitionEvent"in window||delete Et.transitionend.transition);var Ot=Ct("animationend"),Pt=Ct("animationiteration"),Nt=Ct("animationstart"),Tt=Ct("transitionend"),zt=new Map,Mt=new Map,Rt=["abort","abort",Ot,"animationEnd",Pt,"animationIteration",Nt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Tt,"transitionEnd","waiting","waiting"];function Lt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],l=e[n+1];l="on"+(l[0].toUpperCase()+l.slice(1)),Mt.set(r,t),zt.set(r,l),c(l,[r])}}(0,o.unstable_now)();var jt=8;function It(e){if(0!=(1&e))return jt=15,1;if(0!=(2&e))return jt=14,2;if(0!=(4&e))return jt=13,4;var t=24&e;return 0!==t?(jt=12,t):0!=(32&e)?(jt=11,32):0!=(t=192&e)?(jt=10,t):0!=(256&e)?(jt=9,256):0!=(t=3584&e)?(jt=8,t):0!=(4096&e)?(jt=7,4096):0!=(t=4186112&e)?(jt=6,t):0!=(t=62914560&e)?(jt=5,t):67108864&e?(jt=4,67108864):0!=(134217728&e)?(jt=3,134217728):0!=(t=805306368&e)?(jt=2,t):0!=(1073741824&e)?(jt=1,1073741824):(jt=8,e)}function Ft(e,t){var n=e.pendingLanes;if(0===n)return jt=0;var r=0,l=0,o=e.expiredLanes,a=e.suspendedLanes,i=e.pingedLanes;if(0!==o)r=o,l=jt=15;else if(0!=(o=134217727&n)){var u=o&~a;0!==u?(r=It(u),l=jt):0!=(i&=o)&&(r=It(i),l=jt)}else 0!=(o=n&~a)?(r=It(o),l=jt):0!==i&&(r=It(i),l=jt);if(0===r)return 0;if(r=n&((0>(r=31-Vt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&a)){if(It(t),l<=jt)return t;jt=l}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)l=1<<(n=31-Vt(t)),r|=e[n],t&=~l;return r}function Dt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function At(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Bt(24&~t))?At(10,t):e;case 10:return 0===(e=Bt(192&~t))?At(8,t):e;case 8:return 0===(e=Bt(3584&~t))&&0===(e=Bt(4186112&~t))&&(e=512),e;case 2:return 0===(t=Bt(805306368&~t))&&(t=268435456),t}throw Error(a(358,e))}function Bt(e){return e&-e}function Wt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Ut(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Vt(t)]=n}var Vt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Ht(e)/$t|0)|0},Ht=Math.log,$t=Math.LN2,Qt=o.unstable_UserBlockingPriority,qt=o.unstable_runWithPriority,Kt=!0;function Gt(e,t,n,r){Ie||Le();var l=Xt,o=Ie;Ie=!0;try{Re(l,e,t,n,r)}finally{(Ie=o)||De()}}function Yt(e,t,n,r){qt(Qt,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){var l;if(Kt)if((l=0==(4&t))&&0<ot.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,r),ot.push(e);else{var o=Zt(e,t,n,r);if(null===o)l&&mt(e,r);else{if(l){if(-1<dt.indexOf(e))return e=pt(o,e,t,n,r),void ot.push(e);if(function(e,t,n,r,l){switch(t){case"focusin":return at=ht(at,e,t,n,r,l),!0;case"dragenter":return it=ht(it,e,t,n,r,l),!0;case"mouseover":return ut=ht(ut,e,t,n,r,l),!0;case"pointerover":var o=l.pointerId;return ct.set(o,ht(ct.get(o)||null,e,t,n,r,l)),!0;case"gotpointercapture":return o=l.pointerId,st.set(o,ht(st.get(o)||null,e,t,n,r,l)),!0}return!1}(o,e,t,n,r))return;mt(e,r)}zr(e,t,r,null,n)}}}function Zt(e,t,n,r){var l=_e(r);if(null!==(l=Zr(l))){var o=Ge(l);if(null===o)l=null;else{var a=o.tag;if(13===a){if(null!==(l=Ye(o)))return l;l=null}else if(3===a){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;l=null}else o!==l&&(l=null)}}return zr(e,t,r,l,n),null}var Jt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,l="value"in Jt?Jt.value:Jt.textContent,o=l.length;for(e=0;e<r&&n[e]===l[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===l[o-t];t++);return tn=l.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function ln(){return!0}function on(){return!1}function an(e){function t(t,n,r,l,o){for(var a in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=l,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(a)&&(t=e[a],this[a]=t?t(l):l[a]);return this.isDefaultPrevented=(null!=l.defaultPrevented?l.defaultPrevented:!1===l.returnValue)?ln:on,this.isPropagationStopped=on,this}return l(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ln)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ln)},persist:function(){},isPersistent:ln}),t}var un,cn,sn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=an(fn),pn=l({},fn,{view:0,detail:0}),mn=an(pn),hn=l({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(un=e.screenX-sn.screenX,cn=e.screenY-sn.screenY):cn=un=0,sn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:cn}}),yn=an(hn),gn=an(l({},hn,{dataTransfer:0})),vn=an(l({},pn,{relatedTarget:0})),bn=an(l({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=an(l({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),kn=an(l({},fn,{data:0})),Sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},En={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _n(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=xn[e])&&!!t[e]}function Cn(){return _n}var On=an(l({},pn,{key:function(e){if(e.key){var t=Sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?En[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Pn=an(l({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Nn=an(l({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Tn=an(l({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),zn=an(l({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Mn=[9,13,27,32],Rn=f&&"CompositionEvent"in window,Ln=null;f&&"documentMode"in document&&(Ln=document.documentMode);var jn=f&&"TextEvent"in window&&!Ln,In=f&&(!Rn||Ln&&8<Ln&&11>=Ln),Fn=String.fromCharCode(32),Dn=!1;function An(e,t){switch(e){case"keyup":return-1!==Mn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Bn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Wn=!1,Un={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Un[e.type]:"textarea"===t}function Hn(e,t,n,r){Te(r),0<(t=Rr(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var $n=null,Qn=null;function qn(e){_r(e,0)}function Kn(e){if(X(el(e)))return e}function Gn(e,t){if("change"===e)return t}var Yn=!1;if(f){var Xn;if(f){var Zn="oninput"in document;if(!Zn){var Jn=document.createElement("div");Jn.setAttribute("oninput","return;"),Zn="function"==typeof Jn.oninput}Xn=Zn}else Xn=!1;Yn=Xn&&(!document.documentMode||9<document.documentMode)}function er(){$n&&($n.detachEvent("onpropertychange",tr),Qn=$n=null)}function tr(e){if("value"===e.propertyName&&Kn(Qn)){var t=[];if(Hn(t,Qn,e,_e(e)),e=qn,Ie)e(t);else{Ie=!0;try{Me(e,t)}finally{Ie=!1,De()}}}}function nr(e,t,n){"focusin"===e?(er(),Qn=n,($n=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(Qn)}function lr(e,t){if("click"===e)return Kn(t)}function or(e,t){if("input"===e||"change"===e)return Kn(t)}var ar="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ir=Object.prototype.hasOwnProperty;function ur(e,t){if(ar(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ir.call(t,n[r])||!ar(e[n[r]],t[n[r]]))return!1;return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Z((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var mr=f&&"documentMode"in document&&11>=document.documentMode,hr=null,yr=null,gr=null,vr=!1;function br(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;vr||null==hr||hr!==Z(r)||(r="selectionStart"in(r=hr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&ur(gr,r)||(gr=r,0<(r=Rr(yr,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=hr)))}Lt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Lt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Lt(Rt,2);for(var wr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),kr=0;kr<wr.length;kr++)Mt.set(wr[kr],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Sr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Er=new Set("cancel close invalid load scroll toggle".split(" ").concat(Sr));function xr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,l,o,i,u,c){if(Ke.apply(this,arguments),Ve){if(!Ve)throw Error(a(198));var s=He;Ve=!1,He=null,$e||($e=!0,Qe=s)}}(r,t,void 0,e),e.currentTarget=null}function _r(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],l=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var a=r.length-1;0<=a;a--){var i=r[a],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==o&&l.isPropagationStopped())break e;xr(l,i,c),o=u}else for(a=0;a<r.length;a++){if(u=(i=r[a]).instance,c=i.currentTarget,i=i.listener,u!==o&&l.isPropagationStopped())break e;xr(l,i,c),o=u}}}if($e)throw e=Qe,$e=!1,Qe=null,e}function Cr(e,t){var n=nl(t),r=e+"__bubble";n.has(r)||(Tr(t,e,2,!1),n.add(r))}var Or="_reactListening"+Math.random().toString(36).slice(2);function Pr(e){e[Or]||(e[Or]=!0,i.forEach((function(t){Er.has(t)||Nr(t,!1,e,null),Nr(t,!0,e,null)})))}function Nr(e,t,n,r){var l=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=n;if("selectionchange"===e&&9!==n.nodeType&&(o=n.ownerDocument),null!==r&&!t&&Er.has(e)){if("scroll"!==e)return;l|=2,o=r}var a=nl(o),i=e+"__"+(t?"capture":"bubble");a.has(i)||(t&&(l|=4),Tr(o,e,l,t),a.add(i))}function Tr(e,t,n,r){var l=Mt.get(t);switch(void 0===l?2:l){case 0:l=Gt;break;case 1:l=Yt;break;default:l=Xt}n=l.bind(null,t,n,e),l=void 0,!Be||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(l=!0),r?void 0!==l?e.addEventListener(t,n,{capture:!0,passive:l}):e.addEventListener(t,n,!0):void 0!==l?e.addEventListener(t,n,{passive:l}):e.addEventListener(t,n,!1)}function zr(e,t,n,r,l){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var a=r.tag;if(3===a||4===a){var i=r.stateNode.containerInfo;if(i===l||8===i.nodeType&&i.parentNode===l)break;if(4===a)for(a=r.return;null!==a;){var u=a.tag;if((3===u||4===u)&&((u=a.stateNode.containerInfo)===l||8===u.nodeType&&u.parentNode===l))return;a=a.return}for(;null!==i;){if(null===(a=Zr(i)))return;if(5===(u=a.tag)||6===u){r=o=a;continue e}i=i.parentNode}}r=r.return}!function(e,t,n){if(Fe)return e();Fe=!0;try{je(e,t,n)}finally{Fe=!1,De()}}((function(){var r=o,l=_e(n),a=[];e:{var i=zt.get(e);if(void 0!==i){var u=dn,c=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=On;break;case"focusin":c="focus",u=vn;break;case"focusout":c="blur",u=vn;break;case"beforeblur":case"afterblur":u=vn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=yn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Nn;break;case Ot:case Pt:case Nt:u=bn;break;case Tt:u=Tn;break;case"scroll":u=mn;break;case"wheel":u=zn;break;case"copy":case"cut":case"paste":u=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Pn}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==i?i+"Capture":null:i;s=[];for(var p,m=r;null!==m;){var h=(p=m).stateNode;if(5===p.tag&&null!==h&&(p=h,null!==d&&null!=(h=Ae(m,d))&&s.push(Mr(m,h,p))),f)break;m=m.return}0<s.length&&(i=new u(i,c,null,n,l),a.push({event:i,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=n.relatedTarget||n.fromElement)||!Zr(c)&&!c[Yr])&&(u||i)&&(i=l.window===l?l:(i=l.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?Zr(c):null)&&(c!==(f=Ge(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=yn,h="onMouseLeave",d="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(s=Pn,h="onPointerLeave",d="onPointerEnter",m="pointer"),f=null==u?i:el(u),p=null==c?i:el(c),(i=new s(h,m+"leave",u,n,l)).target=f,i.relatedTarget=p,h=null,Zr(l)===r&&((s=new s(d,m+"enter",c,n,l)).target=p,s.relatedTarget=f,h=s),f=h,u&&c)e:{for(d=c,m=0,p=s=u;p;p=Lr(p))m++;for(p=0,h=d;h;h=Lr(h))p++;for(;0<m-p;)s=Lr(s),m--;for(;0<p-m;)d=Lr(d),p--;for(;m--;){if(s===d||null!==d&&s===d.alternate)break e;s=Lr(s),d=Lr(d)}s=null}else s=null;null!==u&&jr(a,i,u,s,!1),null!==c&&null!==f&&jr(a,f,c,s,!0)}if("select"===(u=(i=r?el(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var y=Gn;else if(Vn(i))if(Yn)y=or;else{y=rr;var g=nr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(y=lr);switch(y&&(y=y(e,r))?Hn(a,y,n,l):(g&&g(e,i,r),"focusout"===e&&(g=i._wrapperState)&&g.controlled&&"number"===i.type&&le(i,"number",i.value)),g=r?el(r):window,e){case"focusin":(Vn(g)||"true"===g.contentEditable)&&(hr=g,yr=r,gr=null);break;case"focusout":gr=yr=hr=null;break;case"mousedown":vr=!0;break;case"contextmenu":case"mouseup":case"dragend":vr=!1,br(a,n,l);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":br(a,n,l)}var v;if(Rn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Wn?An(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(In&&"ko"!==n.locale&&(Wn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Wn&&(v=nn()):(en="value"in(Jt=l)?Jt.value:Jt.textContent,Wn=!0)),0<(g=Rr(r,b)).length&&(b=new kn(b,e,null,n,l),a.push({event:b,listeners:g}),(v||null!==(v=Bn(n)))&&(b.data=v))),(v=jn?function(e,t){switch(e){case"compositionend":return Bn(t);case"keypress":return 32!==t.which?null:(Dn=!0,Fn);case"textInput":return(e=t.data)===Fn&&Dn?null:e;default:return null}}(e,n):function(e,t){if(Wn)return"compositionend"===e||!Rn&&An(e,t)?(e=nn(),tn=en=Jt=null,Wn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return In&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Rr(r,"onBeforeInput")).length&&(l=new kn("onBeforeInput","beforeinput",null,n,l),a.push({event:l,listeners:r}),l.data=v)}_r(a,t)}))}function Mr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Rr(e,t){for(var n=t+"Capture",r=[];null!==e;){var l=e,o=l.stateNode;5===l.tag&&null!==o&&(l=o,null!=(o=Ae(e,n))&&r.unshift(Mr(e,o,l)),null!=(o=Ae(e,t))&&r.push(Mr(e,o,l))),e=e.return}return r}function Lr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function jr(e,t,n,r,l){for(var o=t._reactName,a=[];null!==n&&n!==r;){var i=n,u=i.alternate,c=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==c&&(i=c,l?null!=(u=Ae(n,o))&&a.unshift(Mr(n,u,i)):l||null!=(u=Ae(n,o))&&a.push(Mr(n,u,i))),n=n.return}0!==a.length&&e.push({event:t,listeners:a})}function Ir(){}var Fr=null,Dr=null;function Ar(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Br(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Wr="function"==typeof setTimeout?setTimeout:void 0,Ur="function"==typeof clearTimeout?clearTimeout:void 0;function Vr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Hr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function $r(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Qr=0,qr=Math.random().toString(36).slice(2),Kr="__reactFiber$"+qr,Gr="__reactProps$"+qr,Yr="__reactContainer$"+qr,Xr="__reactEvents$"+qr;function Zr(e){var t=e[Kr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Yr]||n[Kr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=$r(e);null!==e;){if(n=e[Kr])return n;e=$r(e)}return t}n=(e=n).parentNode}return null}function Jr(e){return!(e=e[Kr]||e[Yr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function el(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function tl(e){return e[Gr]||null}function nl(e){var t=e[Xr];return void 0===t&&(t=e[Xr]=new Set),t}var rl=[],ll=-1;function ol(e){return{current:e}}function al(e){0>ll||(e.current=rl[ll],rl[ll]=null,ll--)}function il(e,t){ll++,rl[ll]=e.current,e.current=t}var ul={},cl=ol(ul),sl=ol(!1),fl=ul;function dl(e,t){var n=e.type.contextTypes;if(!n)return ul;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var l,o={};for(l in n)o[l]=t[l];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function pl(e){return null!=e.childContextTypes}function ml(){al(sl),al(cl)}function hl(e,t,n){if(cl.current!==ul)throw Error(a(168));il(cl,t),il(sl,n)}function yl(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(a(108,q(t)||"Unknown",o));return l({},n,r)}function gl(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ul,fl=cl.current,il(cl,e),il(sl,sl.current),!0}function vl(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=yl(e,t,fl),r.__reactInternalMemoizedMergedChildContext=e,al(sl),al(cl),il(cl,e)):al(sl),il(sl,n)}var bl=null,wl=null,kl=o.unstable_runWithPriority,Sl=o.unstable_scheduleCallback,El=o.unstable_cancelCallback,xl=o.unstable_shouldYield,_l=o.unstable_requestPaint,Cl=o.unstable_now,Ol=o.unstable_getCurrentPriorityLevel,Pl=o.unstable_ImmediatePriority,Nl=o.unstable_UserBlockingPriority,Tl=o.unstable_NormalPriority,zl=o.unstable_LowPriority,Ml=o.unstable_IdlePriority,Rl={},Ll=void 0!==_l?_l:function(){},jl=null,Il=null,Fl=!1,Dl=Cl(),Al=1e4>Dl?Cl:function(){return Cl()-Dl};function Bl(){switch(Ol()){case Pl:return 99;case Nl:return 98;case Tl:return 97;case zl:return 96;case Ml:return 95;default:throw Error(a(332))}}function Wl(e){switch(e){case 99:return Pl;case 98:return Nl;case 97:return Tl;case 96:return zl;case 95:return Ml;default:throw Error(a(332))}}function Ul(e,t){return e=Wl(e),kl(e,t)}function Vl(e,t,n){return e=Wl(e),Sl(e,t,n)}function Hl(){if(null!==Il){var e=Il;Il=null,El(e)}$l()}function $l(){if(!Fl&&null!==jl){Fl=!0;var e=0;try{var t=jl;Ul(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),jl=null}catch(t){throw null!==jl&&(jl=jl.slice(e+1)),Sl(Pl,Hl),t}finally{Fl=!1}}}var Ql=k.ReactCurrentBatchConfig;function ql(e,t){if(e&&e.defaultProps){for(var n in t=l({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Kl=ol(null),Gl=null,Yl=null,Xl=null;function Zl(){Xl=Yl=Gl=null}function Jl(e){var t=Kl.current;al(Kl),e.type._context._currentValue=t}function eo(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function to(e,t){Gl=e,Xl=Yl=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ra=!0),e.firstContext=null)}function no(e,t){if(Xl!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Xl=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Yl){if(null===Gl)throw Error(a(308));Yl=t,Gl.dependencies={lanes:0,firstContext:t,responders:null}}else Yl=Yl.next=t;return e._currentValue}var ro=!1;function lo(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function oo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ao(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function io(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function uo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var l=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var a={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?l=o=a:o=o.next=a,n=n.next}while(null!==n);null===o?l=o=t:o=o.next=t}else l=o=t;return n={baseState:r.baseState,firstBaseUpdate:l,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function co(e,t,n,r){var o=e.updateQueue;ro=!1;var a=o.firstBaseUpdate,i=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var c=u,s=c.next;c.next=null,null===i?a=s:i.next=s,i=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==i&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==a){for(d=o.baseState,i=0,f=s=c=null;;){u=a.lane;var p=a.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var m=e,h=a;switch(u=t,p=n,h.tag){case 1:if("function"==typeof(m=h.payload)){d=m.call(p,d,u);break e}d=m;break e;case 3:m.flags=-4097&m.flags|64;case 0:if(null==(u="function"==typeof(m=h.payload)?m.call(p,d,u):m))break e;d=l({},d,u);break e;case 2:ro=!0}}null!==a.callback&&(e.flags|=32,null===(u=o.effects)?o.effects=[a]:u.push(a))}else p={eventTime:p,lane:u,tag:a.tag,payload:a.payload,callback:a.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,i|=u;if(null===(a=a.next)){if(null===(u=o.shared.pending))break;a=u.next,u.next=null,o.lastBaseUpdate=u,o.shared.pending=null}}null===f&&(c=d),o.baseState=c,o.firstBaseUpdate=s,o.lastBaseUpdate=f,ji|=i,e.lanes=i,e.memoizedState=d}}function so(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],l=r.callback;if(null!==l){if(r.callback=null,r=n,"function"!=typeof l)throw Error(a(191,l));l.call(r)}}}var fo=(new r.Component).refs;function po(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:l({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var mo={isMounted:function(e){return!!(e=e._reactInternals)&&Ge(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=au(),l=iu(e),o=ao(r,l);o.payload=t,null!=n&&(o.callback=n),io(e,o),uu(e,l,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=au(),l=iu(e),o=ao(r,l);o.tag=1,o.payload=t,null!=n&&(o.callback=n),io(e,o),uu(e,l,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=au(),r=iu(e),l=ao(n,r);l.tag=2,null!=t&&(l.callback=t),io(e,l),uu(e,r,n)}};function ho(e,t,n,r,l,o,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,a):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(l,o))}function yo(e,t,n){var r=!1,l=ul,o=t.contextType;return"object"==typeof o&&null!==o?o=no(o):(l=pl(t)?fl:cl.current,o=(r=null!=(r=t.contextTypes))?dl(e,l):ul),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=mo,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=l,e.__reactInternalMemoizedMaskedChildContext=o),t}function go(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&mo.enqueueReplaceState(t,t.state,null)}function vo(e,t,n,r){var l=e.stateNode;l.props=n,l.state=e.memoizedState,l.refs=fo,lo(e);var o=t.contextType;"object"==typeof o&&null!==o?l.context=no(o):(o=pl(t)?fl:cl.current,l.context=dl(e,o)),co(e,n,l,r),l.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(po(e,t,o,n),l.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof l.getSnapshotBeforeUpdate||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||(t=l.state,"function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount(),t!==l.state&&mo.enqueueReplaceState(l,l.state,null),co(e,n,l,r),l.state=e.memoizedState),"function"==typeof l.componentDidMount&&(e.flags|=4)}var bo=Array.isArray;function wo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var l=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===l?t.ref:((t=function(e){var t=r.refs;t===fo&&(t=r.refs={}),null===e?delete t[l]:t[l]=e})._stringRef=l,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function ko(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function So(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function l(e,t){return(e=Bu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function i(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Hu(n,e.mode,r)).return=e,t):((t=l(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=l(t,n.props)).ref=wo(e,t,n),r.return=e,r):((r=Wu(n.type,n.key,n.props,null,e.mode,r)).ref=wo(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=$u(n,e.mode,r)).return=e,t):((t=l(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Uu(n,e.mode,r,o)).return=e,t):((t=l(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Hu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case S:return(n=Wu(t.type,t.key,t.props,null,e.mode,n)).ref=wo(e,null,t),n.return=e,n;case E:return(t=$u(t,e.mode,n)).return=e,t}if(bo(t)||U(t))return(t=Uu(t,e.mode,n,null)).return=e,t;ko(e,t)}return null}function p(e,t,n,r){var l=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==l?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case S:return n.key===l?n.type===x?f(e,t,n.props.children,r,l):c(e,t,n,r):null;case E:return n.key===l?s(e,t,n,r):null}if(bo(n)||U(n))return null!==l?null:f(e,t,n,r,null);ko(e,n)}return null}function m(e,t,n,r,l){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,l);if("object"==typeof r&&null!==r){switch(r.$$typeof){case S:return e=e.get(null===r.key?n:r.key)||null,r.type===x?f(t,e,r.props.children,l,r.key):c(t,e,r,l);case E:return s(t,e=e.get(null===r.key?n:r.key)||null,r,l)}if(bo(r)||U(r))return f(t,e=e.get(n)||null,r,l,null);ko(t,r)}return null}function h(l,a,i,u){for(var c=null,s=null,f=a,h=a=0,y=null;null!==f&&h<i.length;h++){f.index>h?(y=f,f=null):y=f.sibling;var g=p(l,f,i[h],u);if(null===g){null===f&&(f=y);break}e&&f&&null===g.alternate&&t(l,f),a=o(g,a,h),null===s?c=g:s.sibling=g,s=g,f=y}if(h===i.length)return n(l,f),c;if(null===f){for(;h<i.length;h++)null!==(f=d(l,i[h],u))&&(a=o(f,a,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(l,f);h<i.length;h++)null!==(y=m(f,l,h,i[h],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?h:y.key),a=o(y,a,h),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(l,e)})),c}function y(l,i,u,c){var s=U(u);if("function"!=typeof s)throw Error(a(150));if(null==(u=s.call(u)))throw Error(a(151));for(var f=s=null,h=i,y=i=0,g=null,v=u.next();null!==h&&!v.done;y++,v=u.next()){h.index>y?(g=h,h=null):g=h.sibling;var b=p(l,h,v.value,c);if(null===b){null===h&&(h=g);break}e&&h&&null===b.alternate&&t(l,h),i=o(b,i,y),null===f?s=b:f.sibling=b,f=b,h=g}if(v.done)return n(l,h),s;if(null===h){for(;!v.done;y++,v=u.next())null!==(v=d(l,v.value,c))&&(i=o(v,i,y),null===f?s=v:f.sibling=v,f=v);return s}for(h=r(l,h);!v.done;y++,v=u.next())null!==(v=m(h,l,y,v.value,c))&&(e&&null!==v.alternate&&h.delete(null===v.key?y:v.key),i=o(v,i,y),null===f?s=v:f.sibling=v,f=v);return e&&h.forEach((function(e){return t(l,e)})),s}return function(e,r,o,u){var c="object"==typeof o&&null!==o&&o.type===x&&null===o.key;c&&(o=o.props.children);var s="object"==typeof o&&null!==o;if(s)switch(o.$$typeof){case S:e:{for(s=o.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(o.type===x){n(e,c.sibling),(r=l(c,o.props.children)).return=e,e=r;break e}break;default:if(c.elementType===o.type){n(e,c.sibling),(r=l(c,o.props)).ref=wo(e,c,o),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}o.type===x?((r=Uu(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=Wu(o.type,o.key,o.props,null,e.mode,u)).ref=wo(e,r,o),u.return=e,e=u)}return i(e);case E:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=l(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=$u(o,e.mode,u)).return=e,e=r}return i(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=l(r,o)).return=e,e=r):(n(e,r),(r=Hu(o,e.mode,u)).return=e,e=r),i(e);if(bo(o))return h(e,r,o,u);if(U(o))return y(e,r,o,u);if(s&&ko(e,o),void 0===o&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(a(152,q(e.type)||"Component"))}return n(e,r)}}var Eo=So(!0),xo=So(!1),_o={},Co=ol(_o),Oo=ol(_o),Po=ol(_o);function No(e){if(e===_o)throw Error(a(174));return e}function To(e,t){switch(il(Po,t),il(Oo,e),il(Co,_o),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}al(Co),il(Co,t)}function zo(){al(Co),al(Oo),al(Po)}function Mo(e){No(Po.current);var t=No(Co.current),n=pe(t,e.type);t!==n&&(il(Oo,e),il(Co,n))}function Ro(e){Oo.current===e&&(al(Co),al(Oo))}var Lo=ol(0);function jo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Io=null,Fo=null,Do=!1;function Ao(e,t){var n=Du(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Bo(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Wo(e){if(Do){var t=Fo;if(t){var n=t;if(!Bo(e,t)){if(!(t=Hr(n.nextSibling))||!Bo(e,t))return e.flags=-1025&e.flags|2,Do=!1,void(Io=e);Ao(Io,n)}Io=e,Fo=Hr(t.firstChild)}else e.flags=-1025&e.flags|2,Do=!1,Io=e}}function Uo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Io=e}function Vo(e){if(e!==Io)return!1;if(!Do)return Uo(e),Do=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Br(t,e.memoizedProps))for(t=Fo;t;)Ao(e,t),t=Hr(t.nextSibling);if(Uo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Fo=Hr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Fo=null}}else Fo=Io?Hr(e.stateNode.nextSibling):null;return!0}function Ho(){Fo=Io=null,Do=!1}var $o=[];function Qo(){for(var e=0;e<$o.length;e++)$o[e]._workInProgressVersionPrimary=null;$o.length=0}var qo=k.ReactCurrentDispatcher,Ko=k.ReactCurrentBatchConfig,Go=0,Yo=null,Xo=null,Zo=null,Jo=!1,ea=!1;function ta(){throw Error(a(321))}function na(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ar(e[n],t[n]))return!1;return!0}function ra(e,t,n,r,l,o){if(Go=o,Yo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,qo.current=null===e||null===e.memoizedState?Na:Ta,e=n(r,l),ea){o=0;do{if(ea=!1,!(25>o))throw Error(a(301));o+=1,Zo=Xo=null,t.updateQueue=null,qo.current=za,e=n(r,l)}while(ea)}if(qo.current=Pa,t=null!==Xo&&null!==Xo.next,Go=0,Zo=Xo=Yo=null,Jo=!1,t)throw Error(a(300));return e}function la(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Zo?Yo.memoizedState=Zo=e:Zo=Zo.next=e,Zo}function oa(){if(null===Xo){var e=Yo.alternate;e=null!==e?e.memoizedState:null}else e=Xo.next;var t=null===Zo?Yo.memoizedState:Zo.next;if(null!==t)Zo=t,Xo=e;else{if(null===e)throw Error(a(310));e={memoizedState:(Xo=e).memoizedState,baseState:Xo.baseState,baseQueue:Xo.baseQueue,queue:Xo.queue,next:null},null===Zo?Yo.memoizedState=Zo=e:Zo=Zo.next=e}return Zo}function aa(e,t){return"function"==typeof t?t(e):t}function ia(e){var t=oa(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=Xo,l=r.baseQueue,o=n.pending;if(null!==o){if(null!==l){var i=l.next;l.next=o.next,o.next=i}r.baseQueue=l=o,n.pending=null}if(null!==l){l=l.next,r=r.baseState;var u=i=o=null,c=l;do{var s=c.lane;if((Go&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(i=u=f,o=r):u=u.next=f,Yo.lanes|=s,ji|=s}c=c.next}while(null!==c&&c!==l);null===u?o=r:u.next=i,ar(r,t.memoizedState)||(Ra=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function ua(e){var t=oa(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,l=n.pending,o=t.memoizedState;if(null!==l){n.pending=null;var i=l=l.next;do{o=e(o,i.action),i=i.next}while(i!==l);ar(o,t.memoizedState)||(Ra=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function ca(e,t,n){var r=t._getVersion;r=r(t._source);var l=t._workInProgressVersionPrimary;if(null!==l?e=l===r:(e=e.mutableReadLanes,(e=(Go&e)===e)&&(t._workInProgressVersionPrimary=r,$o.push(t))),e)return n(t._source);throw $o.push(t),Error(a(350))}function sa(e,t,n,r){var l=Oi;if(null===l)throw Error(a(349));var o=t._getVersion,i=o(t._source),u=qo.current,c=u.useState((function(){return ca(l,t,n)})),s=c[1],f=c[0];c=Zo;var d=e.memoizedState,p=d.refs,m=p.getSnapshot,h=d.source;d=d.subscribe;var y=Yo;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=s;var e=o(t._source);if(!ar(i,e)){e=n(t._source),ar(f,e)||(s(e),e=iu(y),l.mutableReadLanes|=e&l.pendingLanes),e=l.mutableReadLanes,l.entangledLanes|=e;for(var r=l.entanglements,a=e;0<a;){var u=31-Vt(a),c=1<<u;r[u]|=e,a&=~c}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=iu(y);l.mutableReadLanes|=r&l.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),ar(m,n)&&ar(h,t)&&ar(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:aa,lastRenderedState:f}).dispatch=s=Oa.bind(null,Yo,e),c.queue=e,c.baseQueue=null,f=ca(l,t,n),c.memoizedState=c.baseState=f),f}function fa(e,t,n){return sa(oa(),e,t,n)}function da(e){var t=la();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:aa,lastRenderedState:e}).dispatch=Oa.bind(null,Yo,e),[t.memoizedState,e]}function pa(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Yo.updateQueue)?(t={lastEffect:null},Yo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ma(e){return e={current:e},la().memoizedState=e}function ha(){return oa().memoizedState}function ya(e,t,n,r){var l=la();Yo.flags|=e,l.memoizedState=pa(1|t,n,void 0,void 0===r?null:r)}function ga(e,t,n,r){var l=oa();r=void 0===r?null:r;var o=void 0;if(null!==Xo){var a=Xo.memoizedState;if(o=a.destroy,null!==r&&na(r,a.deps))return void pa(t,n,o,r)}Yo.flags|=e,l.memoizedState=pa(1|t,n,o,r)}function va(e,t){return ya(516,4,e,t)}function ba(e,t){return ga(516,4,e,t)}function wa(e,t){return ga(4,2,e,t)}function ka(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Sa(e,t,n){return n=null!=n?n.concat([e]):null,ga(4,2,ka.bind(null,t,e),n)}function Ea(){}function xa(e,t){var n=oa();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&na(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function _a(e,t){var n=oa();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&na(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Ca(e,t){var n=Bl();Ul(98>n?98:n,(function(){e(!0)})),Ul(97<n?97:n,(function(){var n=Ko.transition;Ko.transition=1;try{e(!1),t()}finally{Ko.transition=n}}))}function Oa(e,t,n){var r=au(),l=iu(e),o={lane:l,action:n,eagerReducer:null,eagerState:null,next:null},a=t.pending;if(null===a?o.next=o:(o.next=a.next,a.next=o),t.pending=o,a=e.alternate,e===Yo||null!==a&&a===Yo)ea=Jo=!0;else{if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var i=t.lastRenderedState,u=a(i,n);if(o.eagerReducer=a,o.eagerState=u,ar(u,i))return}catch(e){}uu(e,l,r)}}var Pa={readContext:no,useCallback:ta,useContext:ta,useEffect:ta,useImperativeHandle:ta,useLayoutEffect:ta,useMemo:ta,useReducer:ta,useRef:ta,useState:ta,useDebugValue:ta,useDeferredValue:ta,useTransition:ta,useMutableSource:ta,useOpaqueIdentifier:ta,unstable_isNewReconciler:!1},Na={readContext:no,useCallback:function(e,t){return la().memoizedState=[e,void 0===t?null:t],e},useContext:no,useEffect:va,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ya(4,2,ka.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ya(4,2,e,t)},useMemo:function(e,t){var n=la();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=la();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Oa.bind(null,Yo,e),[r.memoizedState,e]},useRef:ma,useState:da,useDebugValue:Ea,useDeferredValue:function(e){var t=da(e),n=t[0],r=t[1];return va((function(){var t=Ko.transition;Ko.transition=1;try{r(e)}finally{Ko.transition=t}}),[e]),n},useTransition:function(){var e=da(!1),t=e[0];return ma(e=Ca.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=la();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},sa(r,e,t,n)},useOpaqueIdentifier:function(){if(Do){var e=!1,t=function(e){return{$$typeof:j,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Qr++).toString(36))),Error(a(355))})),n=da(t)[1];return 0==(2&Yo.mode)&&(Yo.flags|=516,pa(5,(function(){n("r:"+(Qr++).toString(36))}),void 0,null)),t}return da(t="r:"+(Qr++).toString(36)),t},unstable_isNewReconciler:!1},Ta={readContext:no,useCallback:xa,useContext:no,useEffect:ba,useImperativeHandle:Sa,useLayoutEffect:wa,useMemo:_a,useReducer:ia,useRef:ha,useState:function(){return ia(aa)},useDebugValue:Ea,useDeferredValue:function(e){var t=ia(aa),n=t[0],r=t[1];return ba((function(){var t=Ko.transition;Ko.transition=1;try{r(e)}finally{Ko.transition=t}}),[e]),n},useTransition:function(){var e=ia(aa)[0];return[ha().current,e]},useMutableSource:fa,useOpaqueIdentifier:function(){return ia(aa)[0]},unstable_isNewReconciler:!1},za={readContext:no,useCallback:xa,useContext:no,useEffect:ba,useImperativeHandle:Sa,useLayoutEffect:wa,useMemo:_a,useReducer:ua,useRef:ha,useState:function(){return ua(aa)},useDebugValue:Ea,useDeferredValue:function(e){var t=ua(aa),n=t[0],r=t[1];return ba((function(){var t=Ko.transition;Ko.transition=1;try{r(e)}finally{Ko.transition=t}}),[e]),n},useTransition:function(){var e=ua(aa)[0];return[ha().current,e]},useMutableSource:fa,useOpaqueIdentifier:function(){return ua(aa)[0]},unstable_isNewReconciler:!1},Ma=k.ReactCurrentOwner,Ra=!1;function La(e,t,n,r){t.child=null===e?xo(t,null,n,r):Eo(t,e.child,n,r)}function ja(e,t,n,r,l){n=n.render;var o=t.ref;return to(t,l),r=ra(e,t,n,r,o,l),null===e||Ra?(t.flags|=1,La(e,t,r,l),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~l,Ja(e,t,l))}function Ia(e,t,n,r,l,o){if(null===e){var a=n.type;return"function"!=typeof a||Au(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Wu(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Fa(e,t,a,r,l,o))}return a=e.child,0==(l&o)&&(l=a.memoizedProps,(n=null!==(n=n.compare)?n:ur)(l,r)&&e.ref===t.ref)?Ja(e,t,o):(t.flags|=1,(e=Bu(a,r)).ref=t.ref,e.return=t,t.child=e)}function Fa(e,t,n,r,l,o){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===t.ref){if(Ra=!1,0==(o&l))return t.lanes=e.lanes,Ja(e,t,o);0!=(16384&e.flags)&&(Ra=!0)}return Ba(e,t,n,r,o)}function Da(e,t,n){var r=t.pendingProps,l=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},yu(0,n);else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},yu(0,e),null;t.memoizedState={baseLanes:0},yu(0,null!==o?o.baseLanes:n)}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,yu(0,r);return La(e,t,l,n),t.child}function Aa(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Ba(e,t,n,r,l){var o=pl(n)?fl:cl.current;return o=dl(t,o),to(t,l),n=ra(e,t,n,r,o,l),null===e||Ra?(t.flags|=1,La(e,t,n,l),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~l,Ja(e,t,l))}function Wa(e,t,n,r,l){if(pl(n)){var o=!0;gl(t)}else o=!1;if(to(t,l),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),yo(t,n,r),vo(t,n,r,l),r=!0;else if(null===e){var a=t.stateNode,i=t.memoizedProps;a.props=i;var u=a.context,c=n.contextType;c="object"==typeof c&&null!==c?no(c):dl(t,c=pl(n)?fl:cl.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(i!==r||u!==c)&&go(t,a,r,c),ro=!1;var d=t.memoizedState;a.state=d,co(t,r,a,l),u=t.memoizedState,i!==r||d!==u||sl.current||ro?("function"==typeof s&&(po(t,n,s,r),u=t.memoizedState),(i=ro||ho(t,n,i,r,d,u,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.flags|=4)):("function"==typeof a.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=c,r=i):("function"==typeof a.componentDidMount&&(t.flags|=4),r=!1)}else{a=t.stateNode,oo(e,t),i=t.memoizedProps,c=t.type===t.elementType?i:ql(t.type,i),a.props=c,f=t.pendingProps,d=a.context,u="object"==typeof(u=n.contextType)&&null!==u?no(u):dl(t,u=pl(n)?fl:cl.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(i!==f||d!==u)&&go(t,a,r,u),ro=!1,d=t.memoizedState,a.state=d,co(t,r,a,l);var m=t.memoizedState;i!==f||d!==m||sl.current||ro?("function"==typeof p&&(po(t,n,p,r),m=t.memoizedState),(c=ro||ho(t,n,c,r,d,m,u))?(s||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,m,u),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,m,u)),"function"==typeof a.componentDidUpdate&&(t.flags|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof a.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=m),a.props=r,a.state=m,a.context=u,r=c):("function"!=typeof a.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Ua(e,t,n,r,o,l)}function Ua(e,t,n,r,l,o){Aa(e,t);var a=0!=(64&t.flags);if(!r&&!a)return l&&vl(t,n,!1),Ja(e,t,o);r=t.stateNode,Ma.current=t;var i=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&a?(t.child=Eo(t,e.child,null,o),t.child=Eo(t,null,i,o)):La(e,t,i,o),t.memoizedState=r.state,l&&vl(t,n,!0),t.child}function Va(e){var t=e.stateNode;t.pendingContext?hl(0,t.pendingContext,t.pendingContext!==t.context):t.context&&hl(0,t.context,!1),To(e,t.containerInfo)}var Ha,$a,Qa,qa={dehydrated:null,retryLane:0};function Ka(e,t,n){var r,l=t.pendingProps,o=Lo.current,a=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(a=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===l.fallback||!0===l.unstable_avoidThisFallback||(o|=1),il(Lo,1&o),null===e?(void 0!==l.fallback&&Wo(t),e=l.children,o=l.fallback,a?(e=Ga(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qa,e):"number"==typeof l.unstable_expectedLoadTime?(e=Ga(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qa,t.lanes=33554432,e):((n=Vu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,a?(l=function(e,t,n,r,l){var o=t.mode,a=e.child;e=a.sibling;var i={mode:"hidden",children:n};return 0==(2&o)&&t.child!==a?((n=t.child).childLanes=0,n.pendingProps=i,null!==(a=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=a,a.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Bu(a,i),null!==e?r=Bu(e,r):(r=Uu(r,o,l,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,l.children,l.fallback,n),a=t.child,o=e.child.memoizedState,a.memoizedState=null===o?{baseLanes:n}:{baseLanes:o.baseLanes|n},a.childLanes=e.childLanes&~n,t.memoizedState=qa,l):(n=function(e,t,n,r){var l=e.child;return e=l.sibling,n=Bu(l,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,l.children,n),t.memoizedState=null,n))}function Ga(e,t,n,r){var l=e.mode,o=e.child;return t={mode:"hidden",children:t},0==(2&l)&&null!==o?(o.childLanes=0,o.pendingProps=t):o=Vu(t,l,0,null),n=Uu(n,l,r,null),o.return=e,n.return=e,o.sibling=n,e.child=o,n}function Ya(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),eo(e.return,t)}function Xa(e,t,n,r,l,o){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:l,lastEffect:o}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=l,a.lastEffect=o)}function Za(e,t,n){var r=t.pendingProps,l=r.revealOrder,o=r.tail;if(La(e,t,r.children,n),0!=(2&(r=Lo.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ya(e,n);else if(19===e.tag)Ya(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(il(Lo,r),0==(2&t.mode))t.memoizedState=null;else switch(l){case"forwards":for(n=t.child,l=null;null!==n;)null!==(e=n.alternate)&&null===jo(e)&&(l=n),n=n.sibling;null===(n=l)?(l=t.child,t.child=null):(l=n.sibling,n.sibling=null),Xa(t,!1,l,n,o,t.lastEffect);break;case"backwards":for(n=null,l=t.child,t.child=null;null!==l;){if(null!==(e=l.alternate)&&null===jo(e)){t.child=l;break}e=l.sibling,l.sibling=n,n=l,l=e}Xa(t,!0,n,null,o,t.lastEffect);break;case"together":Xa(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Ja(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),ji|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Bu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Bu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function ei(e,t){if(!Do)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ti(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return pl(t.type)&&ml(),null;case 3:return zo(),al(sl),al(cl),Qo(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Vo(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Ro(t);var o=No(Po.current);if(n=t.type,null!==e&&null!=t.stateNode)$a(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(a(166));return null}if(e=No(Co.current),Vo(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[Kr]=t,r[Gr]=i,n){case"dialog":Cr("cancel",r),Cr("close",r);break;case"iframe":case"object":case"embed":Cr("load",r);break;case"video":case"audio":for(e=0;e<Sr.length;e++)Cr(Sr[e],r);break;case"source":Cr("error",r);break;case"img":case"image":case"link":Cr("error",r),Cr("load",r);break;case"details":Cr("toggle",r);break;case"input":ee(r,i),Cr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Cr("invalid",r);break;case"textarea":ue(r,i),Cr("invalid",r)}for(var c in Ee(n,i),e=null,i)i.hasOwnProperty(c)&&(o=i[c],"children"===c?"string"==typeof o?r.textContent!==o&&(e=["children",o]):"number"==typeof o&&r.textContent!==""+o&&(e=["children",""+o]):u.hasOwnProperty(c)&&null!=o&&"onScroll"===c&&Cr("scroll",r));switch(n){case"input":Y(r),re(r,i,!0);break;case"textarea":Y(r),se(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Ir)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(c=9===o.nodeType?o:o.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(n,{is:r.is}):(e=c.createElement(n),"select"===n&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,n),e[Kr]=t,e[Gr]=r,Ha(e,t),t.stateNode=e,c=xe(n,r),n){case"dialog":Cr("cancel",e),Cr("close",e),o=r;break;case"iframe":case"object":case"embed":Cr("load",e),o=r;break;case"video":case"audio":for(o=0;o<Sr.length;o++)Cr(Sr[o],e);o=r;break;case"source":Cr("error",e),o=r;break;case"img":case"image":case"link":Cr("error",e),Cr("load",e),o=r;break;case"details":Cr("toggle",e),o=r;break;case"input":ee(e,r),o=J(e,r),Cr("invalid",e);break;case"option":o=oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=l({},r,{value:void 0}),Cr("invalid",e);break;case"textarea":ue(e,r),o=ie(e,r),Cr("invalid",e);break;default:o=r}Ee(n,o);var s=o;for(i in s)if(s.hasOwnProperty(i)){var f=s[i];"style"===i?ke(e,f):"dangerouslySetInnerHTML"===i?null!=(f=f?f.__html:void 0)&&ye(e,f):"children"===i?"string"==typeof f?("textarea"!==n||""!==f)&&ge(e,f):"number"==typeof f&&ge(e,""+f):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(u.hasOwnProperty(i)?null!=f&&"onScroll"===i&&Cr("scroll",e):null!=f&&w(e,i,f,c))}switch(n){case"input":Y(e),re(e,r,!1);break;case"textarea":Y(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ae(e,!!r.multiple,i,!1):null!=r.defaultValue&&ae(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Ir)}Ar(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Qa(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));n=No(Po.current),No(Co.current),Vo(t)?(r=t.stateNode,n=t.memoizedProps,r[Kr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Kr]=t,t.stateNode=r)}return null;case 13:return al(Lo),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Vo(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Lo.current)?0===Mi&&(Mi=3):(0!==Mi&&3!==Mi||(Mi=4),null===Oi||0==(134217727&ji)&&0==(134217727&Ii)||du(Oi,Ni))),(r||n)&&(t.flags|=4),null);case 4:return zo(),null===e&&Pr(t.stateNode.containerInfo),null;case 10:return Jl(t),null;case 17:return pl(t.type)&&ml(),null;case 19:if(al(Lo),null===(r=t.memoizedState))return null;if(i=0!=(64&t.flags),null===(c=r.rendering))if(i)ei(r,!1);else{if(0!==Mi||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=jo(e))){for(t.flags|=64,ei(r,!1),null!==(i=c.updateQueue)&&(t.updateQueue=i,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(c=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=c.childLanes,i.lanes=c.lanes,i.child=c.child,i.memoizedProps=c.memoizedProps,i.memoizedState=c.memoizedState,i.updateQueue=c.updateQueue,i.type=c.type,e=c.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return il(Lo,1&Lo.current|2),t.child}e=e.sibling}null!==r.tail&&Al()>Bi&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432)}else{if(!i)if(null!==(e=jo(c))){if(t.flags|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ei(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!Do)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Al()-r.renderingStartTime>Bi&&1073741824!==n&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432);r.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=r.last)?n.sibling=c:t.child=c,r.last=c)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Al(),n.sibling=null,t=Lo.current,il(Lo,i?1&t|2:1&t),n):null;case 23:case 24:return gu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(a(156,t.tag))}function ni(e){switch(e.tag){case 1:pl(e.type)&&ml();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(zo(),al(sl),al(cl),Qo(),0!=(64&(t=e.flags)))throw Error(a(285));return e.flags=-4097&t|64,e;case 5:return Ro(e),null;case 13:return al(Lo),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return al(Lo),null;case 4:return zo(),null;case 10:return Jl(e),null;case 23:case 24:return gu(),null;default:return null}}function ri(e,t){try{var n="",r=t;do{n+=Q(r),r=r.return}while(r);var l=n}catch(e){l="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:l}}function li(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Ha=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},$a=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,No(Co.current);var a,i=null;switch(n){case"input":o=J(e,o),r=J(e,r),i=[];break;case"option":o=oe(e,o),r=oe(e,r),i=[];break;case"select":o=l({},o,{value:void 0}),r=l({},r,{value:void 0}),i=[];break;case"textarea":o=ie(e,o),r=ie(e,r),i=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=Ir)}for(f in Ee(n,r),n=null,o)if(!r.hasOwnProperty(f)&&o.hasOwnProperty(f)&&null!=o[f])if("style"===f){var c=o[f];for(a in c)c.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?i||(i=[]):(i=i||[]).push(f,null));for(f in r){var s=r[f];if(c=null!=o?o[f]:void 0,r.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(a in c)!c.hasOwnProperty(a)||s&&s.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in s)s.hasOwnProperty(a)&&c[a]!==s[a]&&(n||(n={}),n[a]=s[a])}else n||(i||(i=[]),i.push(f,n)),n=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(i=i||[]).push(f,s)):"children"===f?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Cr("scroll",e),i||c===s||(i=[])):"object"==typeof s&&null!==s&&s.$$typeof===j?s.toString():(i=i||[]).push(f,s))}n&&(i=i||[]).push("style",n);var f=i;(t.updateQueue=f)&&(t.flags|=4)}},Qa=function(e,t,n,r){n!==r&&(t.flags|=4)};var oi="function"==typeof WeakMap?WeakMap:Map;function ai(e,t,n){(n=ao(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Hi||(Hi=!0,$i=r),li(0,t)},n}function ii(e,t,n){(n=ao(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var l=t.value;n.payload=function(){return li(0,t),r(l)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Qi?Qi=new Set([this]):Qi.add(this),li(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ui="function"==typeof WeakSet?WeakSet:Set;function ci(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Lu(e,t)}else t.current=null}function si(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:ql(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Vr(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(a(163))}function fi(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var l=e;r=l.next,0!=(4&(l=l.tag))&&0!=(1&l)&&(zu(n,e),Tu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:ql(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&so(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}so(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Ar(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&kt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(a(163))}function di(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var l=n.memoizedProps.style;l=null!=l&&l.hasOwnProperty("display")?l.display:null,r.style.display=we("display",l)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function pi(e,t){if(wl&&"function"==typeof wl.onCommitFiberUnmount)try{wl.onCommitFiberUnmount(bl,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,l=r.destroy;if(r=r.tag,void 0!==l)if(0!=(4&r))zu(t,n);else{r=t;try{l()}catch(e){Lu(r,e)}}n=n.next}while(n!==e)}break;case 1:if(ci(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Lu(t,e)}break;case 5:ci(t);break;case 4:bi(e,t)}}function mi(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function hi(e){return 5===e.tag||3===e.tag||4===e.tag}function yi(e){e:{for(var t=e.return;null!==t;){if(hi(t))break e;t=t.return}throw Error(a(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.flags&&(ge(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?gi(e,n,t):vi(e,n,t)}function gi(e,t,n){var r=e.tag,l=5===r||6===r;if(l)e=l?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Ir));else if(4!==r&&null!==(e=e.child))for(gi(e,t,n),e=e.sibling;null!==e;)gi(e,t,n),e=e.sibling}function vi(e,t,n){var r=e.tag,l=5===r||6===r;if(l)e=l?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(vi(e,t,n),e=e.sibling;null!==e;)vi(e,t,n),e=e.sibling}function bi(e,t){for(var n,r,l=t,o=!1;;){if(!o){o=l.return;e:for(;;){if(null===o)throw Error(a(160));switch(n=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===l.tag||6===l.tag){e:for(var i=e,u=l,c=u;;)if(pi(i,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(i=n,u=l.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):n.removeChild(l.stateNode)}else if(4===l.tag){if(null!==l.child){n=l.stateNode.containerInfo,r=!0,l.child.return=l,l=l.child;continue}}else if(pi(e,l),null!==l.child){l.child.return=l,l=l.child;continue}if(l===t)break;for(;null===l.sibling;){if(null===l.return||l.return===t)return;4===(l=l.return).tag&&(o=!1)}l.sibling.return=l.return,l=l.sibling}}function wi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var l=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Gr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),xe(e,l),t=xe(e,r),l=0;l<o.length;l+=2){var i=o[l],u=o[l+1];"style"===i?ke(n,u):"dangerouslySetInnerHTML"===i?ye(n,u):"children"===i?ge(n,u):w(n,i,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":ce(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?ae(n,!!r.multiple,o,!1):e!==!!r.multiple&&(null!=r.defaultValue?ae(n,!!r.multiple,r.defaultValue,!0):ae(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,kt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Ai=Al(),di(t.child,!0)),void ki(t);case 19:return void ki(t);case 17:return;case 23:case 24:return void di(t,null!==t.memoizedState)}throw Error(a(163))}function ki(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ui),t.forEach((function(t){var r=Iu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function Si(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Ei=Math.ceil,xi=k.ReactCurrentDispatcher,_i=k.ReactCurrentOwner,Ci=0,Oi=null,Pi=null,Ni=0,Ti=0,zi=ol(0),Mi=0,Ri=null,Li=0,ji=0,Ii=0,Fi=0,Di=null,Ai=0,Bi=1/0;function Wi(){Bi=Al()+500}var Ui,Vi=null,Hi=!1,$i=null,Qi=null,qi=!1,Ki=null,Gi=90,Yi=[],Xi=[],Zi=null,Ji=0,eu=null,tu=-1,nu=0,ru=0,lu=null,ou=!1;function au(){return 0!=(48&Ci)?Al():-1!==tu?tu:tu=Al()}function iu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Bl()?1:2;if(0===nu&&(nu=Li),0!==Ql.transition){0!==ru&&(ru=null!==Di?Di.pendingLanes:0),e=nu;var t=4186112&~ru;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Bl(),e=At(0!=(4&Ci)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nu)}function uu(e,t,n){if(50<Ji)throw Ji=0,eu=null,Error(a(185));if(null===(e=cu(e,t)))return null;Ut(e,t,n),e===Oi&&(Ii|=t,4===Mi&&du(e,Ni));var r=Bl();1===t?0!=(8&Ci)&&0==(48&Ci)?pu(e):(su(e,n),0===Ci&&(Wi(),Hl())):(0==(4&Ci)||98!==r&&99!==r||(null===Zi?Zi=new Set([e]):Zi.add(e)),su(e,n)),Di=e}function cu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function su(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,l=e.pingedLanes,o=e.expirationTimes,i=e.pendingLanes;0<i;){var u=31-Vt(i),c=1<<u,s=o[u];if(-1===s){if(0==(c&r)||0!=(c&l)){s=t,It(c);var f=jt;o[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);i&=~c}if(r=Ft(e,e===Oi?Ni:0),t=jt,0===r)null!==n&&(n!==Rl&&El(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Rl&&El(n)}15===t?(n=pu.bind(null,e),null===jl?(jl=[n],Il=Sl(Pl,$l)):jl.push(n),n=Rl):n=14===t?Vl(99,pu.bind(null,e)):Vl(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(a(358,e))}}(t),fu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function fu(e){if(tu=-1,ru=nu=0,0!=(48&Ci))throw Error(a(327));var t=e.callbackNode;if(Nu()&&e.callbackNode!==t)return null;var n=Ft(e,e===Oi?Ni:0);if(0===n)return null;var r=n,l=Ci;Ci|=16;var o=wu();for(Oi===e&&Ni===r||(Wi(),vu(e,r));;)try{Eu();break}catch(t){bu(e,t)}if(Zl(),xi.current=o,Ci=l,null!==Pi?r=0:(Oi=null,Ni=0,r=Mi),0!=(Li&Ii))vu(e,0);else if(0!==r){if(2===r&&(Ci|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(n=Dt(e))&&(r=ku(e,n))),1===r)throw t=Ri,vu(e,0),du(e,n),su(e,Al()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(a(345));case 2:Cu(e);break;case 3:if(du(e,n),(62914560&n)===n&&10<(r=Ai+500-Al())){if(0!==Ft(e,0))break;if(((l=e.suspendedLanes)&n)!==n){au(),e.pingedLanes|=e.suspendedLanes&l;break}e.timeoutHandle=Wr(Cu.bind(null,e),r);break}Cu(e);break;case 4:if(du(e,n),(4186112&n)===n)break;for(r=e.eventTimes,l=-1;0<n;){var i=31-Vt(n);o=1<<i,(i=r[i])>l&&(l=i),n&=~o}if(n=l,10<(n=(120>(n=Al()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Ei(n/1960))-n)){e.timeoutHandle=Wr(Cu.bind(null,e),n);break}Cu(e);break;case 5:Cu(e);break;default:throw Error(a(329))}}return su(e,Al()),e.callbackNode===t?fu.bind(null,e):null}function du(e,t){for(t&=~Fi,t&=~Ii,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Vt(t),r=1<<n;e[n]=-1,t&=~r}}function pu(e){if(0!=(48&Ci))throw Error(a(327));if(Nu(),e===Oi&&0!=(e.expiredLanes&Ni)){var t=Ni,n=ku(e,t);0!=(Li&Ii)&&(n=ku(e,t=Ft(e,t)))}else n=ku(e,t=Ft(e,0));if(0!==e.tag&&2===n&&(Ci|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(t=Dt(e))&&(n=ku(e,t))),1===n)throw n=Ri,vu(e,0),du(e,t),su(e,Al()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Cu(e),su(e,Al()),null}function mu(e,t){var n=Ci;Ci|=1;try{return e(t)}finally{0===(Ci=n)&&(Wi(),Hl())}}function hu(e,t){var n=Ci;Ci&=-2,Ci|=8;try{return e(t)}finally{0===(Ci=n)&&(Wi(),Hl())}}function yu(e,t){il(zi,Ti),Ti|=t,Li|=t}function gu(){Ti=zi.current,al(zi)}function vu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Ur(n)),null!==Pi)for(n=Pi.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ml();break;case 3:zo(),al(sl),al(cl),Qo();break;case 5:Ro(r);break;case 4:zo();break;case 13:case 19:al(Lo);break;case 10:Jl(r);break;case 23:case 24:gu()}n=n.return}Oi=e,Pi=Bu(e.current,null),Ni=Ti=Li=t,Mi=0,Ri=null,Fi=Ii=ji=0}function bu(e,t){for(;;){var n=Pi;try{if(Zl(),qo.current=Pa,Jo){for(var r=Yo.memoizedState;null!==r;){var l=r.queue;null!==l&&(l.pending=null),r=r.next}Jo=!1}if(Go=0,Zo=Xo=Yo=null,ea=!1,_i.current=null,null===n||null===n.return){Mi=1,Ri=t,Pi=null;break}e:{var o=e,a=n.return,i=n,u=t;if(t=Ni,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u;if(0==(2&i.mode)){var s=i.alternate;s?(i.updateQueue=s.updateQueue,i.memoizedState=s.memoizedState,i.lanes=s.lanes):(i.updateQueue=null,i.memoizedState=null)}var f=0!=(1&Lo.current),d=a;do{var p;if(p=13===d.tag){var m=d.memoizedState;if(null!==m)p=null!==m.dehydrated;else{var h=d.memoizedProps;p=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!f)}}if(p){var y=d.updateQueue;if(null===y){var g=new Set;g.add(c),d.updateQueue=g}else y.add(c);if(0==(2&d.mode)){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var v=ao(-1,1);v.tag=2,io(i,v)}i.lanes|=1;break e}u=void 0,i=t;var b=o.pingCache;if(null===b?(b=o.pingCache=new oi,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(i)){u.add(i);var w=ju.bind(null,o,c,i);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((q(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Mi&&(Mi=2),u=ri(u,i),d=a;do{switch(d.tag){case 3:o=u,d.flags|=4096,t&=-t,d.lanes|=t,uo(d,ai(0,o,t));break e;case 1:o=u;var k=d.type,S=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==S&&"function"==typeof S.componentDidCatch&&(null===Qi||!Qi.has(S)))){d.flags|=4096,t&=-t,d.lanes|=t,uo(d,ii(d,o,t));break e}}d=d.return}while(null!==d)}_u(n)}catch(e){t=e,Pi===n&&null!==n&&(Pi=n=n.return);continue}break}}function wu(){var e=xi.current;return xi.current=Pa,null===e?Pa:e}function ku(e,t){var n=Ci;Ci|=16;var r=wu();for(Oi===e&&Ni===t||vu(e,t);;)try{Su();break}catch(t){bu(e,t)}if(Zl(),Ci=n,xi.current=r,null!==Pi)throw Error(a(261));return Oi=null,Ni=0,Mi}function Su(){for(;null!==Pi;)xu(Pi)}function Eu(){for(;null!==Pi&&!xl();)xu(Pi)}function xu(e){var t=Ui(e.alternate,e,Ti);e.memoizedProps=e.pendingProps,null===t?_u(e):Pi=t,_i.current=null}function _u(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=ti(n,t,Ti)))return void(Pi=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Ti)||0==(4&n.mode)){for(var r=0,l=n.child;null!==l;)r|=l.lanes|l.childLanes,l=l.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ni(t)))return n.flags&=2047,void(Pi=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Pi=t);Pi=t=e}while(null!==t);0===Mi&&(Mi=5)}function Cu(e){var t=Bl();return Ul(99,Ou.bind(null,e,t)),null}function Ou(e,t){do{Nu()}while(null!==Ki);if(0!=(48&Ci))throw Error(a(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(a(177));e.callbackNode=null;var r=n.lanes|n.childLanes,l=r,o=e.pendingLanes&~l;e.pendingLanes=l,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=l,e.mutableReadLanes&=l,e.entangledLanes&=l,l=e.entanglements;for(var i=e.eventTimes,u=e.expirationTimes;0<o;){var c=31-Vt(o),s=1<<c;l[c]=0,i[c]=-1,u[c]=-1,o&=~s}if(null!==Zi&&0==(24&r)&&Zi.has(e)&&Zi.delete(e),e===Oi&&(Pi=Oi=null,Ni=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(l=Ci,Ci|=32,_i.current=null,Fr=Kt,pr(i=dr())){if("selectionStart"in i)u={start:i.selectionStart,end:i.selectionEnd};else e:if(u=(u=i.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,o=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,m=0,h=0,y=i,g=null;t:for(;;){for(var v;y!==u||0!==o&&3!==y.nodeType||(d=f+o),y!==c||0!==s&&3!==y.nodeType||(p=f+s),3===y.nodeType&&(f+=y.nodeValue.length),null!==(v=y.firstChild);)g=y,y=v;for(;;){if(y===i)break t;if(g===u&&++m===o&&(d=f),g===c&&++h===s&&(p=f),null!==(v=y.nextSibling))break;g=(y=g).parentNode}y=v}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Dr={focusedElem:i,selectionRange:u},Kt=!1,lu=null,ou=!1,Vi=r;do{try{Pu()}catch(e){if(null===Vi)throw Error(a(330));Lu(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);lu=null,Vi=r;do{try{for(i=e;null!==Vi;){var b=Vi.flags;if(16&b&&ge(Vi.stateNode,""),128&b){var w=Vi.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:yi(Vi),Vi.flags&=-3;break;case 6:yi(Vi),Vi.flags&=-3,wi(Vi.alternate,Vi);break;case 1024:Vi.flags&=-1025;break;case 1028:Vi.flags&=-1025,wi(Vi.alternate,Vi);break;case 4:wi(Vi.alternate,Vi);break;case 8:bi(i,u=Vi);var S=u.alternate;mi(u),null!==S&&mi(S)}Vi=Vi.nextEffect}}catch(e){if(null===Vi)throw Error(a(330));Lu(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);if(k=Dr,w=dr(),b=k.focusedElem,i=k.selectionRange,w!==b&&b&&b.ownerDocument&&fr(b.ownerDocument.documentElement,b)){null!==i&&pr(b)&&(w=i.start,void 0===(k=i.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,S=Math.min(i.start,u),i=void 0===i.end?S:Math.min(i.end,u),!k.extend&&S>i&&(u=i,i=S,S=u),u=sr(b,S),o=sr(b,i),u&&o&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==o.node||k.focusOffset!==o.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),S>i?(k.addRange(w),k.extend(o.node,o.offset)):(w.setEnd(o.node,o.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Kt=!!Fr,Dr=Fr=null,e.current=n,Vi=r;do{try{for(b=e;null!==Vi;){var E=Vi.flags;if(36&E&&fi(b,Vi.alternate,Vi),128&E){w=void 0;var x=Vi.ref;if(null!==x){var _=Vi.stateNode;switch(Vi.tag){case 5:w=_;break;default:w=_}"function"==typeof x?x(w):x.current=w}}Vi=Vi.nextEffect}}catch(e){if(null===Vi)throw Error(a(330));Lu(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);Vi=null,Ll(),Ci=l}else e.current=n;if(qi)qi=!1,Ki=e,Gi=t;else for(Vi=r;null!==Vi;)t=Vi.nextEffect,Vi.nextEffect=null,8&Vi.flags&&((E=Vi).sibling=null,E.stateNode=null),Vi=t;if(0===(r=e.pendingLanes)&&(Qi=null),1===r?e===eu?Ji++:(Ji=0,eu=e):Ji=0,n=n.stateNode,wl&&"function"==typeof wl.onCommitFiberRoot)try{wl.onCommitFiberRoot(bl,n,void 0,64==(64&n.current.flags))}catch(e){}if(su(e,Al()),Hi)throw Hi=!1,e=$i,$i=null,e;return 0!=(8&Ci)||Hl(),null}function Pu(){for(;null!==Vi;){var e=Vi.alternate;ou||null===lu||(0!=(8&Vi.flags)?Je(Vi,lu)&&(ou=!0):13===Vi.tag&&Si(e,Vi)&&Je(Vi,lu)&&(ou=!0));var t=Vi.flags;0!=(256&t)&&si(e,Vi),0==(512&t)||qi||(qi=!0,Vl(97,(function(){return Nu(),null}))),Vi=Vi.nextEffect}}function Nu(){if(90!==Gi){var e=97<Gi?97:Gi;return Gi=90,Ul(e,Mu)}return!1}function Tu(e,t){Yi.push(t,e),qi||(qi=!0,Vl(97,(function(){return Nu(),null})))}function zu(e,t){Xi.push(t,e),qi||(qi=!0,Vl(97,(function(){return Nu(),null})))}function Mu(){if(null===Ki)return!1;var e=Ki;if(Ki=null,0!=(48&Ci))throw Error(a(331));var t=Ci;Ci|=32;var n=Xi;Xi=[];for(var r=0;r<n.length;r+=2){var l=n[r],o=n[r+1],i=l.destroy;if(l.destroy=void 0,"function"==typeof i)try{i()}catch(e){if(null===o)throw Error(a(330));Lu(o,e)}}for(n=Yi,Yi=[],r=0;r<n.length;r+=2){l=n[r],o=n[r+1];try{var u=l.create;l.destroy=u()}catch(e){if(null===o)throw Error(a(330));Lu(o,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Ci=t,Hl(),!0}function Ru(e,t,n){io(e,t=ai(0,t=ri(n,t),1)),t=au(),null!==(e=cu(e,1))&&(Ut(e,1,t),su(e,t))}function Lu(e,t){if(3===e.tag)Ru(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Ru(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Qi||!Qi.has(r))){var l=ii(n,e=ri(t,e),1);if(io(n,l),l=au(),null!==(n=cu(n,1)))Ut(n,1,l),su(n,l);else if("function"==typeof r.componentDidCatch&&(null===Qi||!Qi.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function ju(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=au(),e.pingedLanes|=e.suspendedLanes&n,Oi===e&&(Ni&n)===n&&(4===Mi||3===Mi&&(62914560&Ni)===Ni&&500>Al()-Ai?vu(e,0):Fi|=n),su(e,t)}function Iu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Bl()?1:2:(0===nu&&(nu=Li),0===(t=Bt(62914560&~nu))&&(t=4194304))),n=au(),null!==(e=cu(e,t))&&(Ut(e,t,n),su(e,n))}function Fu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Du(e,t,n,r){return new Fu(e,t,n,r)}function Au(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Bu(e,t){var n=e.alternate;return null===n?((n=Du(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Wu(e,t,n,r,l,o){var i=2;if(r=e,"function"==typeof e)Au(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case x:return Uu(n.children,l,o,t);case I:i=8,l|=16;break;case _:i=8,l|=1;break;case C:return(e=Du(12,n,t,8|l)).elementType=C,e.type=C,e.lanes=o,e;case T:return(e=Du(13,n,t,l)).type=T,e.elementType=T,e.lanes=o,e;case z:return(e=Du(19,n,t,l)).elementType=z,e.lanes=o,e;case F:return Vu(n,l,o,t);case D:return(e=Du(24,n,t,l)).elementType=D,e.lanes=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case O:i=10;break e;case P:i=9;break e;case N:i=11;break e;case M:i=14;break e;case R:i=16,r=null;break e;case L:i=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Du(i,n,t,l)).elementType=e,t.type=r,t.lanes=o,t}function Uu(e,t,n,r){return(e=Du(7,e,r,t)).lanes=n,e}function Vu(e,t,n,r){return(e=Du(23,e,r,t)).elementType=F,e.lanes=n,e}function Hu(e,t,n){return(e=Du(6,e,null,t)).lanes=n,e}function $u(e,t,n){return(t=Du(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Qu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Wt(0),this.expirationTimes=Wt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Wt(0),this.mutableSourceEagerHydrationData=null}function qu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:E,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Ku(e,t,n,r){var l=t.current,o=au(),i=iu(l);e:if(n){t:{if(Ge(n=n._reactInternals)!==n||1!==n.tag)throw Error(a(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(pl(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(a(171))}if(1===n.tag){var c=n.type;if(pl(c)){n=yl(n,c,u);break e}}n=u}else n=ul;return null===t.context?t.context=n:t.pendingContext=n,(t=ao(o,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),io(l,t),uu(l,i,o),i}function Gu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Yu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Xu(e,t){Yu(e,t),(e=e.alternate)&&Yu(e,t)}function Zu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Qu(e,t,null!=n&&!0===n.hydrate),t=Du(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,lo(t),e[Yr]=n.current,Pr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var l=(t=r[e])._getVersion;l=l(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,l]:n.mutableSourceEagerHydrationData.push(t,l)}this._internalRoot=n}function Ju(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function ec(e,t,n,r,l){var o=n._reactRootContainer;if(o){var a=o._internalRoot;if("function"==typeof l){var i=l;l=function(){var e=Gu(a);i.call(e)}}Ku(t,a,e,l)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Zu(e,0,t?{hydrate:!0}:void 0)}(n,r),a=o._internalRoot,"function"==typeof l){var u=l;l=function(){var e=Gu(a);u.call(e)}}hu((function(){Ku(t,a,e,l)}))}return Gu(a)}function tc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ju(t))throw Error(a(200));return qu(e,t,null,n)}Ui=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||sl.current)Ra=!0;else{if(0==(n&r)){switch(Ra=!1,t.tag){case 3:Va(t),Ho();break;case 5:Mo(t);break;case 1:pl(t.type)&&gl(t);break;case 4:To(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var l=t.type._context;il(Kl,l._currentValue),l._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Ka(e,t,n):(il(Lo,1&Lo.current),null!==(t=Ja(e,t,n))?t.sibling:null);il(Lo,1&Lo.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Za(e,t,n);t.flags|=64}if(null!==(l=t.memoizedState)&&(l.rendering=null,l.tail=null,l.lastEffect=null),il(Lo,Lo.current),r)break;return null;case 23:case 24:return t.lanes=0,Da(e,t,n)}return Ja(e,t,n)}Ra=0!=(16384&e.flags)}else Ra=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,l=dl(t,cl.current),to(t,n),l=ra(null,t,r,e,l,n),t.flags|=1,"object"==typeof l&&null!==l&&"function"==typeof l.render&&void 0===l.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,pl(r)){var o=!0;gl(t)}else o=!1;t.memoizedState=null!==l.state&&void 0!==l.state?l.state:null,lo(t);var i=r.getDerivedStateFromProps;"function"==typeof i&&po(t,r,i,e),l.updater=mo,t.stateNode=l,l._reactInternals=t,vo(t,r,e,n),t=Ua(null,t,r,!0,o,n)}else t.tag=0,La(null,t,l,n),t=t.child;return t;case 16:l=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,l=(o=l._init)(l._payload),t.type=l,o=t.tag=function(e){if("function"==typeof e)return Au(e)?1:0;if(null!=e){if((e=e.$$typeof)===N)return 11;if(e===M)return 14}return 2}(l),e=ql(l,e),o){case 0:t=Ba(null,t,l,e,n);break e;case 1:t=Wa(null,t,l,e,n);break e;case 11:t=ja(null,t,l,e,n);break e;case 14:t=Ia(null,t,l,ql(l.type,e),r,n);break e}throw Error(a(306,l,""))}return t;case 0:return r=t.type,l=t.pendingProps,Ba(e,t,r,l=t.elementType===r?l:ql(r,l),n);case 1:return r=t.type,l=t.pendingProps,Wa(e,t,r,l=t.elementType===r?l:ql(r,l),n);case 3:if(Va(t),r=t.updateQueue,null===e||null===r)throw Error(a(282));if(r=t.pendingProps,l=null!==(l=t.memoizedState)?l.element:null,oo(e,t),co(t,r,null,n),(r=t.memoizedState.element)===l)Ho(),t=Ja(e,t,n);else{if((o=(l=t.stateNode).hydrate)&&(Fo=Hr(t.stateNode.containerInfo.firstChild),Io=t,o=Do=!0),o){if(null!=(e=l.mutableSourceEagerHydrationData))for(l=0;l<e.length;l+=2)(o=e[l])._workInProgressVersionPrimary=e[l+1],$o.push(o);for(n=xo(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else La(e,t,r,n),Ho();t=t.child}return t;case 5:return Mo(t),null===e&&Wo(t),r=t.type,l=t.pendingProps,o=null!==e?e.memoizedProps:null,i=l.children,Br(r,l)?i=null:null!==o&&Br(r,o)&&(t.flags|=16),Aa(e,t),La(e,t,i,n),t.child;case 6:return null===e&&Wo(t),null;case 13:return Ka(e,t,n);case 4:return To(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Eo(t,null,r,n):La(e,t,r,n),t.child;case 11:return r=t.type,l=t.pendingProps,ja(e,t,r,l=t.elementType===r?l:ql(r,l),n);case 7:return La(e,t,t.pendingProps,n),t.child;case 8:case 12:return La(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,l=t.pendingProps,i=t.memoizedProps,o=l.value;var u=t.type._context;if(il(Kl,u._currentValue),u._currentValue=o,null!==i)if(u=i.value,0==(o=ar(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(i.children===l.children&&!sl.current){t=Ja(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){i=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&o)){1===u.tag&&((s=ao(-1,n&-n)).tag=2,io(u,s)),u.lanes|=n,null!==(s=u.alternate)&&(s.lanes|=n),eo(u.return,n),c.lanes|=n;break}s=s.next}}else i=10===u.tag&&u.type===t.type?null:u.child;if(null!==i)i.return=u;else for(i=u;null!==i;){if(i===t){i=null;break}if(null!==(u=i.sibling)){u.return=i.return,i=u;break}i=i.return}u=i}La(e,t,l.children,n),t=t.child}return t;case 9:return l=t.type,r=(o=t.pendingProps).children,to(t,n),r=r(l=no(l,o.unstable_observedBits)),t.flags|=1,La(e,t,r,n),t.child;case 14:return o=ql(l=t.type,t.pendingProps),Ia(e,t,l,o=ql(l.type,o),r,n);case 15:return Fa(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:ql(r,l),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,pl(r)?(e=!0,gl(t)):e=!1,to(t,n),yo(t,r,l),vo(t,r,l,n),Ua(null,t,r,!0,e,n);case 19:return Za(e,t,n);case 23:case 24:return Da(e,t,n)}throw Error(a(156,t.tag))},Zu.prototype.render=function(e){Ku(e,this._internalRoot,null,null)},Zu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ku(null,e,null,(function(){t[Yr]=null}))},et=function(e){13===e.tag&&(uu(e,4,au()),Xu(e,4))},tt=function(e){13===e.tag&&(uu(e,67108864,au()),Xu(e,67108864))},nt=function(e){if(13===e.tag){var t=au(),n=iu(e);uu(e,n,t),Xu(e,n)}},rt=function(e,t){return t()},Ce=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var l=tl(r);if(!l)throw Error(a(90));X(r),ne(r,l)}}}break;case"textarea":ce(e,n);break;case"select":null!=(t=n.value)&&ae(e,!!n.multiple,t,!1)}},Me=mu,Re=function(e,t,n,r,l){var o=Ci;Ci|=4;try{return Ul(98,e.bind(null,t,n,r,l))}finally{0===(Ci=o)&&(Wi(),Hl())}},Le=function(){0==(49&Ci)&&(function(){if(null!==Zi){var e=Zi;Zi=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,su(e,Al())}))}Hl()}(),Nu())},je=function(e,t){var n=Ci;Ci|=2;try{return e(t)}finally{0===(Ci=n)&&(Wi(),Hl())}};var nc={Events:[Jr,el,tl,Te,ze,Nu,{current:!1}]},rc={findFiberByHostInstance:Zr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},lc={bundleType:rc.bundleType,version:rc.version,rendererPackageName:rc.rendererPackageName,rendererConfig:rc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:rc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var oc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!oc.isDisabled&&oc.supportsFiber)try{bl=oc.inject(lc),wl=oc}catch(he){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nc,t.createPortal=tc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return null===(e=Ze(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Ci;if(0!=(48&n))return e(t);Ci|=1;try{if(e)return Ul(99,e.bind(null,t))}finally{Ci=n,Hl()}},t.hydrate=function(e,t,n){if(!Ju(t))throw Error(a(200));return ec(null,e,t,!0,n)},t.render=function(e,t,n){if(!Ju(t))throw Error(a(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ju(e))throw Error(a(40));return!!e._reactRootContainer&&(hu((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[Yr]=null}))})),!0)},t.unstable_batchedUpdates=mu,t.unstable_createPortal=function(e,t){return tc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Ju(n))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return ec(e,t,n,!1,r)},t.version="17.0.1"},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:(e,t,n)=>{"use strict";var r=n(418),l=60103,o=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var a=60109,i=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;l=f("react.element"),o=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),a=f("react.provider"),i=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h={};function y(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||m}function g(){}function v(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||m}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},g.prototype=y.prototype;var b=v.prototype=new g;b.constructor=v,r(b,y.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,n){var r,o={},a=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(a=""+t.key),t)k.call(t,r)&&!S.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:l,type:e,key:a,ref:i,props:o,_owner:w.current}}function x(e){return"object"==typeof e&&null!==e&&e.$$typeof===l}var _=/\/+/g;function C(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function O(e,t,n,r,a){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case l:case o:u=!0}}if(u)return a=a(u=e),e=""===r?"."+C(u,0):r,Array.isArray(a)?(n="",null!=e&&(n=e.replace(_,"$&/")+"/"),O(a,t,n,"",(function(e){return e}))):null!=a&&(x(a)&&(a=function(e,t){return{$$typeof:l,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(a,n+(!a.key||u&&u.key===a.key?"":(""+a.key).replace(_,"$&/")+"/")+e)),t.push(a)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=r+C(i=e[c],c);u+=O(i,t,n,s,a)}else if("function"==typeof(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(i=e.next()).done;)u+=O(i=i.value,t,n,s=r+C(i,c++),a);else if("object"===i)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function P(e,t,n){if(null==e)return e;var r=[],l=0;return O(e,r,"","",(function(e){return t.call(n,e,l++)})),r}function N(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var T={current:null};function z(){var e=T.current;if(null===e)throw Error(p(321));return e}var M={ReactCurrentDispatcher:T,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:P,forEach:function(e,t,n){P(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return P(e,(function(){t++})),t},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!x(e))throw Error(p(143));return e}},t.Component=y,t.PureComponent=v,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=M,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var o=r({},e.props),a=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=w.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!S.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:l,type:e.type,key:a,ref:i,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:a,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=x,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:N}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return z().useCallback(e,t)},t.useContext=function(e,t){return z().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return z().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return z().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return z().useLayoutEffect(e,t)},t.useMemo=function(e,t){return z().useMemo(e,t)},t.useReducer=function(e,t,n){return z().useReducer(e,t,n)},t.useRef=function(e){return z().useRef(e)},t.useState=function(e){return z().useState(e)},t.version="17.0.1"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";var n,r,l,o;if("object"==typeof performance&&"function"==typeof performance.now){var a=performance;t.unstable_now=function(){return a.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(f,0))},r=function(e,t){s=setTimeout(e,t)},l=function(){clearTimeout(s)},t.unstable_shouldYield=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var m=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof m&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var h=!1,y=null,g=-1,v=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):v=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==y){var e=t.unstable_now();b=e+v;try{y(!0,e)?k.postMessage(null):(h=!1,y=null)}catch(e){throw k.postMessage(null),e}}else h=!1},n=function(e){y=e,h||(h=!0,k.postMessage(null))},r=function(e,n){g=d((function(){e(t.unstable_now())}),n)},l=function(){p(g),g=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,l=e[r];if(!(void 0!==l&&0<_(l,t)))break e;e[r]=t,e[n]=l,n=r}}function E(e){return void 0===(e=e[0])?null:e}function x(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,l=e.length;r<l;){var o=2*(r+1)-1,a=e[o],i=o+1,u=e[i];if(void 0!==a&&0>_(a,n))void 0!==u&&0>_(u,a)?(e[r]=u,e[i]=n,r=i):(e[r]=a,e[o]=n,r=o);else{if(!(void 0!==u&&0>_(u,n)))break e;e[r]=u,e[i]=n,r=i}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var C=[],O=[],P=1,N=null,T=3,z=!1,M=!1,R=!1;function L(e){for(var t=E(O);null!==t;){if(null===t.callback)x(O);else{if(!(t.startTime<=e))break;x(O),t.sortIndex=t.expirationTime,S(C,t)}t=E(O)}}function j(e){if(R=!1,L(e),!M)if(null!==E(C))M=!0,n(I);else{var t=E(O);null!==t&&r(j,t.startTime-e)}}function I(e,n){M=!1,R&&(R=!1,l()),z=!0;var o=T;try{for(L(n),N=E(C);null!==N&&(!(N.expirationTime>n)||e&&!t.unstable_shouldYield());){var a=N.callback;if("function"==typeof a){N.callback=null,T=N.priorityLevel;var i=a(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?N.callback=i:N===E(C)&&x(C),L(n)}else x(C);N=E(C)}if(null!==N)var u=!0;else{var c=E(O);null!==c&&r(j,c.startTime-n),u=!1}return u}finally{N=null,T=o,z=!1}}var F=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){M||z||(M=!0,n(I))},t.unstable_getCurrentPriorityLevel=function(){return T},t.unstable_getFirstCallbackNode=function(){return E(C)},t.unstable_next=function(e){switch(T){case 1:case 2:case 3:var t=3;break;default:t=T}var n=T;T=t;try{return e()}finally{T=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=F,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=T;T=e;try{return t()}finally{T=n}},t.unstable_scheduleCallback=function(e,o,a){var i=t.unstable_now();switch(a="object"==typeof a&&null!==a&&"number"==typeof(a=a.delay)&&0<a?i+a:i,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:P++,callback:o,priorityLevel:e,startTime:a,expirationTime:u=a+u,sortIndex:-1},a>i?(e.sortIndex=a,S(O,e),null===E(C)&&e===E(O)&&(R?l():R=!0,r(j,a-i))):(e.sortIndex=u,S(C,e),M||z||(M=!0,n(I))),e},t.unstable_wrapCallback=function(e){var t=T;return function(){var n=T;T=t;try{return e.apply(this,arguments)}finally{T=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},887:e=>{"use strict";e.exports=function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}}},t={};function n(r){if(t[r])return t[r].exports;var l=t[r]={exports:{}};return e[r](l,l.exports,n),l.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{"use strict";var e=n(294),t=n(935);const r=n.p+"24bab5d633e36ca8d17edc63164cf934.jpg";var l=n(887),o=n.n(l),a=n(272),i=n.n(a);function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){c(e,t,n[t])}))}return e}function f(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var d=/([A-Z])/g,p=function(e){return"-".concat(e.toLowerCase())},m={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},h=["Webkit","ms","Moz","O"];Object.keys(m).forEach((function(e){h.forEach((function(t){m[function(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}(t,e)]=m[e]}))}));var y=function(e,t){return"number"==typeof t?m[e]?""+t:t+"px":""+t},g=function(e,t){return b(y(e,t))},v=function(e,t){return o()(e).toString(36)},b=function(e){return"!"===e[e.length-10]&&" !important"===e.slice(-11)?e:"".concat(e," !important")},w="undefined"!=typeof Map,k=function(){function e(){this.elements={},this.keyOrder=[]}var t=e.prototype;return t.forEach=function(e){for(var t=0;t<this.keyOrder.length;t++)e(this.elements[this.keyOrder[t]],this.keyOrder[t])},t.set=function(t,n,r){if(this.elements.hasOwnProperty(t)){if(r){var l=this.keyOrder.indexOf(t);this.keyOrder.splice(l,1),this.keyOrder.push(t)}}else this.keyOrder.push(t);if(null!=n){if(w&&n instanceof Map||n instanceof e){var o=this.elements.hasOwnProperty(t)?this.elements[t]:new e;return n.forEach((function(e,t){o.set(t,e,r)})),void(this.elements[t]=o)}if(Array.isArray(n)||"object"!==u(n))this.elements[t]=n;else{for(var a=this.elements.hasOwnProperty(t)?this.elements[t]:new e,i=Object.keys(n),c=0;c<i.length;c+=1)a.set(i[c],n[i[c]],r);this.elements[t]=a}}else this.elements[t]=n},t.get=function(e){return this.elements[e]},t.has=function(e){return this.elements.hasOwnProperty(e)},t.addStyleType=function(t){var n=this;if(w&&t instanceof Map||t instanceof e)t.forEach((function(e,t){n.set(t,e,!0)}));else for(var r=Object.keys(t),l=0;l<r.length;l++)this.set(r[l],t[r[l]],!0)},e}();function S(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function E(e,t){return e(t={exports:{}},t.exports),t.exports}var x=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.charAt(0).toUpperCase()+e.slice(1)}}));S(x);var _=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(e.hasOwnProperty(t)){for(var l={},o=e[t],a=(0,r.default)(t),i=Object.keys(n),u=0;u<i.length;u++){var c=i[u];if(c===t)for(var s=0;s<o.length;s++)l[o[s]+a]=n[t];l[c]=n[c]}return l}return n};var n,r=(n=x)&&n.__esModule?n:{default:n}}));S(_);var C=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r,l){for(var o=0,a=e.length;o<a;++o){var i=e[o](t,n,r,l);if(i)return i}}}));S(C);var O=E((function(e,t){function n(e,t){-1===e.indexOf(t)&&e.push(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(Array.isArray(t))for(var r=0,l=t.length;r<l;++r)n(e,t[r]);else n(e,t)}}));S(O);var P=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e instanceof Object&&!Array.isArray(e)}}));S(P);var N=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.prefixMap,a=e.plugins;return function e(i){for(var u in i){var c=i[u];if((0,o.default)(c))i[u]=e(c);else if(Array.isArray(c)){for(var s=[],f=0,d=c.length;f<d;++f){var p=(0,r.default)(a,u,c[f],i,t);(0,l.default)(s,p||c[f])}s.length>0&&(i[u]=s)}else{var m=(0,r.default)(a,u,c,i,t);m&&(i[u]=m),i=(0,n.default)(t,u,i)}}return i}};var n=a(_),r=a(C),l=a(O),o=a(P);function a(e){return e&&e.__esModule?e:{default:e}}}))),T=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&"text"===t)return["-webkit-text","text"]}}))),z=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return"string"==typeof e&&n.test(e)};var n=/-webkit-|-moz-|-ms-/;e.exports=t.default}));S(z);var M=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("calc(")>-1)return l.map((function(e){return t.replace(/calc\(/g,e+"calc(")}))};var n,r=(n=z)&&n.__esModule?n:{default:n},l=["-webkit-","-moz-",""]}))),R=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("cross-fade(")>-1)return l.map((function(e){return t.replace(/cross-fade\(/g,e+"cross-fade(")}))};var n,r=(n=z)&&n.__esModule?n:{default:n},l=["-webkit-",""]}))),L=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("cursor"===e&&r.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={"zoom-in":!0,"zoom-out":!0,grab:!0,grabbing:!0}}))),j=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("filter(")>-1)return l.map((function(e){return t.replace(/filter\(/g,e+"filter(")}))};var n,r=(n=z)&&n.__esModule?n:{default:n},l=["-webkit-",""]}))),I=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("display"===e&&n.hasOwnProperty(t))return n[t]};var n={flex:["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex","flex"],"inline-flex":["-webkit-inline-box","-moz-inline-box","-ms-inline-flexbox","-webkit-inline-flex","inline-flex"]}}))),F=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,a){if(Object.prototype.hasOwnProperty.call(r,e)&&(a[r[e]]=n[t]||t),"flex"===e){if(Object.prototype.hasOwnProperty.call(l,t))return void(a.msFlex=l[t]);if(o.test(t))return void(a.msFlex=t+" 1 0%");var i=t.split(/\s/);switch(i.length){case 1:return void(a.msFlex="1 1 "+t);case 2:return void(o.test(i[1])?a.msFlex=i[0]+" "+i[1]+" 0%":a.msFlex=i[0]+" 1 "+i[1]);default:a.msFlex=t}}};var n={"space-around":"distribute","space-between":"justify","flex-start":"start","flex-end":"end"},r={alignContent:"msFlexLinePack",alignSelf:"msFlexItemAlign",alignItems:"msFlexAlign",justifyContent:"msFlexPack",order:"msFlexOrder",flexGrow:"msFlexPositive",flexShrink:"msFlexNegative",flexBasis:"msFlexPreferredSize"},l={auto:"1 1 auto",inherit:"inherit",initial:"0 1 auto",none:"0 0 auto",unset:"unset"},o=/^\d+(\.\d+)?$/}))),D=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,l){"flexDirection"===e&&"string"==typeof t&&(t.indexOf("column")>-1?l.WebkitBoxOrient="vertical":l.WebkitBoxOrient="horizontal",t.indexOf("reverse")>-1?l.WebkitBoxDirection="reverse":l.WebkitBoxDirection="normal"),r.hasOwnProperty(e)&&(l[r[e]]=n[t]||t)};var n={"space-around":"justify","space-between":"justify","flex-start":"start","flex-end":"end","wrap-reverse":"multiple",wrap:"multiple"},r={alignItems:"WebkitBoxAlign",justifyContent:"WebkitBoxPack",flexWrap:"WebkitBoxLines",flexGrow:"WebkitBoxFlex"}}))),A=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&o.test(t))return l.map((function(e){return t.replace(o,(function(t){return e+t}))}))};var n,r=(n=z)&&n.__esModule?n:{default:n},l=["-webkit-","-moz-",""],o=/linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/gi}))),B=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,l=!1,o=void 0;try{for(var a,i=e[Symbol.iterator]();!(r=(a=i.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){l=!0,o=e}finally{try{!r&&i.return&&i.return()}finally{if(l)throw o}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function r(e){return"number"==typeof e&&!isNaN(e)}t.default=function(e,t,n){if("display"===e&&t in o)return o[t];e in a&&(0,a[e])(t,n)};var l=["center","end","start","stretch"],o={"inline-grid":["-ms-inline-grid","inline-grid"],grid:["-ms-grid","grid"]},a={alignSelf:function(e,t){l.indexOf(e)>-1&&(t.msGridRowAlign=e)},gridColumn:function(e,t){if(r(e))t.msGridColumn=e;else{var l=e.split("/").map((function(e){return+e})),o=n(l,2),i=o[0],u=o[1];a.gridColumnStart(i,t),a.gridColumnEnd(u,t)}},gridColumnEnd:function(e,t){var n=t.msGridColumn;r(e)&&r(n)&&(t.msGridColumnSpan=e-n)},gridColumnStart:function(e,t){r(e)&&(t.msGridColumn=e)},gridRow:function(e,t){if(r(e))t.msGridRow=e;else{var l=e.split("/").map((function(e){return+e})),o=n(l,2),i=o[0],u=o[1];a.gridRowStart(i,t),a.gridRowEnd(u,t)}},gridRowEnd:function(e,t){var n=t.msGridRow;r(e)&&r(n)&&(t.msGridRowSpan=e-n)},gridRowStart:function(e,t){r(e)&&(t.msGridRow=e)},gridTemplateColumns:function(e,t){t.msGridColumns=e},gridTemplateRows:function(e,t){t.msGridRows=e},justifySelf:function(e,t){l.indexOf(e)>-1&&(t.msGridColumnAlign=e)}}}))),W=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("image-set(")>-1)return l.map((function(e){return t.replace(/image-set\(/g,e+"image-set(")}))};var n,r=(n=z)&&n.__esModule?n:{default:n},l=["-webkit-",""]}))),U=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){if(Object.prototype.hasOwnProperty.call(n,e))for(var l=n[e],o=0,a=l.length;o<a;++o)r[l[o]]=t};var n={marginBlockStart:["WebkitMarginBefore"],marginBlockEnd:["WebkitMarginAfter"],marginInlineStart:["WebkitMarginStart","MozMarginStart"],marginInlineEnd:["WebkitMarginEnd","MozMarginEnd"],paddingBlockStart:["WebkitPaddingBefore"],paddingBlockEnd:["WebkitPaddingAfter"],paddingInlineStart:["WebkitPaddingStart","MozPaddingStart"],paddingInlineEnd:["WebkitPaddingEnd","MozPaddingEnd"],borderBlockStart:["WebkitBorderBefore"],borderBlockStartColor:["WebkitBorderBeforeColor"],borderBlockStartStyle:["WebkitBorderBeforeStyle"],borderBlockStartWidth:["WebkitBorderBeforeWidth"],borderBlockEnd:["WebkitBorderAfter"],borderBlockEndColor:["WebkitBorderAfterColor"],borderBlockEndStyle:["WebkitBorderAfterStyle"],borderBlockEndWidth:["WebkitBorderAfterWidth"],borderInlineStart:["WebkitBorderStart","MozBorderStart"],borderInlineStartColor:["WebkitBorderStartColor","MozBorderStartColor"],borderInlineStartStyle:["WebkitBorderStartStyle","MozBorderStartStyle"],borderInlineStartWidth:["WebkitBorderStartWidth","MozBorderStartWidth"],borderInlineEnd:["WebkitBorderEnd","MozBorderEnd"],borderInlineEndColor:["WebkitBorderEndColor","MozBorderEndColor"],borderInlineEndStyle:["WebkitBorderEndStyle","MozBorderEndStyle"],borderInlineEndWidth:["WebkitBorderEndWidth","MozBorderEndWidth"]}}))),V=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("position"===e&&"sticky"===t)return["-webkit-sticky","sticky"]}}))),H=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(r.hasOwnProperty(e)&&l.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={maxHeight:!0,maxWidth:!0,width:!0,height:!0,columnWidth:!0,minWidth:!0,minHeight:!0},l={"min-content":!0,"max-content":!0,"fill-available":!0,"fit-content":!0,"contain-floats":!0}}))),$=/[A-Z]/g,Q=/^ms-/,q={};function K(e){return"-"+e.toLowerCase()}var G,Y=(G=Object.freeze({default:function(e){if(q.hasOwnProperty(e))return q[e];var t=e.replace($,K);return q[e]=Q.test(t)?"-"+t:t}}))&&G.default||G,X=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e)};var n,r=(n=Y)&&n.__esModule?n:{default:n};e.exports=t.default}));S(X);var Z=["Webkit"],J=["Moz"],ee=["ms"],te=["Webkit","Moz"],ne=["Webkit","ms"],re=["Webkit","Moz","ms"],le=N({plugins:[T,M,R,L,j,I,F,D,A,B,W,U,V,H,S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,o,u){if("string"==typeof t&&a.hasOwnProperty(e)){var c=function(e,t){if((0,r.default)(e))return e;for(var l=e.split(/,(?![^()]*(?:\([^()]*\))?\))/g),o=0,a=l.length;o<a;++o){var u=l[o],c=[u];for(var s in t){var f=(0,n.default)(s);if(u.indexOf(f)>-1&&"order"!==f)for(var d=t[s],p=0,m=d.length;p<m;++p)c.unshift(u.replace(f,i[d[p]]+f))}l[o]=c.join(",")}return l.join(",")}(t,u),s=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-moz-|-ms-/.test(e)})).join(",");if(e.indexOf("Webkit")>-1)return s;var f=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-webkit-|-ms-/.test(e)})).join(",");return e.indexOf("Moz")>-1?f:(o["Webkit"+(0,l.default)(e)]=s,o["Moz"+(0,l.default)(e)]=f,c)}};var n=o(X),r=o(z),l=o(x);function o(e){return e&&e.__esModule?e:{default:e}}var a={transition:!0,transitionProperty:!0,WebkitTransition:!0,WebkitTransitionProperty:!0,MozTransition:!0,MozTransitionProperty:!0},i={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-"}})))],prefixMap:{transform:ne,transformOrigin:ne,transformOriginX:ne,transformOriginY:ne,backfaceVisibility:Z,perspective:Z,perspectiveOrigin:Z,transformStyle:Z,transformOriginZ:Z,animation:Z,animationDelay:Z,animationDirection:Z,animationFillMode:Z,animationDuration:Z,animationIterationCount:Z,animationName:Z,animationPlayState:Z,animationTimingFunction:Z,appearance:te,userSelect:re,fontKerning:Z,textEmphasisPosition:Z,textEmphasis:Z,textEmphasisStyle:Z,textEmphasisColor:Z,boxDecorationBreak:Z,clipPath:Z,maskImage:Z,maskMode:Z,maskRepeat:Z,maskPosition:Z,maskClip:Z,maskOrigin:Z,maskSize:Z,maskComposite:Z,mask:Z,maskBorderSource:Z,maskBorderMode:Z,maskBorderSlice:Z,maskBorderWidth:Z,maskBorderOutset:Z,maskBorderRepeat:Z,maskBorder:Z,maskType:Z,textDecorationStyle:te,textDecorationSkip:te,textDecorationLine:te,textDecorationColor:te,filter:Z,fontFeatureSettings:te,breakAfter:re,breakBefore:re,breakInside:re,columnCount:te,columnFill:te,columnGap:te,columnRule:te,columnRuleColor:te,columnRuleStyle:te,columnRuleWidth:te,columns:te,columnSpan:te,columnWidth:te,writingMode:ne,flex:ne,flexBasis:Z,flexDirection:ne,flexGrow:Z,flexFlow:ne,flexShrink:Z,flexWrap:ne,alignContent:Z,alignItems:Z,alignSelf:Z,justifyContent:Z,order:Z,transitionDelay:Z,transitionDuration:Z,transitionProperty:Z,transitionTimingFunction:Z,backdropFilter:Z,scrollSnapType:ne,scrollSnapPointsX:ne,scrollSnapPointsY:ne,scrollSnapDestination:ne,scrollSnapCoordinate:ne,shapeImageThreshold:Z,shapeImageMargin:Z,shapeImageOutside:Z,hyphens:re,flowInto:ne,flowFrom:ne,regionFragment:ne,textOrientation:Z,boxSizing:J,textAlignLast:J,tabSize:J,wrapFlow:ee,wrapThrough:ee,wrapMargin:ee,touchAction:ee,textSizeAdjust:ne,borderImage:Z,borderImageOutset:Z,borderImageRepeat:Z,borderImageSlice:Z,borderImageSource:Z,borderImageWidth:Z}}),oe=[function(e,t,n){return":"!==e[0]?null:n(t+e)},function(e,t,n){if("@"!==e[0])return null;var r=n(t);return["".concat(e,"{").concat(r.join(""),"}")]}],ae=function e(t,n,r,l,o){for(var a=new k,i=0;i<n.length;i++)a.addStyleType(n[i]);var u=new k,c=[];a.forEach((function(n,a){r.some((function(i){var u=i(a,t,(function(t){return e(t,[n],r,l,o)}));if(null!=u)return Array.isArray(u)?c.push.apply(c,f(u)):(console.warn("WARNING: Selector handlers should return an array of rules.Returning a string containing multiple rules is deprecated.",i),c.push("@media all {".concat(u,"}"))),!0}))||u.set(a,n,!0)}));var s=ce(t,u,l,o,r);return s&&c.unshift(s),c},ie=function(e,t,n){return"".concat((r=e,l=r.replace(d,p),"m"===l[0]&&"s"===l[1]&&"-"===l[2]?"-".concat(l):l),":").concat(n(e,t),";");var r,l},ue=function(e,t){return e[t]=!0,e},ce=function(e,t,n,r,l){!function(e,t,n){if(t)for(var r=Object.keys(t),l=0;l<r.length;l++){var o=r[l];e.has(o)&&e.set(o,t[o](e.get(o),n),!1)}}(t,n,l);var o=Object.keys(t.elements).reduce(ue,Object.create(null)),a=le(t.elements),i=Object.keys(a);if(i.length!==t.keyOrder.length)for(var u=0;u<i.length;u++)if(!o[i[u]]){var c;if((c="W"===i[u][0]?i[u][6].toLowerCase()+i[u].slice(7):"o"===i[u][1]?i[u][3].toLowerCase()+i[u].slice(4):i[u][2].toLowerCase()+i[u].slice(3))&&o[c]){var s=t.keyOrder.indexOf(c);t.keyOrder.splice(s,0,i[u])}else t.keyOrder.unshift(i[u])}for(var f=!1===r?y:g,d=[],p=0;p<t.keyOrder.length;p++){var m=t.keyOrder[p],h=a[m];if(Array.isArray(h))for(var v=0;v<h.length;v++)d.push(ie(m,h[v],f));else d.push(ie(m,h,f))}return d.length?"".concat(e,"{").concat(d.join(""),"}"):""},se=null,fe={fontFamily:function e(t){if(Array.isArray(t)){var n={};return t.forEach((function(t){n[e(t)]=!0})),Object.keys(n).join(",")}return"object"===u(t)?(ye(t.src,"@font-face",[t],!1),'"'.concat(t.fontFamily,'"')):t},animationName:function e(t,n){if(Array.isArray(t))return t.map((function(t){return e(t,n)})).join(",");if("object"===u(t)){var r="keyframe_".concat((o=t,v(JSON.stringify(o)))),l="@keyframes ".concat(r,"{");return t instanceof k?t.forEach((function(e,t){l+=ae(t,[e],n,fe,!1).join("")})):Object.keys(t).forEach((function(e){l+=ae(e,[t[e]],n,fe,!1).join("")})),he(r,[l+="}"]),r}return t;var o}},de={},pe=[],me=!1,he=function(e,t){var n;if(!de[e]){if(!me){if("undefined"==typeof document)throw new Error("Cannot automatically buffer without a document");me=!0,i()(we)}(n=pe).push.apply(n,f(t)),de[e]=!0}},ye=function(e,t,n,r){var l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(!de[e]){var o=ae(t,n,l,fe,r);he(e,o)}},ge=function(){pe=[],de={},me=!1,se=null},ve=function(e){delete de[e]},be=function(){me=!1;var e=pe;return pe=[],e},we=function(){var e=be();e.length>0&&function(e){if(null==se&&null==(se=document.querySelector("style[data-aphrodite]"))){var t=document.head||document.getElementsByTagName("head")[0];(se=document.createElement("style")).type="text/css",se.setAttribute("data-aphrodite",""),t.appendChild(se)}var n=se.styleSheet||se.sheet;if(n.insertRule){var r=n.cssRules.length;e.forEach((function(e){try{n.insertRule(e,r),r+=1}catch(e){}}))}else se.innerText=(se.innerText||"")+e.join("")}(e)},ke=function(e){e.forEach((function(e){de[e]=!0}))},Se=function e(t,n,r,l){for(var o=0;o<t.length;o+=1)if(t[o])if(Array.isArray(t[o]))l+=e(t[o],n,r,l);else{if(!("_definition"in(a=t[o])&&"_name"in a&&"_len"in a))throw new Error("Invalid Style Definition: Styles should be defined using the StyleSheet.create method.");n.push(t[o]._name),r.push(t[o]._definition),l+=t[o]._len}var a;return l},Ee=function(e,t,n){var r,l=[],o=[],a=Se(t,l,o,0);return 0===l.length?"":(r=1===l.length?"_".concat(l[0]):"_".concat(v(l.join())).concat((a%36).toString(36)),ye(r,".".concat(r),o,e,n),r)},xe=function(e,t){return"".concat(t,"_").concat(v(e))},_e=v,Ce={create:function(e){for(var t={},n=Object.keys(e),r=0;r<n.length;r+=1){var l=n[r],o=e[l],a=JSON.stringify(o);t[l]={_len:a.length,_name:_e(a,l),_definition:o}}return t},rehydrate:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];ke(e)}},Oe="undefined"!=typeof window?null:{renderStatic:function(e){return ge(),function(){if(me)throw new Error("Cannot buffer while already buffering");me=!0}(),{html:e(),css:{content:be().join(""),renderedClassNames:Object.keys(de)}}}},Pe=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:oe;return{StyleSheet:s({},Ce,{extend:function(r){var l=r.map((function(e){return e.selectorHandler})).filter((function(e){return e}));return e(t,n.concat(l))}}),StyleSheetServer:Oe,StyleSheetTestUtils:null,minify:function(e){_e=e?v:xe},css:function(){for(var e=arguments.length,r=new Array(e),l=0;l<e;l++)r[l]=arguments[l];return Ee(t,r,n)},flushToStyleTag:we,injectAndGetClassName:Ee,defaultSelectorHandlers:oe,reset:ge,resetInjectedStyle:ve}}(!0),Ne=Pe.StyleSheet,Te=(Pe.StyleSheetServer,Pe.StyleSheetTestUtils,Pe.css);function ze(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Pe.minify,Pe.flushToStyleTag,Pe.injectAndGetClassName,Pe.defaultSelectorHandlers,Pe.reset,Pe.resetInjectedStyle;var Me="@media screen and (max-width: 900px)",Re=Ne.create({header:{display:"flex",color:"#e0344a",alignItems:"center",borderBottom:"thick solid #e0344a",width:"100%",position:"fixed"},logo:ze({width:"144px"},Me,{width:"240px"}),title:ze({margin:0},Me,{fontSize:"40px"})});const Le=function(){return e.createElement("header",{className:Te(Re.header)},e.createElement("img",{className:Te(Re.logo),src:r,alt:"logo"}),e.createElement("h1",{className:Te(Re.title)},"School dashboard"))};function je(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Ie="@media screen and (max-width: 900px)",Fe=Ne.create({login:je({padding:"16px 24px"},Ie,{width:"90%",padding:0}),inp:je({margin:"4px"},Ie,{display:"block",border:"none",margin:0}),btn:je({margin:"4px",cursor:"pointer"},Ie,{width:"32px",display:"block",margin:0})});const De=function(){return e.createElement("main",{role:"main",className:Te(Fe.login)},e.createElement("p",null,"Login to access the full dashboard"),e.createElement("label",{htmlFor:"email"},"Email:"),e.createElement("input",{className:Te(Fe.inp),type:"email",name:"email",id:"email"}),e.createElement("label",{htmlFor:"password"},"Password:"),e.createElement("input",{className:Te(Fe.inp),type:"password",name:"password",id:"password"}),e.createElement("button",{className:Te(Fe.btn),type:"button"},"OK"))},Ae=function(){return e.createElement("footer",null,e.createElement("p",null,"Copyright ",(new Date).getFullYear()," - ","Holberton School"))},Be=n.p+"7ca727dcb0b4181eda258bd5b186978a.png";var We=n(697),Ue=n.n(We);function Ve(e){return(Ve="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function He(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function $e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Qe(e,t){return(Qe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function qe(e,t){return!t||"object"!==Ve(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Ke(e){return(Ke=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Ge=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Qe(e,t)}(i,t);var n,r,l,o,a=(l=i,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Ke(l);if(o){var n=Ke(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return qe(this,e)});function i(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),a.call(this,e)}return n=i,(r=[{key:"render",value:function(){var t=this.props,n=t.type,r=t.html,l=t.value,o=t.markAsRead,a=t.id,i=Te("urgent"===n?Ze.urgent:Ze.default);return l?e.createElement("li",{className:i,"data-notification-type":n,onClick:function(){return o(a)}},l):e.createElement("li",{className:i,"data-notification-type":n,dangerouslySetInnerHTML:r,onClick:function(){return o(a)}})}}])&&$e(n.prototype,r),i}(e.PureComponent);Ge.defaultProps={type:"default",html:{},value:"",markAsRead:function(){},id:NaN},Ge.propTypes={type:Ue().string,html:Ue().shape({__html:Ue().string}),value:Ue().string,markAsRead:Ue().func,id:Ue().number};var Ye="@media screen and (max-width: 900px)",Xe={fontSize:"20px",padding:"10px 8px",borderBottom:"1px solid black",listStyle:"none"},Ze=Ne.create({default:He({color:"blue"},Ye,Xe),urgent:He({color:"red"},Ye,Xe)});const Je=Ge,et=Ue().shape({id:Ue().number.isRequired,html:Ue().shape({__html:Ue().string}),type:Ue().string.isRequired,value:Ue().string});function tt(e){return(tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function nt(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function rt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function lt(e,t){return(lt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function ot(e,t){return!t||"object"!==tt(t)&&"function"!=typeof t?at(e):t}function at(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function it(e){return(it=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var ut=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&lt(e,t)}(i,t);var n,r,l,o,a=(l=i,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=it(l);if(o){var n=it(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return ot(this,e)});function i(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),(t=a.call(this,e)).markAsRead=t.markAsRead.bind(at(t)),t}return n=i,(r=[{key:"markAsRead",value:function(e){console.log("Notification ".concat(e," has been marked as read"))}},{key:"shouldComponentUpdate",value:function(e){return e.listNotifications.length>this.props.listNotifications.length}},{key:"render",value:function(){var t=this,n=this.props,r=n.displayDrawer,l=n.listNotifications,o=Te(r?st.showOff:st.showOn);return e.createElement(e.Fragment,null,e.createElement("div",{className:Te(st.menuItem)},e.createElement("p",{className:o},"Your notifications")),r&&e.createElement("div",{className:Te(st.notifications)},e.createElement("p",null,"Here is the list of notifications"),e.createElement("ul",null,0===l.length&&e.createElement(Je,{value:"No new notification for now"}),l.map((function(n){return e.createElement(Je,{key:n.id,type:n.type,value:n.value,html:n.html,markAsRead:t.markAsRead})}))),e.createElement("button",{type:"button","aria-label":"Close",onClick:function(){return console.log("Close button has been clicked")},style:{display:"inline-block",position:"absolute",top:"56px",right:"16px",background:0,border:0,outline:"none",cursor:"pointer",zIndex:1}},e.createElement("img",{src:Be,alt:"",style:{width:"8px",height:"8px"}}))))}}])&&rt(n.prototype,r),i}(e.Component);ut.defaultProps={displayDrawer:!1,listNotifications:[]},ut.propTypes={displayDrawer:Ue().bool,listNotifications:Ue().arrayOf(et)};var ct="@media screen and (max-width: 900px)",st=Ne.create({notifications:nt({fontSize:"20px",border:"thin dotted #e0344a",padding:"4px 16px",float:"right"},ct,{width:"90%",border:"none",backgroundColor:"white"}),menuItem:nt({textAlign:"right",marginRight:"16px"},ct,{}),showOff:nt({marginRight:"8px"},ct,{display:"none"}),showOn:{marginRight:"8px"}});const ft=ut;var dt=function(t){var n=t.isHeader,r=t.textFirstCell,l=t.textSecondCell,o=void 0,a=void 0;return!0===n&&(o={backgroundColor:"#deb5b545"},a=null===l?e.createElement("th",{colSpan:"2"},r):e.createElement(e.Fragment,null,e.createElement("th",{className:Te(pt.th)},r),e.createElement("th",{className:Te(pt.th)},l))),!1===n&&(o={backgroundColor:"#f5f5f5ab"},a=e.createElement(e.Fragment,null,e.createElement("td",null,r),e.createElement("td",null,l))),e.createElement("tr",{style:o},a)};dt.defaultProps={isHeader:!1,textSecondCell:null},dt.propTypes={isHeader:Ue().bool,textFirstCell:Ue().string.isRequired,textSecondCell:Ue().oneOfType([Ue().string,Ue().number])};var pt=Ne.create({th:{textAlign:"left",borderTop:"1px solid gray",borderBottom:"1px solid gray"}});const mt=dt,ht=Ue().shape({id:Ue().number,name:Ue().string,credit:Ue().number});var yt=function(t){var n=t.listCourses;return e.createElement("table",{className:Te(gt.courseList)},e.createElement("thead",null,e.createElement(mt,{textFirstCell:"Available courses",isHeader:!0}),e.createElement(mt,{textFirstCell:"Course name",textSecondCell:"Credit",isHeader:!0})),e.createElement("tbody",null,0===n.length&&e.createElement(mt,{textFirstCell:"No course available yet",isHeader:!1}),n.map((function(t){return e.createElement(mt,{key:t.id,textFirstCell:t.name,textSecondCell:t.credit,isHeader:!1})}))))};yt.defaultProps={listCourses:[]},yt.propTypes={listCourses:Ue().arrayOf(ht)};var gt=Ne.create({courseList:{width:"95%",margin:"auto",border:"1px solid gray",borderCollapse:"collapse"}});const vt=yt;function bt(e){return(bt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function wt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function kt(e,t){return(kt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function St(e,t){return!t||"object"!==bt(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Et(e){return(Et=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var xt=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&kt(e,t)}(i,t);var n,r,l,o,a=(l=i,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Et(l);if(o){var n=Et(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return St(this,e)});function i(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),a.call(this,e)}return n=i,(r=[{key:"render",value:function(){var t=this.props,n=t.children,r=t.title;return e.createElement("div",{className:Te(Pt.bodySection)},e.createElement("h2",{className:Te(Pt.heading)},r),n)}}])&&wt(n.prototype,r),i}(e.Component);xt.defaultProps={title:""},xt.propTypes={title:Ue().string};var _t,Ct,Ot,Pt=Ne.create({bodySection:(_t={width:"100%",marginTop:"160px",display:"flex",flexWrap:"wrap",padding:"32px"},Ct="@media screen and (max-width: 900px)",Ot={margin:"240px 0 -240px",padding:"16px"},Ct in _t?Object.defineProperty(_t,Ct,{value:Ot,enumerable:!0,configurable:!0,writable:!0}):_t[Ct]=Ot,_t),heading:{width:"100%"}});const Nt=xt;function Tt(e){return(Tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function zt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Mt(e,t){return(Mt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Rt(e,t){return!t||"object"!==Tt(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Lt(e){return(Lt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var jt=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Mt(e,t)}(i,t);var n,r,l,o,a=(l=i,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Lt(l);if(o){var n=Lt(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Rt(this,e)});function i(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),a.call(this,e)}return n=i,(r=[{key:"render",value:function(){return e.createElement("div",{className:Te(It.bodySectionWithMargin)},e.createElement(Nt,this.props))}}])&&zt(n.prototype,r),i}(e.Component);jt.defaultProps={title:""},jt.propTypes={title:Ue().string};var It=Ne.create({boySectionWithMargin:{width:"100%"}});const Ft=jt;function Dt(e){return(Dt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function At(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Bt(e,t){return(Bt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Wt(e,t){return!t||"object"!==Dt(t)&&"function"!=typeof t?Ut(e):t}function Ut(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Vt(e){return(Vt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Ht=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Bt(e,t)}(i,t);var n,r,l,o,a=(l=i,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Vt(l);if(o){var n=Vt(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Wt(this,e)});function i(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),(t=a.call(this,e)).handleLogout=t.handleLogout.bind(Ut(t)),t}return n=i,(r=[{key:"componentDidMount",value:function(){window.addEventListener("keydown",this.handleLogout)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("keydown",this.handleLogout)}},{key:"handleLogout",value:function(e){e.ctrlKey&&"h"===e.key&&(e.preventDefault(),alert("Logging you out"),this.props.logOut())}},{key:"render",value:function(){var t=this.props.isLoggedIn;return e.createElement(e.Fragment,null,e.createElement(ft,{listNotifications:[{id:1,type:"default",value:"New course available"},{id:2,type:"urgent",value:"New resume available"},{id:3,type:"urgent",html:{__html:"<strong>Urgent requirement</strong> - complete by EOD"}}]}),e.createElement(Le,null),t?e.createElement(Ft,{title:"Course list"},e.createElement(vt,{listCourses:[{id:1,name:"ES6",credit:60},{id:2,name:"Webpack",credit:20},{id:3,name:"React",credit:40}]})):e.createElement(Ft,{title:"Log in to continue"},e.createElement(De,null)),e.createElement(Nt,{title:"News from the School"},e.createElement("p",{className:Te($t.p)},"Lorem ipsum dolor sit amet consectetur adipisicing elit. Iusto, ullam? Quisquam eos temporibus, voluptate error, sunt consectetur ducimus eaque dolorum sit excepturi doloribus officiis reprehenderit distinctio dignissimos adipisci a aspernatur.")),e.createElement("div",{className:Te($t.footer)},e.createElement(Ae,null)))}}])&&At(n.prototype,r),i}(e.Component);Ht.defaultProps={isLoggedIn:!1,logOut:function(){}},Ht.propTypes={isLoggedIn:Ue().bool,logOut:Ue().func};var $t=Ne.create({footer:{width:"100%",position:"fixed",bottom:0,textAlign:"center",fontStyle:"italic",borderTop:"thick solid #e0344a"},p:{marginTop:0}});const Qt=Ht;t.render(e.createElement(e.StrictMode,null,e.createElement(Qt,null)),document.getElementById("root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvYXNhcC9icm93c2VyLWFzYXAuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL2FzYXAvYnJvd3Nlci1yYXcuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvc3RyaW5nLWhhc2gvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvYXNzZXRzL2hvbGJlcnRvbi1sb2dvLmpwZyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvYXBocm9kaXRlL2VzL2NodW5rLWZlYmNlNDZiLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9hcGhyb2RpdGUvZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0hlYWRlci9IZWFkZXIuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0xvZ2luL0xvZ2luLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Gb290ZXIvRm9vdGVyLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy91dGlscy91dGlscy5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvYXNzZXRzL2Nsb3NlLWljb24ucG5nIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Ob3RpZmljYXRpb25zL05vdGlmaWNhdGlvbkl0ZW0uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL05vdGlmaWNhdGlvbnMvTm90aWZpY2F0aW9uSXRlbVNoYXBlLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Ob3RpZmljYXRpb25zL05vdGlmaWNhdGlvbnMuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0NvdXJzZUxpc3QvQ291cnNlTGlzdFJvdy5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQ291cnNlTGlzdC9Db3Vyc2VTaGFwZS5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQ291cnNlTGlzdC9Db3Vyc2VMaXN0LmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Cb2R5U2VjdGlvbi9Cb2R5U2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQm9keVNlY3Rpb24vQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9BcHAvQXBwLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJyYXdBc2FwIiwiZnJlZVRhc2tzIiwicGVuZGluZ0Vycm9ycyIsInJlcXVlc3RFcnJvclRocm93IiwibWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyIiwibGVuZ3RoIiwic2hpZnQiLCJhc2FwIiwidGFzayIsInJhd1Rhc2siLCJwb3AiLCJSYXdUYXNrIiwidGhpcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJwcm90b3R5cGUiLCJjYWxsIiwiZXJyb3IiLCJvbmVycm9yIiwicHVzaCIsInF1ZXVlIiwicmVxdWVzdEZsdXNoIiwiaW5kZXgiLCJmbHVzaCIsImN1cnJlbnRJbmRleCIsInNjYW4iLCJuZXdMZW5ndGgiLCJ0b2dnbGUiLCJvYnNlcnZlciIsIm5vZGUiLCJzY29wZSIsImciLCJzZWxmIiwiQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIsImNhbGxiYWNrIiwidGltZW91dEhhbmRsZSIsInNldFRpbWVvdXQiLCJoYW5kbGVUaW1lciIsImludGVydmFsSGFuZGxlIiwic2V0SW50ZXJ2YWwiLCJjbGVhclRpbWVvdXQiLCJjbGVhckludGVydmFsIiwiZG9jdW1lbnQiLCJjcmVhdGVUZXh0Tm9kZSIsIm9ic2VydmUiLCJjaGFyYWN0ZXJEYXRhIiwiZGF0YSIsImdldE93blByb3BlcnR5U3ltYm9scyIsIk9iamVjdCIsImhhc093blByb3BlcnR5IiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidG9PYmplY3QiLCJ2YWwiLCJUeXBlRXJyb3IiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImkiLCJmcm9tQ2hhckNvZGUiLCJtYXAiLCJuIiwiam9pbiIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwia2V5cyIsImVyciIsInNob3VsZFVzZU5hdGl2ZSIsInRhcmdldCIsInNvdXJjZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJzIiwiYXJndW1lbnRzIiwia2V5IiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwiZW1wdHlGdW5jdGlvbldpdGhSZXNldCIsInJlc2V0V2FybmluZ0NhY2hlIiwic2hpbSIsInByb3BzIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJFcnJvciIsIm5hbWUiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwiZnVuYyIsIm51bWJlciIsIm9iamVjdCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImFhIiwibSIsInIiLCJ5IiwiYSIsImIiLCJjIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiYmEiLCJTZXQiLCJjYSIsImRhIiwiZWEiLCJhZGQiLCJmYSIsIndpbmRvdyIsImNyZWF0ZUVsZW1lbnQiLCJoYSIsImlhIiwiamEiLCJrYSIsIkIiLCJkIiwiZSIsImYiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwidHlwZSIsInNhbml0aXplVVJMIiwicmVtb3ZlRW1wdHlTdHJpbmciLCJEIiwidG9Mb3dlckNhc2UiLCJvYSIsInBhIiwidG9VcHBlckNhc2UiLCJxYSIsInNsaWNlIiwibWEiLCJpc05hTiIsIm5hIiwidGVzdCIsImxhIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJyZXBsYWNlIiwieGxpbmtIcmVmIiwicmEiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsInNhIiwidGEiLCJ1YSIsIndhIiwieGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJTeW1ib2wiLCJmb3IiLCJFIiwiTWEiLCJLYSIsIml0ZXJhdG9yIiwiTGEiLCJOYSIsInN0YWNrIiwidHJpbSIsIm1hdGNoIiwiT2EiLCJQYSIsInByZXBhcmVTdGFja1RyYWNlIiwiZGVmaW5lUHJvcGVydHkiLCJzZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiayIsImgiLCJkaXNwbGF5TmFtZSIsIlFhIiwidGFnIiwicmVuZGVyIiwiX3JlbmRlciIsIlJhIiwiJCR0eXBlb2YiLCJfY29udGV4dCIsIl9wYXlsb2FkIiwiX2luaXQiLCJTYSIsIlRhIiwibm9kZU5hbWUiLCJWYSIsIl92YWx1ZVRyYWNrZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJjb25zdHJ1Y3RvciIsImdldCIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWEiLCJXYSIsImNoZWNrZWQiLCJ2YWx1ZSIsIlhhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJZYSIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWmEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJvd25lckRvY3VtZW50IiwiZWIiLCJjaGlsZHJlbiIsIkNoaWxkcmVuIiwiZGIiLCJmYiIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImRpc2FibGVkIiwiZ2IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImhiIiwiQXJyYXkiLCJpc0FycmF5IiwiaWIiLCJqYiIsInRleHRDb250ZW50Iiwia2IiLCJsYiIsIm1iIiwibmIiLCJvYiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInZhbHVlT2YiLCJ0b1N0cmluZyIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsInBiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJxYiIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwicmIiLCJzYiIsInRiIiwic3R5bGUiLCJpbmRleE9mIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJ1YiIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInZiIiwid2IiLCJpcyIsInhiIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwicGFyZW50Tm9kZSIsInliIiwiemIiLCJBYiIsIkJiIiwiQ2IiLCJzdGF0ZU5vZGUiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJNYiIsIk9iIiwiUGIiLCJRYiIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiUmIiLCJsIiwiYXBwbHkiLCJvbkVycm9yIiwiU2IiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCJmbGFncyIsIiRiIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJhYyIsImNjIiwiY2hpbGQiLCJzaWJsaW5nIiwiY3VycmVudCIsImJjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJuYyIsIk1hcCIsIm9jIiwicGMiLCJxYyIsInJjIiwiYmxvY2tlZE9uIiwiZG9tRXZlbnROYW1lIiwiZXZlbnRTeXN0ZW1GbGFncyIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0Q29udGFpbmVycyIsInNjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwidGMiLCJ2YyIsIndjIiwibGFuZVByaW9yaXR5IiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiY29udGFpbmVySW5mbyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJDYyIsIkRjIiwiRWMiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJGYyIsIkdjIiwiSGMiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwidW5zdGFibGVfbm93IiwiRiIsIlJjIiwiVWMiLCJwZW5kaW5nTGFuZXMiLCJleHBpcmVkTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiVmMiLCJlbnRhbmdsZWRMYW5lcyIsImVudGFuZ2xlbWVudHMiLCJXYyIsIlhjIiwiWWMiLCJaYyIsIiRjIiwiZXZlbnRUaW1lcyIsIk1hdGgiLCJjbHozMiIsImJkIiwiY2QiLCJsb2ciLCJMTjIiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJpZCIsImJpbmQiLCJ1YyIsImpkIiwia2QiLCJsZCIsIm1kIiwibmQiLCJvZCIsImtleUNvZGUiLCJjaGFyQ29kZSIsInBkIiwicWQiLCJyZCIsIl9yZWFjdE5hbWUiLCJfdGFyZ2V0SW5zdCIsImN1cnJlbnRUYXJnZXQiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImlzUGVyc2lzdGVudCIsIndkIiwieGQiLCJ5ZCIsInNkIiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsInRkIiwidWQiLCJ2aWV3IiwiZGV0YWlsIiwidmQiLCJBZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwiY3RybEtleSIsInNoaWZ0S2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImdldE1vZGlmaWVyU3RhdGUiLCJ6ZCIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJCZCIsIkRkIiwiZGF0YVRyYW5zZmVyIiwiRmQiLCJIZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJKZCIsImNsaXBib2FyZERhdGEiLCJMZCIsIk1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIk5kIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsIk9kIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBkIiwiUmQiLCJjb2RlIiwicmVwZWF0IiwibG9jYWxlIiwid2hpY2giLCJUZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIlZkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsIlhkIiwiWmQiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsIiRkIiwiYWUiLCJiZSIsImRvY3VtZW50TW9kZSIsImNlIiwiZGUiLCJlZSIsImZlIiwiZ2UiLCJoZSIsImllIiwibGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwibWUiLCJuZSIsIm9lIiwiZXZlbnQiLCJsaXN0ZW5lcnMiLCJwZSIsInFlIiwicmUiLCJzZSIsInRlIiwidWUiLCJ2ZSIsIndlIiwieGUiLCJ5ZSIsInplIiwib25pbnB1dCIsIkFlIiwiZGV0YWNoRXZlbnQiLCJCZSIsIkNlIiwiYXR0YWNoRXZlbnQiLCJEZSIsIkVlIiwiRmUiLCJIZSIsIkllIiwiSmUiLCJLZSIsIkxlIiwib2Zmc2V0IiwibmV4dFNpYmxpbmciLCJNZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJOZSIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImhyZWYiLCJPZSIsImNvbnRlbnRFZGl0YWJsZSIsIlBlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZGVmYXVsdFZpZXciLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsIlZlIiwiV2UiLCJYZSIsIlllIiwiY29uY2F0IiwiWmUiLCJZYiIsImluc3RhbmNlIiwibGlzdGVuZXIiLCJHIiwiJGUiLCJoYXMiLCJhZiIsImJmIiwicmFuZG9tIiwiY2YiLCJkZiIsImNhcHR1cmUiLCJwYXNzaXZlIiwiTmIiLCJ4IiwidyIsInoiLCJ1IiwicSIsInQiLCJ2IiwiZWYiLCJmZiIsInBhcmVudFdpbmRvdyIsImdmIiwiaGYiLCJKIiwiSyIsIlEiLCJMIiwiamUiLCJjaGFyIiwia2UiLCJ1bnNoaWZ0IiwiamYiLCJrZiIsImxmIiwibWYiLCJhdXRvRm9jdXMiLCJuZiIsIl9faHRtbCIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJwcmV2aW91c1NpYmxpbmciLCJ0ZiIsInZmIiwid2YiLCJ4ZiIsInlmIiwiemYiLCJBZiIsIkJmIiwiSCIsIkkiLCJDZiIsIk0iLCJOIiwiRGYiLCJFZiIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIkZmIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJHZiIsIkhmIiwiSWYiLCJnZXRDaGlsZENvbnRleHQiLCJKZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJRZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiUmYiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJTZiIsIlRmIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJVZiIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiVmYiLCJXZiIsIlhmIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJZZiIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsIk8iLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwibGciLCJkZWZhdWx0UHJvcHMiLCJtZyIsIm5nIiwib2ciLCJwZyIsInFnIiwicmciLCJfY3VycmVudFZhbHVlIiwic2ciLCJjaGlsZExhbmVzIiwidGciLCJkZXBlbmRlbmNpZXMiLCJmaXJzdENvbnRleHQiLCJsYW5lcyIsInVnIiwidmciLCJjb250ZXh0Iiwib2JzZXJ2ZWRCaXRzIiwibmV4dCIsInJlc3BvbmRlcnMiLCJ3ZyIsInhnIiwidXBkYXRlUXVldWUiLCJiYXNlU3RhdGUiLCJmaXJzdEJhc2VVcGRhdGUiLCJsYXN0QmFzZVVwZGF0ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwieWciLCJ6ZyIsImV2ZW50VGltZSIsImxhbmUiLCJwYXlsb2FkIiwiQWciLCJCZyIsIkNnIiwiQSIsInAiLCJDIiwiRGciLCJFZyIsIkZnIiwiQ29tcG9uZW50IiwicmVmcyIsIkdnIiwiS2ciLCJpc01vdW50ZWQiLCJfcmVhY3RJbnRlcm5hbHMiLCJlbnF1ZXVlU2V0U3RhdGUiLCJIZyIsIklnIiwiSmciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiTGciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIk1nIiwiY29udGV4dFR5cGUiLCJzdGF0ZSIsInVwZGF0ZXIiLCJOZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk9nIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJQZyIsIlFnIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIlJnIiwiU2ciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiVGciLCJVZyIsIm1vZGUiLCJWZyIsImltcGxlbWVudGF0aW9uIiwiV2ciLCJYZyIsImRvbmUiLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImZoIiwiZ2giLCJoaCIsIlAiLCJpaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBlbmRpbmdQcm9wcyIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsIl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5IiwidmgiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwid2giLCJ4aCIsIlIiLCJTIiwiVCIsInloIiwiemgiLCJBaCIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiYmFzZVF1ZXVlIiwiSWgiLCJKaCIsIktoIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImFjdGlvbiIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImRpc3BhdGNoIiwiTGgiLCJNaCIsIl9nZXRWZXJzaW9uIiwiX3NvdXJjZSIsIm11dGFibGVSZWFkTGFuZXMiLCJOaCIsIlUiLCJ1c2VTdGF0ZSIsImdldFNuYXBzaG90Iiwic3Vic2NyaWJlIiwidXNlRWZmZWN0Iiwic2V0U25hcHNob3QiLCJPaCIsIlBoIiwiUWgiLCJSaCIsImNyZWF0ZSIsImRlc3Ryb3kiLCJkZXBzIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiZGkiLCJyZWFkQ29udGV4dCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZURlYnVnVmFsdWUiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsInVzZU11dGFibGVTb3VyY2UiLCJ1c2VPcGFxdWVJZGVudGlmaWVyIiwidW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyIiwidWYiLCJlaSIsIlJlYWN0Q3VycmVudE93bmVyIiwiZmkiLCJnaSIsImhpIiwiaWkiLCJqaSIsImNvbXBhcmUiLCJraSIsImxpIiwibWkiLCJiYXNlTGFuZXMiLCJuaSIsIm9pIiwicGkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJxaSIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsInJpIiwicGVuZGluZ0NvbnRleHQiLCJCaSIsIkRpIiwiRWkiLCJzaSIsInJldHJ5TGFuZSIsInRpIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsInVpIiwidW5zdGFibGVfZXhwZWN0ZWRMb2FkVGltZSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbE1vZGUiLCJBaSIsIkZpIiwiR2kiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwib25DbGljayIsIm9uY2xpY2siLCJzaXplIiwiY3JlYXRlRWxlbWVudE5TIiwiViIsIkhpIiwiSWkiLCJXIiwiSmkiLCJLaSIsIkxpIiwiTWkiLCJtZXNzYWdlIiwiTmkiLCJjb25zb2xlIiwiT2kiLCJXZWFrTWFwIiwiUGkiLCJRaSIsIlJpIiwiU2kiLCJjb21wb25lbnREaWRDYXRjaCIsIlRpIiwiY29tcG9uZW50U3RhY2siLCJVaSIsIldlYWtTZXQiLCJWaSIsIldpIiwiWGkiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIllpIiwiWmkiLCIkaSIsImZvY3VzIiwiYWoiLCJkaXNwbGF5IiwiYmoiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiY2oiLCJkaiIsImVqIiwiZmoiLCJnaiIsImhqIiwiaW5zZXJ0QmVmb3JlIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsImlqIiwiamoiLCJraiIsImxqIiwidGhlbiIsIm1qIiwibmoiLCJjZWlsIiwib2oiLCJwaiIsIlgiLCJZIiwicWoiLCJyaiIsInNqIiwidGoiLCJ1aiIsInZqIiwiSW5maW5pdHkiLCJ3aiIsImNrIiwiWiIsInhqIiwieWoiLCJ6aiIsIkFqIiwiQmoiLCJDaiIsIkRqIiwiRWoiLCJGaiIsIkdqIiwiSGoiLCJJaiIsIkpqIiwiU2MiLCJLaiIsIkxqIiwiTWoiLCJjYWxsYmFja05vZGUiLCJleHBpcmF0aW9uVGltZXMiLCJjYWxsYmFja1ByaW9yaXR5IiwiVGMiLCJOaiIsIk9qIiwiUGoiLCJRaiIsIlJqIiwiU2oiLCJUaiIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkTGFuZXMiLCJVaiIsIldqIiwiWGoiLCJwaW5nQ2FjaGUiLCJZaiIsIlpqIiwidmEiLCJhayIsImJrIiwiZGsiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImVrIiwibWluIiwiZXh0ZW5kIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJvbkNvbW1pdEZpYmVyUm9vdCIsImZrIiwiZ2siLCJpayIsImlzUmVhY3RDb21wb25lbnQiLCJwZW5kaW5nQ2hpbGRyZW4iLCJqayIsIm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEiLCJrayIsImxrIiwibWsiLCJuayIsIm9rIiwicWsiLCJoeWRyYXRpb25PcHRpb25zIiwibXV0YWJsZVNvdXJjZXMiLCJfaW50ZXJuYWxSb290IiwicmsiLCJ0ayIsImhhc0F0dHJpYnV0ZSIsInNrIiwidWsiLCJoayIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiSlNPTiIsInN0cmluZ2lmeSIsImZvcm0iLCJWaiIsInZrIiwiRXZlbnRzIiwid2siLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJ2ZXJzaW9uIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsInhrIiwicmVuZGVyZXJDb25maWciLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aCIsIm92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aCIsIm92ZXJyaWRlUHJvcHMiLCJvdmVycmlkZVByb3BzRGVsZXRlUGF0aCIsIm92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJ5ayIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0IiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImNoZWNrRENFIiwiRnJhZ21lbnQiLCJTdHJpY3RNb2RlIiwiUHJvZmlsZXIiLCJTdXNwZW5zZSIsInNldFN0YXRlIiwiZm9yY2VVcGRhdGUiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImVzY2FwZSIsIl9zdGF0dXMiLCJfcmVzdWx0IiwiZGVmYXVsdCIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwiY291bnQiLCJ0b0FycmF5Iiwib25seSIsIlB1cmVDb21wb25lbnQiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImZvcndhcmRSZWYiLCJpc1ZhbGlkRWxlbWVudCIsImxhenkiLCJtZW1vIiwicGVyZm9ybWFuY2UiLCJNZXNzYWdlQ2hhbm5lbCIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbG9vciIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsImV4cGlyYXRpb25UaW1lIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInN0ciIsImhhc2giLCJjaGFyQ29kZUF0IiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkZWZpbml0aW9uIiwibyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsIm9iaiIsInByb3AiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsIl90eXBlb2YiLCJfZGVmaW5lUHJvcGVydHkiLCJ3cml0YWJsZSIsIl9vYmplY3RTcHJlYWQiLCJvd25LZXlzIiwiZmlsdGVyIiwic3ltIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiYXJyIiwiYXJyMiIsIl9hcnJheVdpdGhvdXRIb2xlcyIsIml0ZXIiLCJfaXRlcmFibGVUb0FycmF5IiwiX25vbkl0ZXJhYmxlU3ByZWFkIiwiVVBQRVJDQVNFX1JFIiwiVVBQRVJDQVNFX1JFX1RPX0tFQkFCIiwiaXNVbml0bGVzc051bWJlciIsInByZWZpeGVzIiwicHJlZml4IiwicHJlZml4S2V5Iiwic3RyaW5naWZ5VmFsdWUiLCJzdHJpbmdpZnlBbmRJbXBvcnRhbnRpZnlWYWx1ZSIsImltcG9ydGFudGlmeSIsImhhc2hTdHJpbmciLCJNQVBfRVhJU1RTIiwiT3JkZXJlZEVsZW1lbnRzIiwiZWxlbWVudHMiLCJrZXlPcmRlciIsIl9wcm90byIsInNob3VsZFJlb3JkZXIiLCJzcGxpY2UiLCJuZXN0ZWQiLCJfbmVzdGVkIiwiYWRkU3R5bGVUeXBlIiwic3R5bGVUeXBlIiwiX3RoaXMiLCJ1bndyYXBFeHBvcnRzIiwiY3JlYXRlQ29tbW9uanNNb2R1bGUiLCJmbiIsImNhcGl0YWxpemVTdHJpbmdfMSIsInByZWZpeFByb3BlcnR5XzEiLCJwcmVmaXhQcm9wZXJ0aWVzIiwicHJvcGVydHkiLCJuZXdTdHlsZSIsInJlcXVpcmVkUHJlZml4ZXMiLCJjYXBpdGFsaXplZFByb3BlcnR5IiwiX2NhcGl0YWxpemVTdHJpbmcyIiwic3R5bGVQcm9wZXJ0eSIsImoiLCJwcmVmaXhWYWx1ZV8xIiwicGx1Z2lucyIsIm1ldGFEYXRhIiwibGVuIiwicHJvY2Vzc2VkVmFsdWUiLCJhZGROZXdWYWx1ZXNPbmx5XzEiLCJhZGRJZk5ldyIsImxpc3QiLCJ2YWx1ZXMiLCJpc09iamVjdF8xIiwiY3JlYXRlUHJlZml4ZXIiLCJfcmVmIiwicHJlZml4TWFwIiwiX2lzT2JqZWN0MiIsImNvbWJpbmVkVmFsdWUiLCJfcHJlZml4VmFsdWUyIiwiX2FkZE5ld1ZhbHVlc09ubHkyIiwiX3Byb2Nlc3NlZFZhbHVlIiwiX3ByZWZpeFByb3BlcnR5MiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJiYWNrZ3JvdW5kQ2xpcCIsImlzUHJlZml4ZWRWYWx1ZV8xIiwicmVnZXgiLCJjYWxjIiwiX2lzUHJlZml4ZWRWYWx1ZTIiLCJjcm9zc0ZhZGUiLCJjdXJzb3IiLCJncmFiIiwiZ3JhYmJpbmciLCJmbGV4Ym94SUUiLCJhbHRlcm5hdGl2ZVByb3BzIiwiYWx0ZXJuYXRpdmVWYWx1ZXMiLCJmbGV4U2hvcnRoYW5kTWFwcGluZ3MiLCJtc0ZsZXgiLCJmbGV4VmFsdWVzIiwiYWxpZ25Db250ZW50IiwiYWxpZ25TZWxmIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiZmxleEJhc2lzIiwiYXV0byIsImluaGVyaXQiLCJpbml0aWFsIiwibm9uZSIsInVuc2V0IiwiZmxleGJveE9sZCIsIldlYmtpdEJveE9yaWVudCIsIldlYmtpdEJveERpcmVjdGlvbiIsIndyYXAiLCJmbGV4V3JhcCIsImdyYWRpZW50IiwiZ3JhZCIsImdyaWQiLCJfc2xpY2VkVG9BcnJheSIsIl9hcnIiLCJfbiIsIl9kIiwiX2UiLCJ1bmRlZmluZWQiLCJfcyIsIl9pIiwic2xpY2VJdGVyYXRvciIsImlzU2ltcGxlUG9zaXRpb25WYWx1ZSIsImRpc3BsYXlWYWx1ZXMiLCJwcm9wZXJ0eUNvbnZlcnRlcnMiLCJwcm9wZXJ0eUNvbnZlcnRlciIsImFsaWdubWVudFZhbHVlcyIsIm1zR3JpZFJvd0FsaWduIiwibXNHcmlkQ29sdW1uIiwiX3ZhbHVlJHNwbGl0JG1hcCIsInBvc2l0aW9uIiwiX3ZhbHVlJHNwbGl0JG1hcDIiLCJtc0dyaWRDb2x1bW5TcGFuIiwibXNHcmlkUm93IiwiX3ZhbHVlJHNwbGl0JG1hcDMiLCJfdmFsdWUkc3BsaXQkbWFwNCIsIm1zR3JpZFJvd1NwYW4iLCJncmlkVGVtcGxhdGVDb2x1bW5zIiwibXNHcmlkQ29sdW1ucyIsImdyaWRUZW1wbGF0ZVJvd3MiLCJtc0dyaWRSb3dzIiwianVzdGlmeVNlbGYiLCJtc0dyaWRDb2x1bW5BbGlnbiIsImltYWdlU2V0IiwibG9naWNhbCIsImFsdGVybmF0aXZlUHJvcExpc3QiLCJtYXJnaW5CbG9ja1N0YXJ0IiwibWFyZ2luQmxvY2tFbmQiLCJtYXJnaW5JbmxpbmVTdGFydCIsIm1hcmdpbklubGluZUVuZCIsInBhZGRpbmdCbG9ja1N0YXJ0IiwicGFkZGluZ0Jsb2NrRW5kIiwicGFkZGluZ0lubGluZVN0YXJ0IiwicGFkZGluZ0lubGluZUVuZCIsImJvcmRlckJsb2NrU3RhcnQiLCJib3JkZXJCbG9ja1N0YXJ0Q29sb3IiLCJib3JkZXJCbG9ja1N0YXJ0U3R5bGUiLCJib3JkZXJCbG9ja1N0YXJ0V2lkdGgiLCJib3JkZXJCbG9ja0VuZCIsImJvcmRlckJsb2NrRW5kQ29sb3IiLCJib3JkZXJCbG9ja0VuZFN0eWxlIiwiYm9yZGVyQmxvY2tFbmRXaWR0aCIsImJvcmRlcklubGluZVN0YXJ0IiwiYm9yZGVySW5saW5lU3RhcnRDb2xvciIsImJvcmRlcklubGluZVN0YXJ0U3R5bGUiLCJib3JkZXJJbmxpbmVTdGFydFdpZHRoIiwiYm9yZGVySW5saW5lRW5kIiwiYm9yZGVySW5saW5lRW5kQ29sb3IiLCJib3JkZXJJbmxpbmVFbmRTdHlsZSIsImJvcmRlcklubGluZUVuZFdpZHRoIiwic2l6aW5nIiwicHJvcGVydGllcyIsIm1heEhlaWdodCIsIm1heFdpZHRoIiwiY29sdW1uV2lkdGgiLCJtaW5XaWR0aCIsIm1pbkhlaWdodCIsInVwcGVyY2FzZVBhdHRlcm4iLCJtc1BhdHRlcm4iLCJjYWNoZSIsInRvSHlwaGVuTG93ZXIiLCJfaHlwaGVuYXRlU3R5bGVOYW1lIiwiZnJlZXplIiwiaE5hbWUiLCJoeXBoZW5hdGVQcm9wZXJ0eV8xIiwiX2h5cGhlbmF0ZVN0eWxlTmFtZTIiLCJtcyIsIndtIiwid21zIiwid21tcyIsInByZWZpeEFsbCIsInByb3BlcnR5UHJlZml4TWFwIiwib3V0cHV0VmFsdWUiLCJtdWx0aXBsZVZhbHVlcyIsInNpbmdsZVZhbHVlIiwiZGFzaENhc2VQcm9wZXJ0eSIsIl9oeXBoZW5hdGVQcm9wZXJ0eTIiLCJwTGVuIiwicHJlZml4TWFwcGluZyIsInByZWZpeFZhbHVlIiwid2Via2l0T3V0cHV0IiwibW96T3V0cHV0IiwidHJhbnNpdGlvblByb3BlcnR5IiwiV2Via2l0VHJhbnNpdGlvbiIsIldlYmtpdFRyYW5zaXRpb25Qcm9wZXJ0eSIsIk1velRyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uUHJvcGVydHkiLCJXZWJraXQiLCJNb3oiLCJkZWZhdWx0U2VsZWN0b3JIYW5kbGVycyIsInNlbGVjdG9yIiwiYmFzZVNlbGVjdG9yIiwiZ2VuZXJhdGVTdWJ0cmVlU3R5bGVzIiwiZ2VuZXJhdGVkIiwiZ2VuZXJhdGVDU1MiLCJzdHlsZVR5cGVzIiwic2VsZWN0b3JIYW5kbGVycyIsInN0cmluZ0hhbmRsZXJzIiwidXNlSW1wb3J0YW50IiwibWVyZ2VkIiwicGxhaW5EZWNsYXJhdGlvbnMiLCJnZW5lcmF0ZWRTdHlsZXMiLCJzb21lIiwiaGFuZGxlciIsInJlc3VsdCIsIm5ld1NlbGVjdG9yIiwid2FybiIsImdlbmVyYXRlZFJ1bGVzZXQiLCJnZW5lcmF0ZUNTU1J1bGVzZXQiLCJ0cmFuc2Zvcm1SdWxlIiwidHJhbnNmb3JtVmFsdWUiLCJhcnJheVRvT2JqZWN0S2V5c1JlZHVjZXIiLCJhY2MiLCJkZWNsYXJhdGlvbnMiLCJzdHJpbmdIYW5kbGVyS2V5cyIsInJ1blN0cmluZ0hhbmRsZXJzIiwib3JpZ2luYWxFbGVtZW50cyIsInJlZHVjZSIsInByZWZpeGVkRWxlbWVudHMiLCJlbGVtZW50TmFtZXMiLCJvcmlnaW5hbFN0eWxlIiwib3JpZ2luYWxJbmRleCIsInJ1bGVzIiwic3R5bGVUYWciLCJmb250RmFtaWx5IiwibmFtZU1hcCIsImluamVjdFN0eWxlT25jZSIsImZpbmFsVmFsIiwidmFsVmFsIiwidmFsS2V5IiwiaW5qZWN0R2VuZXJhdGVkQ1NTT25jZSIsImFscmVhZHlJbmplY3RlZCIsImluamVjdGlvbkJ1ZmZlciIsImlzQnVmZmVyaW5nIiwiZ2VuZXJhdGVkQ1NTIiwiX2luamVjdGlvbkJ1ZmZlciIsImZsdXNoVG9TdHlsZVRhZyIsImRlZmluaXRpb25zIiwicmVzZXRJbmplY3RlZFN0eWxlIiwiZmx1c2hUb0FycmF5IiwicmV0IiwiY3NzUnVsZXMiLCJxdWVyeVNlbGVjdG9yIiwiaGVhZCIsInNoZWV0Iiwic3R5bGVTaGVldCIsImluc2VydFJ1bGUiLCJudW1SdWxlcyIsInJ1bGUiLCJpbm5lclRleHQiLCJpbmplY3RTdHlsZVRhZyIsImFkZFJlbmRlcmVkQ2xhc3NOYW1lcyIsImNsYXNzTmFtZXMiLCJjbGFzc05hbWUiLCJwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyIsInN0eWxlRGVmaW5pdGlvbnMiLCJjbGFzc05hbWVCaXRzIiwiZGVmaW5pdGlvbkJpdHMiLCJkZWYiLCJfbmFtZSIsIl9kZWZpbml0aW9uIiwiX2xlbiIsImluamVjdEFuZEdldENsYXNzTmFtZSIsInVubWluaWZpZWRIYXNoRm4iLCJoYXNoRm4iLCJTdHlsZVNoZWV0Iiwic2hlZXREZWZpbml0aW9uIiwibWFwcGVkU2hlZXREZWZpbml0aW9uIiwic3RyaW5nVmFsIiwicmVoeWRyYXRlIiwicmVuZGVyZWRDbGFzc05hbWVzIiwiU3R5bGVTaGVldFNlcnZlciIsInJlbmRlclN0YXRpYyIsInJlbmRlckZ1bmMiLCJzdGFydEJ1ZmZlcmluZyIsImh0bWwiLCJjc3MiLCJjb250ZW50IiwiQXBocm9kaXRlIiwibWFrZUV4cG9ydHMiLCJleHRlbnNpb25zIiwiZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycyIsImV4dGVuc2lvbiIsInNlbGVjdG9ySGFuZGxlciIsIlN0eWxlU2hlZXRUZXN0VXRpbHMiLCJtaW5pZnkiLCJzaG91bGRNaW5pZnkiLCJfa2V5IiwicmVzZXQiLCJzY3JlZW5TaXplIiwic3R5bGVzIiwiaGVhZGVyIiwiYm9yZGVyQm90dG9tIiwibG9nbyIsInRpdGxlIiwibWFyZ2luIiwiZm9udFNpemUiLCJhbHQiLCJsb2dpbiIsInBhZGRpbmciLCJpbnAiLCJib3JkZXIiLCJidG4iLCJyb2xlIiwiaHRtbEZvciIsImdldEZ1bGxZZWFyIiwiTm90aWZpY2F0aW9uSXRlbSIsIm1hcmtBc1JlYWQiLCJ1cmdlbnQiLCJkYXRhLW5vdGlmaWNhdGlvbi10eXBlIiwiUmVhY3QiLCJOYU4iLCJwcm9wVHlwZXMiLCJvblNtYWxsIiwibGlzdFN0eWxlIiwiTm90aWZpY2F0aW9ucyIsIm5leHRQcm9wcyIsImxpc3ROb3RpZmljYXRpb25zIiwiZGlzcGxheURyYXdlciIsInNob3ciLCJzaG93T2ZmIiwic2hvd09uIiwibWVudUl0ZW0iLCJub3RpZmljYXRpb25zIiwibm90aWZpY2F0aW9uIiwiYXJpYS1sYWJlbCIsInJpZ2h0IiwiYmFja2dyb3VuZCIsIm91dGxpbmUiLCJjbG9zZV9pY29uIiwiTm90aWZpY2F0aW9uSXRlbVNoYXBlIiwiZmxvYXQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ0ZXh0QWxpZ24iLCJtYXJnaW5SaWdodCIsIkNvdXJzZUxpc3RSb3ciLCJpc0hlYWRlciIsInRleHRGaXJzdENlbGwiLCJ0ZXh0U2Vjb25kQ2VsbCIsImJnQ29sb3IiLCJjb2xTcGFuIiwiYm9yZGVyVG9wIiwiY3JlZGl0IiwiQ291cnNlTGlzdCIsImxpc3RDb3Vyc2VzIiwiY291cnNlTGlzdCIsImNvdXJzZSIsIkNvdXJzZVNoYXBlIiwiYm9yZGVyQ29sbGFwc2UiLCJCb2R5U2VjdGlvbiIsImJvZHlTZWN0aW9uIiwiaGVhZGluZyIsIm1hcmdpblRvcCIsIkJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSIsImJvZHlTZWN0aW9uV2l0aE1hcmdpbiIsImJveVNlY3Rpb25XaXRoTWFyZ2luIiwiQXBwIiwiaGFuZGxlTG9nb3V0IiwiYWxlcnQiLCJsb2dPdXQiLCJpc0xvZ2dlZEluIiwiZm9vdGVyIiwiYm90dG9tIiwiZm9udFN0eWxlIiwiUmVhY3RET00iLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6Ijt3Q0FHQSxJQUFJQSxFQUFVLEVBQVEsS0FFbEJDLEVBQVksR0FHWkMsRUFBZ0IsR0FDaEJDLEVBQW9CSCxFQUFRSSwwQkFFaEMsV0FDSSxHQUFJRixFQUFjRyxPQUNkLE1BQU1ILEVBQWNJLFdBYTVCLFNBQVNDLEVBQUtDLEdBQ1YsSUFBSUMsR0FFQUEsRUFE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ckMsR0FBSSxFQUFHN1ksS0FBTSxNQUFPeWtELE9BQVEsSUFDOUIsQ0FBRTVyQyxHQUFJLEVBQUc3WSxLQUFNLFVBQVd5a0QsT0FBUSxJQUNsQyxDQUFFNXJDLEdBQUksRUFBRzdZLEtBQU0sUUFBU3lrRCxPQUFRLFFBaUI1QixnQkFBQyxHQUFELENBQTZCaEQsTUFBTSxzQkFDakMsZ0JBQUMsR0FBRCxPQUdKLGdCQUFDLEdBQUQsQ0FBYUEsTUFBTSx3QkFDakIscUJBQUd6QyxVQUFXdUIsR0FBSWMsR0FBTzl2QixJQUF6Qix5UEFPRix1QkFBS3l0QixVQUFXdUIsR0FBSWMsR0FBT3VFLFNBQ3pCLGdCQUFDLEdBQUQsYSxxQkFwRFFoMEIsYUEyRGxCMnpCLEdBQUl0MkIsYUFBZSxDQUNqQjAyQixZQUFZLEVBQ1pELE9BQVEsY0FHVkgsR0FBSTVDLFVBQVksQ0FDZGdELFdBQVlya0QsVUFDWm9rRCxPQUFRcGtELFdBR1YsSUFBTSsvQyxHQUFTekIsVUFBa0IsQ0FDL0JnRyxPQUFRLENBQ054a0MsTUFBTyxPQUNQNjBCLFNBQVUsUUFDVjRQLE9BQVEsRUFDUjdCLFVBQVcsU0FDWDhCLFVBQVcsU0FDWHRCLFVBQVcsdUJBRWJqekIsRUFBRyxDQUNENHpCLFVBQVcsS0FJZixZQzNGQVksU0FDRSxnQkFBQyxhQUFELEtBQ0UsZ0JBQUMsR0FBRCxPQUVGanBELFNBQVNrcEQsZUFBZSxVIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vLyByYXdBc2FwIHByb3ZpZGVzIGV2ZXJ5dGhpbmcgd2UgbmVlZCBleGNlcHQgZXhjZXB0aW9uIG1hbmFnZW1lbnQuXG52YXIgcmF3QXNhcCA9IHJlcXVpcmUoXCIuL3Jhd1wiKTtcbi8vIFJhd1Rhc2tzIGFyZSByZWN5Y2xlZCB0byByZWR1Y2UgR0MgY2h1cm4uXG52YXIgZnJlZVRhc2tzID0gW107XG4vLyBXZSBxdWV1ZSBlcnJvcnMgdG8gZW5zdXJlIHRoZXkgYXJlIHRocm93biBpbiByaWdodCBvcmRlciAoRklGTykuXG4vLyBBcnJheS1hcy1xdWV1ZSBpcyBnb29kIGVub3VnaCBoZXJlLCBzaW5jZSB3ZSBhcmUganVzdCBkZWFsaW5nIHdpdGggZXhjZXB0aW9ucy5cbnZhciBwZW5kaW5nRXJyb3JzID0gW107XG52YXIgcmVxdWVzdEVycm9yVGhyb3cgPSByYXdBc2FwLm1ha2VSZXF1ZXN0Q2FsbEZyb21UaW1lcih0aHJvd0ZpcnN0RXJyb3IpO1xuXG5mdW5jdGlvbiB0aHJvd0ZpcnN0RXJyb3IoKSB7XG4gICAgaWYgKHBlbmRpbmdFcnJvcnMubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IHBlbmRpbmdFcnJvcnMuc2hpZnQoKTtcbiAgICB9XG59XG5cbi8qKlxuICogQ2FsbHMgYSB0YXNrIGFzIHNvb24gYXMgcG9zc2libGUgYWZ0ZXIgcmV0dXJuaW5nLCBpbiBpdHMgb3duIGV2ZW50LCB3aXRoIHByaW9yaXR5XG4gKiBvdmVyIG90aGVyIGV2ZW50cyBsaWtlIGFuaW1hdGlvbiwgcmVmbG93LCBhbmQgcmVwYWludC4gQW4gZXJyb3IgdGhyb3duIGZyb20gYW5cbiAqIGV2ZW50IHdpbGwgbm90IGludGVycnVwdCwgbm9yIGV2ZW4gc3Vic3RhbnRpYWxseSBzbG93IGRvd24gdGhlIHByb2Nlc3Npbmcgb2ZcbiAqIG90aGVyIGV2ZW50cywgYnV0IHdpbGwgYmUgcmF0aGVyIHBvc3Rwb25lZCB0byBhIGxvd2VyIHByaW9yaXR5IGV2ZW50LlxuICogQHBhcmFtIHt7Y2FsbH19IHRhc2sgQSBjYWxsYWJsZSBvYmplY3QsIHR5cGljYWxseSBhIGZ1bmN0aW9uIHRoYXQgdGFrZXMgbm9cbiAqIGFyZ3VtZW50cy5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBhc2FwO1xuZnVuY3Rpb24gYXNhcCh0YXNrKSB7XG4gICAgdmFyIHJhd1Rhc2s7XG4gICAgaWYgKGZyZWVUYXNrcy5sZW5ndGgpIHtcbiAgICAgICAgcmF3VGFzayA9IGZyZWVUYXNrcy5wb3AoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByYXdUYXNrID0gbmV3IFJhd1Rhc2soKTtcbiAgICB9XG4gICAgcmF3VGFzay50YXNrID0gdGFzaztcbiAgICByYXdBc2FwKHJhd1Rhc2spO1xufVxuXG4vLyBXZSB3cmFwIHRhc2tzIHdpdGggcmVjeWNsYWJsZSB0YXNrIG9iamVjdHMuICBBIHRhc2sgb2JqZWN0IGltcGxlbWVudHNcbi8vIGBjYWxsYCwganVzdCBsaWtlIGEgZnVuY3Rpb24uXG5mdW5jdGlvbiBSYXdUYXNrKCkge1xuICAgIHRoaXMudGFzayA9IG51bGw7XG59XG5cbi8vIFRoZSBzb2xlIHB1cnBvc2Ugb2Ygd3JhcHBpbmcgdGhlIHRhc2sgaXMgdG8gY2F0Y2ggdGhlIGV4Y2VwdGlvbiBhbmQgcmVjeWNsZVxuLy8gdGhlIHRhc2sgb2JqZWN0IGFmdGVyIGl0cyBzaW5nbGUgdXNlLlxuUmF3VGFzay5wcm90b3R5cGUuY2FsbCA9IGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICB0aGlzLnRhc2suY2FsbCgpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGlmIChhc2FwLm9uZXJyb3IpIHtcbiAgICAgICAgICAgIC8vIFRoaXMgaG9vayBleGlzdHMgcHVyZWx5IGZvciB0ZXN0aW5nIHB1cnBvc2VzLlxuICAgICAgICAgICAgLy8gSXRzIG5hbWUgd2lsbCBiZSBwZXJpb2RpY2FsbHkgcmFuZG9taXplZCB0byBicmVhayBhbnkgY29kZSB0aGF0XG4gICAgICAgICAgICAvLyBkZXBlbmRzIG9uIGl0cyBleGlzdGVuY2UuXG4gICAgICAgICAgICBhc2FwLm9uZXJyb3IoZXJyb3IpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gSW4gYSB3ZWIgYnJvd3NlciwgZXhjZXB0aW9ucyBhcmUgbm90IGZhdGFsLiBIb3dldmVyLCB0byBhdm9pZFxuICAgICAgICAgICAgLy8gc2xvd2luZyBkb3duIHRoZSBxdWV1ZSBvZiBwZW5kaW5nIHRhc2tzLCB3ZSByZXRocm93IHRoZSBlcnJvciBpbiBhXG4gICAgICAgICAgICAvLyBsb3dlciBwcmlvcml0eSB0dXJuLlxuICAgICAgICAgICAgcGVuZGluZ0Vycm9ycy5wdXNoKGVycm9yKTtcbiAgICAgICAgICAgIHJlcXVlc3RFcnJvclRocm93KCk7XG4gICAgICAgIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgICB0aGlzLnRhc2sgPSBudWxsO1xuICAgICAgICBmcmVlVGFza3NbZnJlZVRhc2tzLmxlbmd0aF0gPSB0aGlzO1xuICAgIH1cbn07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLy8gVXNlIHRoZSBmYXN0ZXN0IG1lYW5zIHBvc3NpYmxlIHRvIGV4ZWN1dGUgYSB0YXNrIGluIGl0cyBvd24gdHVybiwgd2l0aFxuLy8gcHJpb3JpdHkgb3ZlciBvdGhlciBldmVudHMgaW5jbHVkaW5nIElPLCBhbmltYXRpb24sIHJlZmxvdywgYW5kIHJlZHJhd1xuLy8gZXZlbnRzIGluIGJyb3dzZXJzLlxuLy9cbi8vIEFuIGV4Y2VwdGlvbiB0aHJvd24gYnkgYSB0YXNrIHdpbGwgcGVybWFuZW50bHkgaW50ZXJydXB0IHRoZSBwcm9jZXNzaW5nIG9mXG4vLyBzdWJzZXF1ZW50IHRhc2tzLiBUaGUgaGlnaGVyIGxldmVsIGBhc2FwYCBmdW5jdGlvbiBlbnN1cmVzIHRoYXQgaWYgYW5cbi8vIGV4Y2VwdGlvbiBpcyB0aHJvd24gYnkgYSB0YXNrLCB0aGF0IHRoZSB0YXNrIHF1ZXVlIHdpbGwgY29udGludWUgZmx1c2hpbmcgYXNcbi8vIHNvb24gYXMgcG9zc2libGUsIGJ1dCBpZiB5b3UgdXNlIGByYXdBc2FwYCBkaXJlY3RseSwgeW91IGFyZSByZXNwb25zaWJsZSB0b1xuLy8gZWl0aGVyIGVuc3VyZSB0aGF0IG5vIGV4Y2VwdGlvbnMgYXJlIHRocm93biBmcm9tIHlvdXIgdGFzaywgb3IgdG8gbWFudWFsbHlcbi8vIGNhbGwgYHJhd0FzYXAucmVxdWVzdEZsdXNoYCBpZiBhbiBleGNlcHRpb24gaXMgdGhyb3duLlxubW9kdWxlLmV4cG9ydHMgPSByYXdBc2FwO1xuZnVuY3Rpb24gcmF3QXNhcCh0YXNrKSB7XG4gICAgaWYgKCFxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcmVxdWVzdEZsdXNoKCk7XG4gICAgICAgIGZsdXNoaW5nID0gdHJ1ZTtcbiAgICB9XG4gICAgLy8gRXF1aXZhbGVudCB0byBwdXNoLCBidXQgYXZvaWRzIGEgZnVuY3Rpb24gY2FsbC5cbiAgICBxdWV1ZVtxdWV1ZS5sZW5ndGhdID0gdGFzaztcbn1cblxudmFyIHF1ZXVlID0gW107XG4vLyBPbmNlIGEgZmx1c2ggaGFzIGJlZW4gcmVxdWVzdGVkLCBubyBmdXJ0aGVyIGNhbGxzIHRvIGByZXF1ZXN0Rmx1c2hgIGFyZVxuLy8gbmVjZXNzYXJ5IHVudGlsIHRoZSBuZXh0IGBmbHVzaGAgY29tcGxldGVzLlxudmFyIGZsdXNoaW5nID0gZmFsc2U7XG4vLyBgcmVxdWVzdEZsdXNoYCBpcyBhbiBpbXBsZW1lbnRhdGlvbi1zcGVjaWZpYyBtZXRob2QgdGhhdCBhdHRlbXB0cyB0byBraWNrXG4vLyBvZmYgYSBgZmx1c2hgIGV2ZW50IGFzIHF1aWNrbHkgYXMgcG9zc2libGUuIGBmbHVzaGAgd2lsbCBhdHRlbXB0IHRvIGV4aGF1c3Rcbi8vIHRoZSBldmVudCBxdWV1ZSBiZWZvcmUgeWllbGRpbmcgdG8gdGhlIGJyb3dzZXIncyBvd24gZXZlbnQgbG9vcC5cbnZhciByZXF1ZXN0Rmx1c2g7XG4vLyBUaGUgcG9zaXRpb24gb2YgdGhlIG5leHQgdGFzayB0byBleGVjdXRlIGluIHRoZSB0YXNrIHF1ZXVlLiBUaGlzIGlzXG4vLyBwcmVzZXJ2ZWQgYmV0d2VlbiBjYWxscyB0byBgZmx1c2hgIHNvIHRoYXQgaXQgY2FuIGJlIHJlc3VtZWQgaWZcbi8vIGEgdGFzayB0aHJvd3MgYW4gZXhjZXB0aW9uLlxudmFyIGluZGV4ID0gMDtcbi8vIElmIGEgdGFzayBzY2hlZHVsZXMgYWRkaXRpb25hbCB0YXNrcyByZWN1cnNpdmVseSwgdGhlIHRhc2sgcXVldWUgY2FuIGdyb3dcbi8vIHVuYm91bmRlZC4gVG8gcHJldmVudCBtZW1vcnkgZXhoYXVzdGlvbiwgdGhlIHRhc2sgcXVldWUgd2lsbCBwZXJpb2RpY2FsbHlcbi8vIHRydW5jYXRlIGFscmVhZHktY29tcGxldGVkIHRhc2tzLlxudmFyIGNhcGFjaXR5ID0gMTAyNDtcblxuLy8gVGhlIGZsdXNoIGZ1bmN0aW9uIHByb2Nlc3NlcyBhbGwgdGFza3MgdGhhdCBoYXZlIGJlZW4gc2NoZWR1bGVkIHdpdGhcbi8vIGByYXdBc2FwYCB1bmxlc3MgYW5kIHVudGlsIG9uZSBvZiB0aG9zZSB0YXNrcyB0aHJvd3MgYW4gZXhjZXB0aW9uLlxuLy8gSWYgYSB0YXNrIHRocm93cyBhbiBleGNlcHRpb24sIGBmbHVzaGAgZW5zdXJlcyB0aGF0IGl0cyBzdGF0ZSB3aWxsIHJlbWFpblxuLy8gY29uc2lzdGVudCBhbmQgd2lsbCByZXN1bWUgd2hlcmUgaXQgbGVmdCBvZmYgd2hlbiBjYWxsZWQgYWdhaW4uXG4vLyBIb3dldmVyLCBgZmx1c2hgIGRvZXMgbm90IG1ha2UgYW55IGFycmFuZ2VtZW50cyB0byBiZSBjYWxsZWQgYWdhaW4gaWYgYW5cbi8vIGV4Y2VwdGlvbiBpcyB0aHJvd24uXG5mdW5jdGlvbiBmbHVzaCgpIHtcbiAgICB3aGlsZSAoaW5kZXggPCBxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgdmFyIGN1cnJlbnRJbmRleCA9IGluZGV4O1xuICAgICAgICAvLyBBZHZhbmNlIHRoZSBpbmRleCBiZWZvcmUgY2FsbGluZyB0aGUgdGFzay4gVGhpcyBlbnN1cmVzIHRoYXQgd2Ugd2lsbFxuICAgICAgICAvLyBiZWdpbiBmbHVzaGluZyBvbiB0aGUgbmV4dCB0YXNrIHRoZSB0YXNrIHRocm93cyBhbiBlcnJvci5cbiAgICAgICAgaW5kZXggPSBpbmRleCArIDE7XG4gICAgICAgIHF1ZXVlW2N1cnJlbnRJbmRleF0uY2FsbCgpO1xuICAgICAgICAvLyBQcmV2ZW50IGxlYWtpbmcgbWVtb3J5IGZvciBsb25nIGNoYWlucyBvZiByZWN1cnNpdmUgY2FsbHMgdG8gYGFzYXBgLlxuICAgICAgICAvLyBJZiB3ZSBjYWxsIGBhc2FwYCB3aXRoaW4gdGFza3Mgc2NoZWR1bGVkIGJ5IGBhc2FwYCwgdGhlIHF1ZXVlIHdpbGxcbiAgICAgICAgLy8gZ3JvdywgYnV0IHRvIGF2b2lkIGFuIE8obikgd2FsayBmb3IgZXZlcnkgdGFzayB3ZSBleGVjdXRlLCB3ZSBkb24ndFxuICAgICAgICAvLyBzaGlmdCB0YXNrcyBvZmYgdGhlIHF1ZXVlIGFmdGVyIHRoZXkgaGF2ZSBiZWVuIGV4ZWN1dGVkLlxuICAgICAgICAvLyBJbnN0ZWFkLCB3ZSBwZXJpb2RpY2FsbHkgc2hpZnQgMTAyNCB0YXNrcyBvZmYgdGhlIHF1ZXVlLlxuICAgICAgICBpZiAoaW5kZXggPiBjYXBhY2l0eSkge1xuICAgICAgICAgICAgLy8gTWFudWFsbHkgc2hpZnQgYWxsIHZhbHVlcyBzdGFydGluZyBhdCB0aGUgaW5kZXggYmFjayB0byB0aGVcbiAgICAgICAgICAgIC8vIGJlZ2lubmluZyBvZiB0aGUgcXVldWUuXG4gICAgICAgICAgICBmb3IgKHZhciBzY2FuID0gMCwgbmV3TGVuZ3RoID0gcXVldWUubGVuZ3RoIC0gaW5kZXg7IHNjYW4gPCBuZXdMZW5ndGg7IHNjYW4rKykge1xuICAgICAgICAgICAgICAgIHF1ZXVlW3NjYW5dID0gcXVldWVbc2NhbiArIGluZGV4XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHF1ZXVlLmxlbmd0aCAtPSBpbmRleDtcbiAgICAgICAgICAgIGluZGV4ID0gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5sZW5ndGggPSAwO1xuICAgIGluZGV4ID0gMDtcbiAgICBmbHVzaGluZyA9IGZhbHNlO1xufVxuXG4vLyBgcmVxdWVzdEZsdXNoYCBpcyBpbXBsZW1lbnRlZCB1c2luZyBhIHN0cmF0ZWd5IGJhc2VkIG9uIGRhdGEgY29sbGVjdGVkIGZyb21cbi8vIGV2ZXJ5IGF2YWlsYWJsZSBTYXVjZUxhYnMgU2VsZW5pdW0gd2ViIGRyaXZlciB3b3JrZXIgYXQgdGltZSBvZiB3cml0aW5nLlxuLy8gaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vc3ByZWFkc2hlZXRzL2QvMW1HLTVVWUd1cDVxeEdkRU1Xa2hQNkJXQ3owNTNOVWIyRTFRb1VUVTE2dUEvZWRpdCNnaWQ9NzgzNzI0NTkzXG5cbi8vIFNhZmFyaSA2IGFuZCA2LjEgZm9yIGRlc2t0b3AsIGlQYWQsIGFuZCBpUGhvbmUgYXJlIHRoZSBvbmx5IGJyb3dzZXJzIHRoYXRcbi8vIGhhdmUgV2ViS2l0TXV0YXRpb25PYnNlcnZlciBidXQgbm90IHVuLXByZWZpeGVkIE11dGF0aW9uT2JzZXJ2ZXIuXG4vLyBNdXN0IHVzZSBgZ2xvYmFsYCBvciBgc2VsZmAgaW5zdGVhZCBvZiBgd2luZG93YCB0byB3b3JrIGluIGJvdGggZnJhbWVzIGFuZCB3ZWJcbi8vIHdvcmtlcnMuIGBnbG9iYWxgIGlzIGEgcHJvdmlzaW9uIG9mIEJyb3dzZXJpZnksIE1yLCBNcnMsIG9yIE1vcC5cblxuLyogZ2xvYmFscyBzZWxmICovXG52YXIgc2NvcGUgPSB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogc2VsZjtcbnZhciBCcm93c2VyTXV0YXRpb25PYnNlcnZlciA9IHNjb3BlLk11dGF0aW9uT2JzZXJ2ZXIgfHwgc2NvcGUuV2ViS2l0TXV0YXRpb25PYnNlcnZlcjtcblxuLy8gTXV0YXRpb25PYnNlcnZlcnMgYXJlIGRlc2lyYWJsZSBiZWNhdXNlIHRoZXkgaGF2ZSBoaWdoIHByaW9yaXR5IGFuZCB3b3JrXG4vLyByZWxpYWJseSBldmVyeXdoZXJlIHRoZXkgYXJlIGltcGxlbWVudGVkLlxuLy8gVGhleSBhcmUgaW1wbGVtZW50ZWQgaW4gYWxsIG1vZGVybiBicm93c2Vycy5cbi8vXG4vLyAtIEFuZHJvaWQgNC00LjNcbi8vIC0gQ2hyb21lIDI2LTM0XG4vLyAtIEZpcmVmb3ggMTQtMjlcbi8vIC0gSW50ZXJuZXQgRXhwbG9yZXIgMTFcbi8vIC0gaVBhZCBTYWZhcmkgNi03LjFcbi8vIC0gaVBob25lIFNhZmFyaSA3LTcuMVxuLy8gLSBTYWZhcmkgNi03XG5pZiAodHlwZW9mIEJyb3dzZXJNdXRhdGlvbk9ic2VydmVyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXF1ZXN0Rmx1c2ggPSBtYWtlUmVxdWVzdENhbGxGcm9tTXV0YXRpb25PYnNlcnZlcihmbHVzaCk7XG5cbi8vIE1lc3NhZ2VDaGFubmVscyBhcmUgZGVzaXJhYmxlIGJlY2F1c2UgdGhleSBnaXZlIGRpcmVjdCBhY2Nlc3MgdG8gdGhlIEhUTUxcbi8vIHRhc2sgcXVldWUsIGFyZSBpbXBsZW1lbnRlZCBpbiBJbnRlcm5ldCBFeHBsb3JlciAxMCwgU2FmYXJpIDUuMC0xLCBhbmQgT3BlcmFcbi8vIDExLTEyLCBhbmQgaW4gd2ViIHdvcmtlcnMgaW4gbWFueSBlbmdpbmVzLlxuLy8gQWx0aG91Z2ggbWVzc2FnZSBjaGFubmVscyB5aWVsZCB0byBhbnkgcXVldWVkIHJlbmRlcmluZyBhbmQgSU8gdGFza3MsIHRoZXlcbi8vIHdvdWxkIGJlIGJldHRlciB0aGFuIGltcG9zaW5nIHRoZSA0bXMgZGVsYXkgb2YgdGltZXJzLlxuLy8gSG93ZXZlciwgdGhleSBkbyBub3Qgd29yayByZWxpYWJseSBpbiBJbnRlcm5ldCBFeHBsb3JlciBvciBTYWZhcmkuXG5cbi8vIEludGVybmV0IEV4cGxvcmVyIDEwIGlzIHRoZSBvbmx5IGJyb3dzZXIgdGhhdCBoYXMgc2V0SW1tZWRpYXRlIGJ1dCBkb2VzXG4vLyBub3QgaGF2ZSBNdXRhdGlvbk9ic2VydmVycy5cbi8vIEFsdGhvdWdoIHNldEltbWVkaWF0ZSB5aWVsZHMgdG8gdGhlIGJyb3dzZXIncyByZW5kZXJlciwgaXQgd291bGQgYmVcbi8vIHByZWZlcnJhYmxlIHRvIGZhbGxpbmcgYmFjayB0byBzZXRUaW1lb3V0IHNpbmNlIGl0IGRvZXMgbm90IGhhdmVcbi8vIHRoZSBtaW5pbXVtIDRtcyBwZW5hbHR5LlxuLy8gVW5mb3J0dW5hdGVseSB0aGVyZSBhcHBlYXJzIHRvIGJlIGEgYnVnIGluIEludGVybmV0IEV4cGxvcmVyIDEwIE1vYmlsZSAoYW5kXG4vLyBEZXNrdG9wIHRvIGEgbGVzc2VyIGV4dGVudCkgdGhhdCByZW5kZXJzIGJvdGggc2V0SW1tZWRpYXRlIGFuZFxuLy8gTWVzc2FnZUNoYW5uZWwgdXNlbGVzcyBmb3IgdGhlIHB1cnBvc2VzIG9mIEFTQVAuXG4vLyBodHRwczovL2dpdGh1Yi5jb20va3Jpc2tvd2FsL3EvaXNzdWVzLzM5NlxuXG4vLyBUaW1lcnMgYXJlIGltcGxlbWVudGVkIHVuaXZlcnNhbGx5LlxuLy8gV2UgZmFsbCBiYWNrIHRvIHRpbWVycyBpbiB3b3JrZXJzIGluIG1vc3QgZW5naW5lcywgYW5kIGluIGZvcmVncm91bmRcbi8vIGNvbnRleHRzIGluIHRoZSBmb2xsb3dpbmcgYnJvd3NlcnMuXG4vLyBIb3dldmVyLCBub3RlIHRoYXQgZXZlbiB0aGlzIHNpbXBsZSBjYXNlIHJlcXVpcmVzIG51YW5jZXMgdG8gb3BlcmF0ZSBpbiBhXG4vLyBicm9hZCBzcGVjdHJ1bSBvZiBicm93c2Vycy5cbi8vXG4vLyAtIEZpcmVmb3ggMy0xM1xuLy8gLSBJbnRlcm5ldCBFeHBsb3JlciA2LTlcbi8vIC0gaVBhZCBTYWZhcmkgNC4zXG4vLyAtIEx5bnggMi44Ljdcbn0gZWxzZSB7XG4gICAgcmVxdWVzdEZsdXNoID0gbWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKGZsdXNoKTtcbn1cblxuLy8gYHJlcXVlc3RGbHVzaGAgcmVxdWVzdHMgdGhhdCB0aGUgaGlnaCBwcmlvcml0eSBldmVudCBxdWV1ZSBiZSBmbHVzaGVkIGFzXG4vLyBzb29uIGFzIHBvc3NpYmxlLlxuLy8gVGhpcyBpcyB1c2VmdWwgdG8gcHJldmVudCBhbiBlcnJvciB0aHJvd24gaW4gYSB0YXNrIGZyb20gc3RhbGxpbmcgdGhlIGV2ZW50XG4vLyBxdWV1ZSBpZiB0aGUgZXhjZXB0aW9uIGhhbmRsZWQgYnkgTm9kZS5qc+KAmXNcbi8vIGBwcm9jZXNzLm9uKFwidW5jYXVnaHRFeGNlcHRpb25cIilgIG9yIGJ5IGEgZG9tYWluLlxucmF3QXNhcC5yZXF1ZXN0Rmx1c2ggPSByZXF1ZXN0Rmx1c2g7XG5cbi8vIFRvIHJlcXVlc3QgYSBoaWdoIHByaW9yaXR5IGV2ZW50LCB3ZSBpbmR1Y2UgYSBtdXRhdGlvbiBvYnNlcnZlciBieSB0b2dnbGluZ1xuLy8gdGhlIHRleHQgb2YgYSB0ZXh0IG5vZGUgYmV0d2VlbiBcIjFcIiBhbmQgXCItMVwiLlxuZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbU11dGF0aW9uT2JzZXJ2ZXIoY2FsbGJhY2spIHtcbiAgICB2YXIgdG9nZ2xlID0gMTtcbiAgICB2YXIgb2JzZXJ2ZXIgPSBuZXcgQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIoY2FsbGJhY2spO1xuICAgIHZhciBub2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJcIik7XG4gICAgb2JzZXJ2ZXIub2JzZXJ2ZShub2RlLCB7Y2hhcmFjdGVyRGF0YTogdHJ1ZX0pO1xuICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbiAgICAgICAgdG9nZ2xlID0gLXRvZ2dsZTtcbiAgICAgICAgbm9kZS5kYXRhID0gdG9nZ2xlO1xuICAgIH07XG59XG5cbi8vIFRoZSBtZXNzYWdlIGNoYW5uZWwgdGVjaG5pcXVlIHdhcyBkaXNjb3ZlcmVkIGJ5IE1hbHRlIFVibCBhbmQgd2FzIHRoZVxuLy8gb3JpZ2luYWwgZm91bmRhdGlvbiBmb3IgdGhpcyBsaWJyYXJ5LlxuLy8gaHR0cDovL3d3dy5ub25ibG9ja2luZy5pby8yMDExLzA2L3dpbmRvd25leHR0aWNrLmh0bWxcblxuLy8gU2FmYXJpIDYuMC41IChhdCBsZWFzdCkgaW50ZXJtaXR0ZW50bHkgZmFpbHMgdG8gY3JlYXRlIG1lc3NhZ2UgcG9ydHMgb24gYVxuLy8gcGFnZSdzIGZpcnN0IGxvYWQuIFRoYW5rZnVsbHksIHRoaXMgdmVyc2lvbiBvZiBTYWZhcmkgc3VwcG9ydHNcbi8vIE11dGF0aW9uT2JzZXJ2ZXJzLCBzbyB3ZSBkb24ndCBuZWVkIHRvIGZhbGwgYmFjayBpbiB0aGF0IGNhc2UuXG5cbi8vIGZ1bmN0aW9uIG1ha2VSZXF1ZXN0Q2FsbEZyb21NZXNzYWdlQ2hhbm5lbChjYWxsYmFjaykge1xuLy8gICAgIHZhciBjaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4vLyAgICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBjYWxsYmFjaztcbi8vICAgICByZXR1cm4gZnVuY3Rpb24gcmVxdWVzdENhbGwoKSB7XG4vLyAgICAgICAgIGNoYW5uZWwucG9ydDIucG9zdE1lc3NhZ2UoMCk7XG4vLyAgICAgfTtcbi8vIH1cblxuLy8gRm9yIHJlYXNvbnMgZXhwbGFpbmVkIGFib3ZlLCB3ZSBhcmUgYWxzbyB1bmFibGUgdG8gdXNlIGBzZXRJbW1lZGlhdGVgXG4vLyB1bmRlciBhbnkgY2lyY3Vtc3RhbmNlcy5cbi8vIEV2ZW4gaWYgd2Ugd2VyZSwgdGhlcmUgaXMgYW5vdGhlciBidWcgaW4gSW50ZXJuZXQgRXhwbG9yZXIgMTAuXG4vLyBJdCBpcyBub3Qgc3VmZmljaWVudCB0byBhc3NpZ24gYHNldEltbWVkaWF0ZWAgdG8gYHJlcXVlc3RGbHVzaGAgYmVjYXVzZVxuLy8gYHNldEltbWVkaWF0ZWAgbXVzdCBiZSBjYWxsZWQgKmJ5IG5hbWUqIGFuZCB0aGVyZWZvcmUgbXVzdCBiZSB3cmFwcGVkIGluIGFcbi8vIGNsb3N1cmUuXG4vLyBOZXZlciBmb3JnZXQuXG5cbi8vIGZ1bmN0aW9uIG1ha2VSZXF1ZXN0Q2FsbEZyb21TZXRJbW1lZGlhdGUoY2FsbGJhY2spIHtcbi8vICAgICByZXR1cm4gZnVuY3Rpb24gcmVxdWVzdENhbGwoKSB7XG4vLyAgICAgICAgIHNldEltbWVkaWF0ZShjYWxsYmFjayk7XG4vLyAgICAgfTtcbi8vIH1cblxuLy8gU2FmYXJpIDYuMCBoYXMgYSBwcm9ibGVtIHdoZXJlIHRpbWVycyB3aWxsIGdldCBsb3N0IHdoaWxlIHRoZSB1c2VyIGlzXG4vLyBzY3JvbGxpbmcuIFRoaXMgcHJvYmxlbSBkb2VzIG5vdCBpbXBhY3QgQVNBUCBiZWNhdXNlIFNhZmFyaSA2LjAgc3VwcG9ydHNcbi8vIG11dGF0aW9uIG9ic2VydmVycywgc28gdGhhdCBpbXBsZW1lbnRhdGlvbiBpcyB1c2VkIGluc3RlYWQuXG4vLyBIb3dldmVyLCBpZiB3ZSBldmVyIGVsZWN0IHRvIHVzZSB0aW1lcnMgaW4gU2FmYXJpLCB0aGUgcHJldmFsZW50IHdvcmstYXJvdW5kXG4vLyBpcyB0byBhZGQgYSBzY3JvbGwgZXZlbnQgbGlzdGVuZXIgdGhhdCBjYWxscyBmb3IgYSBmbHVzaC5cblxuLy8gYHNldFRpbWVvdXRgIGRvZXMgbm90IGNhbGwgdGhlIHBhc3NlZCBjYWxsYmFjayBpZiB0aGUgZGVsYXkgaXMgbGVzcyB0aGFuXG4vLyBhcHByb3hpbWF0ZWx5IDcgaW4gd2ViIHdvcmtlcnMgaW4gRmlyZWZveCA4IHRocm91Z2ggMTgsIGFuZCBzb21ldGltZXMgbm90XG4vLyBldmVuIHRoZW4uXG5cbmZ1bmN0aW9uIG1ha2VSZXF1ZXN0Q2FsbEZyb21UaW1lcihjYWxsYmFjaykge1xuICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbiAgICAgICAgLy8gV2UgZGlzcGF0Y2ggYSB0aW1lb3V0IHdpdGggYSBzcGVjaWZpZWQgZGVsYXkgb2YgMCBmb3IgZW5naW5lcyB0aGF0XG4gICAgICAgIC8vIGNhbiByZWxpYWJseSBhY2NvbW1vZGF0ZSB0aGF0IHJlcXVlc3QuIFRoaXMgd2lsbCB1c3VhbGx5IGJlIHNuYXBwZWRcbiAgICAgICAgLy8gdG8gYSA0IG1pbGlzZWNvbmQgZGVsYXksIGJ1dCBvbmNlIHdlJ3JlIGZsdXNoaW5nLCB0aGVyZSdzIG5vIGRlbGF5XG4gICAgICAgIC8vIGJldHdlZW4gZXZlbnRzLlxuICAgICAgICB2YXIgdGltZW91dEhhbmRsZSA9IHNldFRpbWVvdXQoaGFuZGxlVGltZXIsIDApO1xuICAgICAgICAvLyBIb3dldmVyLCBzaW5jZSB0aGlzIHRpbWVyIGdldHMgZnJlcXVlbnRseSBkcm9wcGVkIGluIEZpcmVmb3hcbiAgICAgICAgLy8gd29ya2Vycywgd2UgZW5saXN0IGFuIGludGVydmFsIGhhbmRsZSB0aGF0IHdpbGwgdHJ5IHRvIGZpcmVcbiAgICAgICAgLy8gYW4gZXZlbnQgMjAgdGltZXMgcGVyIHNlY29uZCB1bnRpbCBpdCBzdWNjZWVkcy5cbiAgICAgICAgdmFyIGludGVydmFsSGFuZGxlID0gc2V0SW50ZXJ2YWwoaGFuZGxlVGltZXIsIDUwKTtcblxuICAgICAgICBmdW5jdGlvbiBoYW5kbGVUaW1lcigpIHtcbiAgICAgICAgICAgIC8vIFdoaWNoZXZlciB0aW1lciBzdWNjZWVkcyB3aWxsIGNhbmNlbCBib3RoIHRpbWVycyBhbmRcbiAgICAgICAgICAgIC8vIGV4ZWN1dGUgdGhlIGNhbGxiYWNrLlxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRIYW5kbGUpO1xuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbEhhbmRsZSk7XG4gICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9XG4gICAgfTtcbn1cblxuLy8gVGhpcyBpcyBmb3IgYGFzYXAuanNgIG9ubHkuXG4vLyBJdHMgbmFtZSB3aWxsIGJlIHBlcmlvZGljYWxseSByYW5kb21pemVkIHRvIGJyZWFrIGFueSBjb2RlIHRoYXQgZGVwZW5kcyBvblxuLy8gaXRzIGV4aXN0ZW5jZS5cbnJhd0FzYXAubWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyID0gbWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyO1xuXG4vLyBBU0FQIHdhcyBvcmlnaW5hbGx5IGEgbmV4dFRpY2sgc2hpbSBpbmNsdWRlZCBpbiBRLiBUaGlzIHdhcyBmYWN0b3JlZCBvdXRcbi8vIGludG8gdGhpcyBBU0FQIHBhY2thZ2UuIEl0IHdhcyBsYXRlciBhZGFwdGVkIHRvIFJTVlAgd2hpY2ggbWFkZSBmdXJ0aGVyXG4vLyBhbWVuZG1lbnRzLiBUaGVzZSBkZWNpc2lvbnMsIHBhcnRpY3VsYXJseSB0byBtYXJnaW5hbGl6ZSBNZXNzYWdlQ2hhbm5lbCBhbmRcbi8vIHRvIGNhcHR1cmUgdGhlIE11dGF0aW9uT2JzZXJ2ZXIgaW1wbGVtZW50YXRpb24gaW4gYSBjbG9zdXJlLCB3ZXJlIGludGVncmF0ZWRcbi8vIGJhY2sgaW50byBBU0FQIHByb3Blci5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90aWxkZWlvL3JzdnAuanMvYmxvYi9jZGRmNzIzMjU0NmE5Y2Y4NTg1MjRiNzVjZGU2ZjllZGY3MjYyMGE3L2xpYi9yc3ZwL2FzYXAuanNcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjFcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG09cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHkoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9aWYoIWFhKXRocm93IEVycm9yKHkoMjI3KSk7dmFyIGJhPW5ldyBTZXQsY2E9e307ZnVuY3Rpb24gZGEoYSxiKXtlYShhLGIpO2VhKGErXCJDYXB0dXJlXCIsYil9XG5mdW5jdGlvbiBlYShhLGIpe2NhW2FdPWI7Zm9yKGE9MDthPGIubGVuZ3RoO2ErKyliYS5hZGQoYlthXSl9XG52YXIgZmE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLGhhPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxpYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFxuamE9e30sa2E9e307ZnVuY3Rpb24gbGEoYSl7aWYoaWEuY2FsbChrYSxhKSlyZXR1cm4hMDtpZihpYS5jYWxsKGphLGEpKXJldHVybiExO2lmKGhhLnRlc3QoYSkpcmV0dXJuIGthW2FdPSEwO2phW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIG1hKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gbmEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8bWEoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBCKGEsYixjLGQsZSxmLGcpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mO3RoaXMucmVtb3ZlRW1wdHlTdHJpbmc9Z312YXIgRD17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDAsITEsYSxudWxsLCExLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtEW2JdPW5ldyBCKGIsMSwhMSxhWzFdLG51bGwsITEsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYSxudWxsLCExLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGRpc2FibGVSZW1vdGVQbGF5YmFjayBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwzLCEwLGEsbnVsbCwhMSwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw0LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDYsITEsYSxudWxsLCExLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7dmFyIG9hPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gcGEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EsXG5wYSk7RFtiXT1uZXcgQihiLDEsITEsYSxudWxsLCExLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLHBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLHBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5ELnhsaW5rSHJlZj1uZXcgQihcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITAsITEpO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITAsITApfSk7XG5mdW5jdGlvbiBxYShhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChuYShiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/bGEoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbnZhciByYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCxzYT02MDEwMyx0YT02MDEwNix1YT02MDEwNyx3YT02MDEwOCx4YT02MDExNCx5YT02MDEwOSx6YT02MDExMCxBYT02MDExMixCYT02MDExMyxDYT02MDEyMCxEYT02MDExNSxFYT02MDExNixGYT02MDEyMSxHYT02MDEyOCxIYT02MDEyOSxJYT02MDEzMCxKYT02MDEzMTtcbmlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3Ipe3ZhciBFPVN5bWJvbC5mb3I7c2E9RShcInJlYWN0LmVsZW1lbnRcIik7dGE9RShcInJlYWN0LnBvcnRhbFwiKTt1YT1FKFwicmVhY3QuZnJhZ21lbnRcIik7d2E9RShcInJlYWN0LnN0cmljdF9tb2RlXCIpO3hhPUUoXCJyZWFjdC5wcm9maWxlclwiKTt5YT1FKFwicmVhY3QucHJvdmlkZXJcIik7emE9RShcInJlYWN0LmNvbnRleHRcIik7QWE9RShcInJlYWN0LmZvcndhcmRfcmVmXCIpO0JhPUUoXCJyZWFjdC5zdXNwZW5zZVwiKTtDYT1FKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTtEYT1FKFwicmVhY3QubWVtb1wiKTtFYT1FKFwicmVhY3QubGF6eVwiKTtGYT1FKFwicmVhY3QuYmxvY2tcIik7RShcInJlYWN0LnNjb3BlXCIpO0dhPUUoXCJyZWFjdC5vcGFxdWUuaWRcIik7SGE9RShcInJlYWN0LmRlYnVnX3RyYWNlX21vZGVcIik7SWE9RShcInJlYWN0Lm9mZnNjcmVlblwiKTtKYT1FKFwicmVhY3QubGVnYWN5X2hpZGRlblwiKX1cbnZhciBLYT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gTGEoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPUthJiZhW0thXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfXZhciBNYTtmdW5jdGlvbiBOYShhKXtpZih2b2lkIDA9PT1NYSl0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goYyl7dmFyIGI9Yy5zdGFjay50cmltKCkubWF0Y2goL1xcbiggKihhdCApPykvKTtNYT1iJiZiWzFdfHxcIlwifXJldHVyblwiXFxuXCIrTWErYX12YXIgT2E9ITE7XG5mdW5jdGlvbiBQYShhLGIpe2lmKCFhfHxPYSlyZXR1cm5cIlwiO09hPSEwO3ZhciBjPUVycm9yLnByZXBhcmVTdGFja1RyYWNlO0Vycm9yLnByZXBhcmVTdGFja1RyYWNlPXZvaWQgMDt0cnl7aWYoYilpZihiPWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fX0pLFwib2JqZWN0XCI9PT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5jb25zdHJ1Y3Qpe3RyeXtSZWZsZWN0LmNvbnN0cnVjdChiLFtdKX1jYXRjaChrKXt2YXIgZD1rfVJlZmxlY3QuY29uc3RydWN0KGEsW10sYil9ZWxzZXt0cnl7Yi5jYWxsKCl9Y2F0Y2goayl7ZD1rfWEuY2FsbChiLnByb3RvdHlwZSl9ZWxzZXt0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goayl7ZD1rfWEoKX19Y2F0Y2goayl7aWYoayYmZCYmXCJzdHJpbmdcIj09PXR5cGVvZiBrLnN0YWNrKXtmb3IodmFyIGU9ay5zdGFjay5zcGxpdChcIlxcblwiKSxcbmY9ZC5zdGFjay5zcGxpdChcIlxcblwiKSxnPWUubGVuZ3RoLTEsaD1mLmxlbmd0aC0xOzE8PWcmJjA8PWgmJmVbZ10hPT1mW2hdOyloLS07Zm9yKDsxPD1nJiYwPD1oO2ctLSxoLS0paWYoZVtnXSE9PWZbaF0pe2lmKDEhPT1nfHwxIT09aCl7ZG8gaWYoZy0tLGgtLSwwPmh8fGVbZ10hPT1mW2hdKXJldHVyblwiXFxuXCIrZVtnXS5yZXBsYWNlKFwiIGF0IG5ldyBcIixcIiBhdCBcIik7d2hpbGUoMTw9ZyYmMDw9aCl9YnJlYWt9fX1maW5hbGx5e09hPSExLEVycm9yLnByZXBhcmVTdGFja1RyYWNlPWN9cmV0dXJuKGE9YT9hLmRpc3BsYXlOYW1lfHxhLm5hbWU6XCJcIik/TmEoYSk6XCJcIn1cbmZ1bmN0aW9uIFFhKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnJldHVybiBOYShhLnR5cGUpO2Nhc2UgMTY6cmV0dXJuIE5hKFwiTGF6eVwiKTtjYXNlIDEzOnJldHVybiBOYShcIlN1c3BlbnNlXCIpO2Nhc2UgMTk6cmV0dXJuIE5hKFwiU3VzcGVuc2VMaXN0XCIpO2Nhc2UgMDpjYXNlIDI6Y2FzZSAxNTpyZXR1cm4gYT1QYShhLnR5cGUsITEpLGE7Y2FzZSAxMTpyZXR1cm4gYT1QYShhLnR5cGUucmVuZGVyLCExKSxhO2Nhc2UgMjI6cmV0dXJuIGE9UGEoYS50eXBlLl9yZW5kZXIsITEpLGE7Y2FzZSAxOnJldHVybiBhPVBhKGEudHlwZSwhMCksYTtkZWZhdWx0OnJldHVyblwiXCJ9fVxuZnVuY3Rpb24gUmEoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSB1YTpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSB0YTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgeGE6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2Ugd2E6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBCYTpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBDYTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB6YTpyZXR1cm4oYS5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLkNvbnN1bWVyXCI7Y2FzZSB5YTpyZXR1cm4oYS5fY29udGV4dC5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLlByb3ZpZGVyXCI7Y2FzZSBBYTp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtcbnJldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgRGE6cmV0dXJuIFJhKGEudHlwZSk7Y2FzZSBGYTpyZXR1cm4gUmEoYS5fcmVuZGVyKTtjYXNlIEVhOmI9YS5fcGF5bG9hZDthPWEuX2luaXQ7dHJ5e3JldHVybiBSYShhKGIpKX1jYXRjaChjKXt9fXJldHVybiBudWxsfWZ1bmN0aW9uIFNhKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiBUYShhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWEoYSl7dmFyIGI9VGEoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZhKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYShhKSl9ZnVuY3Rpb24gV2EoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRhKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gWGEoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fVxuZnVuY3Rpb24gWWEoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG0oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIFphKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPVNhKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gJGEoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZxYShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gYWIoYSxiKXskYShhLGIpO3ZhciBjPVNhKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP2JiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJmJiKGEsYi50eXBlLFNhKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gY2IoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIGJiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8WGEoYS5vd25lckRvY3VtZW50KSE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfWZ1bmN0aW9uIGRiKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifWZ1bmN0aW9uIGViKGEsYil7YT1tKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9ZGIoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfVxuZnVuY3Rpb24gZmIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK1NhKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBnYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IoeSg5MSkpO3JldHVybiBtKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGhiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHkoOTIpKTtpZihBcnJheS5pc0FycmF5KGMpKXtpZighKDE+PWMubGVuZ3RoKSl0aHJvdyBFcnJvcih5KDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6U2EoYyl9fVxuZnVuY3Rpb24gaWIoYSxiKXt2YXIgYz1TYShiLnZhbHVlKSxkPVNhKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gamIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIga2I9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gbGIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBtYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/bGIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgbmIsb2I9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09a2Iuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7bmI9bmJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bmIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9bmIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gcGIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBxYj17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxyYj1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMocWIpLmZvckVhY2goZnVuY3Rpb24oYSl7cmIuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtxYltiXT1xYlthXX0pfSk7ZnVuY3Rpb24gc2IoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fHFiLmhhc093blByb3BlcnR5KGEpJiZxYlthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiB0YihhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1zYihjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciB1Yj1tKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gdmIoYSxiKXtpZihiKXtpZih1YlthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHkoMTM3LGEpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHkoNjApKTtpZighKFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHkoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHkoNjIpKTt9fVxuZnVuY3Rpb24gd2IoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fWZ1bmN0aW9uIHhiKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX12YXIgeWI9bnVsbCx6Yj1udWxsLEFiPW51bGw7XG5mdW5jdGlvbiBCYihhKXtpZihhPUNiKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgeWIpdGhyb3cgRXJyb3IoeSgyODApKTt2YXIgYj1hLnN0YXRlTm9kZTtiJiYoYj1EYihiKSx5YihhLnN0YXRlTm9kZSxhLnR5cGUsYikpfX1mdW5jdGlvbiBFYihhKXt6Yj9BYj9BYi5wdXNoKGEpOkFiPVthXTp6Yj1hfWZ1bmN0aW9uIEZiKCl7aWYoemIpe3ZhciBhPXpiLGI9QWI7QWI9emI9bnVsbDtCYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspQmIoYlthXSl9fWZ1bmN0aW9uIEdiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gSGIoYSxiLGMsZCxlKXtyZXR1cm4gYShiLGMsZCxlKX1mdW5jdGlvbiBJYigpe312YXIgSmI9R2IsS2I9ITEsTGI9ITE7ZnVuY3Rpb24gTWIoKXtpZihudWxsIT09emJ8fG51bGwhPT1BYilJYigpLEZiKCl9XG5mdW5jdGlvbiBOYihhLGIsYyl7aWYoTGIpcmV0dXJuIGEoYixjKTtMYj0hMDt0cnl7cmV0dXJuIEpiKGEsYixjKX1maW5hbGx5e0xiPSExLE1iKCl9fVxuZnVuY3Rpb24gT2IoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDt2YXIgZD1EYihjKTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgYyl0aHJvdyBFcnJvcih5KDIzMSxiLHR5cGVvZiBjKSk7cmV0dXJuIGN9dmFyIFBiPSExO2lmKGZhKXRyeXt2YXIgUWI9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KFFiLFwicGFzc2l2ZVwiLHtnZXQ6ZnVuY3Rpb24oKXtQYj0hMH19KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYik7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsUWIsUWIpfWNhdGNoKGEpe1BiPSExfWZ1bmN0aW9uIFJiKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChuKXt0aGlzLm9uRXJyb3Iobil9fXZhciBTYj0hMSxUYj1udWxsLFViPSExLFZiPW51bGwsV2I9e29uRXJyb3I6ZnVuY3Rpb24oYSl7U2I9ITA7VGI9YX19O2Z1bmN0aW9uIFhiKGEsYixjLGQsZSxmLGcsaCxrKXtTYj0hMTtUYj1udWxsO1JiLmFwcGx5KFdiLGFyZ3VtZW50cyl9XG5mdW5jdGlvbiBZYihhLGIsYyxkLGUsZixnLGgsayl7WGIuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKFNiKXtpZihTYil7dmFyIGw9VGI7U2I9ITE7VGI9bnVsbH1lbHNlIHRocm93IEVycm9yKHkoMTk4KSk7VWJ8fChVYj0hMCxWYj1sKX19ZnVuY3Rpb24gWmIoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmZsYWdzJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiAkYihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGFjKGEpe2lmKFpiKGEpIT09YSl0aHJvdyBFcnJvcih5KDE4OCkpO31cbmZ1bmN0aW9uIGJjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPVpiKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGFjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGFjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IoeSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih5KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHkoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gY2MoYSl7YT1iYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGRjKGEsYil7Zm9yKHZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1iOyl7aWYoYj09PWF8fGI9PT1jKXJldHVybiEwO2I9Yi5yZXR1cm59cmV0dXJuITF9dmFyIGVjLGZjLGdjLGhjLGljPSExLGpjPVtdLGtjPW51bGwsbGM9bnVsbCxtYz1udWxsLG5jPW5ldyBNYXAsb2M9bmV3IE1hcCxwYz1bXSxxYz1cIm1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXRcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiByYyhhLGIsYyxkLGUpe3JldHVybntibG9ja2VkT246YSxkb21FdmVudE5hbWU6YixldmVudFN5c3RlbUZsYWdzOmN8MTYsbmF0aXZlRXZlbnQ6ZSx0YXJnZXRDb250YWluZXJzOltkXX19ZnVuY3Rpb24gc2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjprYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6bGM9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6bWM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOm5jLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOm9jLmRlbGV0ZShiLnBvaW50ZXJJZCl9fVxuZnVuY3Rpb24gdGMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT1yYyhiLGMsZCxlLGYpLG51bGwhPT1iJiYoYj1DYihiKSxudWxsIT09YiYmZmMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO2I9YS50YXJnZXRDb250YWluZXJzO251bGwhPT1lJiYtMT09PWIuaW5kZXhPZihlKSYmYi5wdXNoKGUpO3JldHVybiBhfVxuZnVuY3Rpb24gdWMoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzaW5cIjpyZXR1cm4ga2M9dGMoa2MsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIGxjPXRjKGxjLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBtYz10YyhtYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO25jLnNldChmLHRjKG5jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxvYy5zZXQoZix0YyhvYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiB2YyhhKXt2YXIgYj13YyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPVpiKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPSRiKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO2hjKGEubGFuZVByaW9yaXR5LGZ1bmN0aW9uKCl7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoYS5wcmlvcml0eSxmdW5jdGlvbigpe2djKGMpfSl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmh5ZHJhdGUpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfVxuZnVuY3Rpb24geGMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO2Zvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXJldHVybiBiPUNiKGMpLG51bGwhPT1iJiZmYyhiKSxhLmJsb2NrZWRPbj1jLCExO2Iuc2hpZnQoKX1yZXR1cm4hMH1mdW5jdGlvbiB6YyhhLGIsYyl7eGMoYSkmJmMuZGVsZXRlKGIpfVxuZnVuY3Rpb24gQWMoKXtmb3IoaWM9ITE7MDxqYy5sZW5ndGg7KXt2YXIgYT1qY1swXTtpZihudWxsIT09YS5ibG9ja2VkT24pe2E9Q2IoYS5ibG9ja2VkT24pO251bGwhPT1hJiZlYyhhKTticmVha31mb3IodmFyIGI9YS50YXJnZXRDb250YWluZXJzOzA8Yi5sZW5ndGg7KXt2YXIgYz15YyhhLmRvbUV2ZW50TmFtZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYlswXSxhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yyl7YS5ibG9ja2VkT249YzticmVha31iLnNoaWZ0KCl9bnVsbD09PWEuYmxvY2tlZE9uJiZqYy5zaGlmdCgpfW51bGwhPT1rYyYmeGMoa2MpJiYoa2M9bnVsbCk7bnVsbCE9PWxjJiZ4YyhsYykmJihsYz1udWxsKTtudWxsIT09bWMmJnhjKG1jKSYmKG1jPW51bGwpO25jLmZvckVhY2goemMpO29jLmZvckVhY2goemMpfVxuZnVuY3Rpb24gQmMoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLGljfHwoaWM9ITAsci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksQWMpKSl9XG5mdW5jdGlvbiBDYyhhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBCYyhiLGEpfWlmKDA8amMubGVuZ3RoKXtCYyhqY1swXSxhKTtmb3IodmFyIGM9MTtjPGpjLmxlbmd0aDtjKyspe3ZhciBkPWpjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09a2MmJkJjKGtjLGEpO251bGwhPT1sYyYmQmMobGMsYSk7bnVsbCE9PW1jJiZCYyhtYyxhKTtuYy5mb3JFYWNoKGIpO29jLmZvckVhY2goYik7Zm9yKGM9MDtjPHBjLmxlbmd0aDtjKyspZD1wY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8cGMubGVuZ3RoJiYoYz1wY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOyl2YyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJnBjLnNoaWZ0KCl9XG5mdW5jdGlvbiBEYyhhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBFYz17YW5pbWF0aW9uZW5kOkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6RGMoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxGYz17fSxHYz17fTtcbmZhJiYoR2M9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgRWMuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgRWMuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgRWMuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgRWMudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBIYyhhKXtpZihGY1thXSlyZXR1cm4gRmNbYV07aWYoIUVjW2FdKXJldHVybiBhO3ZhciBiPUVjW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIEdjKXJldHVybiBGY1thXT1iW2NdO3JldHVybiBhfVxudmFyIEljPUhjKFwiYW5pbWF0aW9uZW5kXCIpLEpjPUhjKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLEtjPUhjKFwiYW5pbWF0aW9uc3RhcnRcIiksTGM9SGMoXCJ0cmFuc2l0aW9uZW5kXCIpLE1jPW5ldyBNYXAsTmM9bmV3IE1hcCxPYz1bXCJhYm9ydFwiLFwiYWJvcnRcIixJYyxcImFuaW1hdGlvbkVuZFwiLEpjLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCIsS2MsXCJhbmltYXRpb25TdGFydFwiLFwiY2FucGxheVwiLFwiY2FuUGxheVwiLFwiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCIsXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIixcImVtcHRpZWRcIixcImVtcHRpZWRcIixcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmRlZFwiLFwiZW5kZWRcIixcImVycm9yXCIsXCJlcnJvclwiLFwiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCIsXCJsb2FkXCIsXCJsb2FkXCIsXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCIsXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIixcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsXG5cImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCIsXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIixcInNlZWtpbmdcIixcInNlZWtpbmdcIixcInN0YWxsZWRcIixcInN0YWxsZWRcIixcInN1c3BlbmRcIixcInN1c3BlbmRcIixcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIixMYyxcInRyYW5zaXRpb25FbmRcIixcIndhaXRpbmdcIixcIndhaXRpbmdcIl07ZnVuY3Rpb24gUGMoYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrPTIpe3ZhciBkPWFbY10sZT1hW2MrMV07ZT1cIm9uXCIrKGVbMF0udG9VcHBlckNhc2UoKStlLnNsaWNlKDEpKTtOYy5zZXQoZCxiKTtNYy5zZXQoZCxlKTtkYShlLFtkXSl9fXZhciBRYz1yLnVuc3RhYmxlX25vdztRYygpO3ZhciBGPTg7XG5mdW5jdGlvbiBSYyhhKXtpZigwIT09KDEmYSkpcmV0dXJuIEY9MTUsMTtpZigwIT09KDImYSkpcmV0dXJuIEY9MTQsMjtpZigwIT09KDQmYSkpcmV0dXJuIEY9MTMsNDt2YXIgYj0yNCZhO2lmKDAhPT1iKXJldHVybiBGPTEyLGI7aWYoMCE9PShhJjMyKSlyZXR1cm4gRj0xMSwzMjtiPTE5MiZhO2lmKDAhPT1iKXJldHVybiBGPTEwLGI7aWYoMCE9PShhJjI1NikpcmV0dXJuIEY9OSwyNTY7Yj0zNTg0JmE7aWYoMCE9PWIpcmV0dXJuIEY9OCxiO2lmKDAhPT0oYSY0MDk2KSlyZXR1cm4gRj03LDQwOTY7Yj00MTg2MTEyJmE7aWYoMCE9PWIpcmV0dXJuIEY9NixiO2I9NjI5MTQ1NjAmYTtpZigwIT09YilyZXR1cm4gRj01LGI7aWYoYSY2NzEwODg2NClyZXR1cm4gRj00LDY3MTA4ODY0O2lmKDAhPT0oYSYxMzQyMTc3MjgpKXJldHVybiBGPTMsMTM0MjE3NzI4O2I9ODA1MzA2MzY4JmE7aWYoMCE9PWIpcmV0dXJuIEY9MixiO2lmKDAhPT0oMTA3Mzc0MTgyNCZhKSlyZXR1cm4gRj0xLDEwNzM3NDE4MjQ7XG5GPTg7cmV0dXJuIGF9ZnVuY3Rpb24gU2MoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIDE1O2Nhc2UgOTg6cmV0dXJuIDEwO2Nhc2UgOTc6Y2FzZSA5NjpyZXR1cm4gODtjYXNlIDk1OnJldHVybiAyO2RlZmF1bHQ6cmV0dXJuIDB9fWZ1bmN0aW9uIFRjKGEpe3N3aXRjaChhKXtjYXNlIDE1OmNhc2UgMTQ6cmV0dXJuIDk5O2Nhc2UgMTM6Y2FzZSAxMjpjYXNlIDExOmNhc2UgMTA6cmV0dXJuIDk4O2Nhc2UgOTpjYXNlIDg6Y2FzZSA3OmNhc2UgNjpjYXNlIDQ6Y2FzZSA1OnJldHVybiA5NztjYXNlIDM6Y2FzZSAyOmNhc2UgMTpyZXR1cm4gOTU7Y2FzZSAwOnJldHVybiA5MDtkZWZhdWx0OnRocm93IEVycm9yKHkoMzU4LGEpKTt9fVxuZnVuY3Rpb24gVWMoYSxiKXt2YXIgYz1hLnBlbmRpbmdMYW5lcztpZigwPT09YylyZXR1cm4gRj0wO3ZhciBkPTAsZT0wLGY9YS5leHBpcmVkTGFuZXMsZz1hLnN1c3BlbmRlZExhbmVzLGg9YS5waW5nZWRMYW5lcztpZigwIT09ZilkPWYsZT1GPTE1O2Vsc2UgaWYoZj1jJjEzNDIxNzcyNywwIT09Zil7dmFyIGs9ZiZ+ZzswIT09az8oZD1SYyhrKSxlPUYpOihoJj1mLDAhPT1oJiYoZD1SYyhoKSxlPUYpKX1lbHNlIGY9YyZ+ZywwIT09Zj8oZD1SYyhmKSxlPUYpOjAhPT1oJiYoZD1SYyhoKSxlPUYpO2lmKDA9PT1kKXJldHVybiAwO2Q9MzEtVmMoZCk7ZD1jJigoMD5kPzA6MTw8ZCk8PDEpLTE7aWYoMCE9PWImJmIhPT1kJiYwPT09KGImZykpe1JjKGIpO2lmKGU8PUYpcmV0dXJuIGI7Rj1lfWI9YS5lbnRhbmdsZWRMYW5lcztpZigwIT09Yilmb3IoYT1hLmVudGFuZ2xlbWVudHMsYiY9ZDswPGI7KWM9MzEtVmMoYiksZT0xPDxjLGR8PWFbY10sYiY9fmU7cmV0dXJuIGR9XG5mdW5jdGlvbiBXYyhhKXthPWEucGVuZGluZ0xhbmVzJi0xMDczNzQxODI1O3JldHVybiAwIT09YT9hOmEmMTA3Mzc0MTgyND8xMDczNzQxODI0OjB9ZnVuY3Rpb24gWGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSAxNTpyZXR1cm4gMTtjYXNlIDE0OnJldHVybiAyO2Nhc2UgMTI6cmV0dXJuIGE9WWMoMjQmfmIpLDA9PT1hP1hjKDEwLGIpOmE7Y2FzZSAxMDpyZXR1cm4gYT1ZYygxOTImfmIpLDA9PT1hP1hjKDgsYik6YTtjYXNlIDg6cmV0dXJuIGE9WWMoMzU4NCZ+YiksMD09PWEmJihhPVljKDQxODYxMTImfmIpLDA9PT1hJiYoYT01MTIpKSxhO2Nhc2UgMjpyZXR1cm4gYj1ZYyg4MDUzMDYzNjgmfmIpLDA9PT1iJiYoYj0yNjg0MzU0NTYpLGJ9dGhyb3cgRXJyb3IoeSgzNTgsYSkpO31mdW5jdGlvbiBZYyhhKXtyZXR1cm4gYSYtYX1mdW5jdGlvbiBaYyhhKXtmb3IodmFyIGI9W10sYz0wOzMxPmM7YysrKWIucHVzaChhKTtyZXR1cm4gYn1cbmZ1bmN0aW9uICRjKGEsYixjKXthLnBlbmRpbmdMYW5lc3w9Yjt2YXIgZD1iLTE7YS5zdXNwZW5kZWRMYW5lcyY9ZDthLnBpbmdlZExhbmVzJj1kO2E9YS5ldmVudFRpbWVzO2I9MzEtVmMoYik7YVtiXT1jfXZhciBWYz1NYXRoLmNsejMyP01hdGguY2x6MzI6YWQsYmQ9TWF0aC5sb2csY2Q9TWF0aC5MTjI7ZnVuY3Rpb24gYWQoYSl7cmV0dXJuIDA9PT1hPzMyOjMxLShiZChhKS9jZHwwKXwwfXZhciBkZD1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGVkPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LGZkPSEwO2Z1bmN0aW9uIGdkKGEsYixjLGQpe0tifHxJYigpO3ZhciBlPWhkLGY9S2I7S2I9ITA7dHJ5e0hiKGUsYSxiLGMsZCl9ZmluYWxseXsoS2I9Zil8fE1iKCl9fWZ1bmN0aW9uIGlkKGEsYixjLGQpe2VkKGRkLGhkLmJpbmQobnVsbCxhLGIsYyxkKSl9XG5mdW5jdGlvbiBoZChhLGIsYyxkKXtpZihmZCl7dmFyIGU7aWYoKGU9MD09PShiJjQpKSYmMDxqYy5sZW5ndGgmJi0xPHFjLmluZGV4T2YoYSkpYT1yYyhudWxsLGEsYixjLGQpLGpjLnB1c2goYSk7ZWxzZXt2YXIgZj15YyhhLGIsYyxkKTtpZihudWxsPT09ZillJiZzYyhhLGQpO2Vsc2V7aWYoZSl7aWYoLTE8cWMuaW5kZXhPZihhKSl7YT1yYyhmLGEsYixjLGQpO2pjLnB1c2goYSk7cmV0dXJufWlmKHVjKGYsYSxiLGMsZCkpcmV0dXJuO3NjKGEsZCl9amQoYSxiLGQsbnVsbCxjKX19fX1cbmZ1bmN0aW9uIHljKGEsYixjLGQpe3ZhciBlPXhiKGQpO2U9d2MoZSk7aWYobnVsbCE9PWUpe3ZhciBmPVpiKGUpO2lmKG51bGw9PT1mKWU9bnVsbDtlbHNle3ZhciBnPWYudGFnO2lmKDEzPT09Zyl7ZT0kYihmKTtpZihudWxsIT09ZSlyZXR1cm4gZTtlPW51bGx9ZWxzZSBpZigzPT09Zyl7aWYoZi5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWYudGFnP2Yuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtlPW51bGx9ZWxzZSBmIT09ZSYmKGU9bnVsbCl9fWpkKGEsYixkLGUsYyk7cmV0dXJuIG51bGx9dmFyIGtkPW51bGwsbGQ9bnVsbCxtZD1udWxsO1xuZnVuY3Rpb24gbmQoKXtpZihtZClyZXR1cm4gbWQ7dmFyIGEsYj1sZCxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBtZD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIG9kKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfWZ1bmN0aW9uIHBkKCl7cmV0dXJuITB9ZnVuY3Rpb24gcWQoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHJkKGEpe2Z1bmN0aW9uIGIoYixkLGUsZixnKXt0aGlzLl9yZWFjdE5hbWU9Yjt0aGlzLl90YXJnZXRJbnN0PWU7dGhpcy50eXBlPWQ7dGhpcy5uYXRpdmVFdmVudD1mO3RoaXMudGFyZ2V0PWc7dGhpcy5jdXJyZW50VGFyZ2V0PW51bGw7Zm9yKHZhciBjIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShjKSYmKGI9YVtjXSx0aGlzW2NdPWI/YihmKTpmW2NdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Zi5kZWZhdWx0UHJldmVudGVkP2YuZGVmYXVsdFByZXZlbnRlZDohMT09PWYucmV0dXJuVmFsdWUpP3BkOnFkO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cWQ7cmV0dXJuIHRoaXN9bShiLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmXG4oYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cGQpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cGQpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7fSxpc1BlcnNpc3RlbnQ6cGR9KTtyZXR1cm4gYn1cbnZhciBzZD17ZXZlbnRQaGFzZTowLGJ1YmJsZXM6MCxjYW5jZWxhYmxlOjAsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDowLGlzVHJ1c3RlZDowfSx0ZD1yZChzZCksdWQ9bSh7fSxzZCx7dmlldzowLGRldGFpbDowfSksdmQ9cmQodWQpLHdkLHhkLHlkLEFkPW0oe30sdWQse3NjcmVlblg6MCxzY3JlZW5ZOjAsY2xpZW50WDowLGNsaWVudFk6MCxwYWdlWDowLHBhZ2VZOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLGdldE1vZGlmaWVyU3RhdGU6emQsYnV0dG9uOjAsYnV0dG9uczowLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIHZvaWQgMD09PWEucmVsYXRlZFRhcmdldD9hLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQ6YS5yZWxhdGVkVGFyZ2V0fSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluXG5hKXJldHVybiBhLm1vdmVtZW50WDthIT09eWQmJih5ZCYmXCJtb3VzZW1vdmVcIj09PWEudHlwZT8od2Q9YS5zY3JlZW5YLXlkLnNjcmVlblgseGQ9YS5zY3JlZW5ZLXlkLnNjcmVlblkpOnhkPXdkPTAseWQ9YSk7cmV0dXJuIHdkfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJtb3ZlbWVudFlcImluIGE/YS5tb3ZlbWVudFk6eGR9fSksQmQ9cmQoQWQpLENkPW0oe30sQWQse2RhdGFUcmFuc2ZlcjowfSksRGQ9cmQoQ2QpLEVkPW0oe30sdWQse3JlbGF0ZWRUYXJnZXQ6MH0pLEZkPXJkKEVkKSxHZD1tKHt9LHNkLHthbmltYXRpb25OYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxIZD1yZChHZCksSWQ9bSh7fSxzZCx7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLEpkPXJkKElkKSxLZD1tKHt9LHNkLHtkYXRhOjB9KSxMZD1yZChLZCksTWQ9e0VzYzpcIkVzY2FwZVwiLFxuU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sTmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsXG4xMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LE9kPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9kW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gemQoKXtyZXR1cm4gUGR9XG52YXIgUWQ9bSh7fSx1ZCx7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1NZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/TmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxjb2RlOjAsbG9jYXRpb246MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAscmVwZWF0OjAsbG9jYWxlOjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2QoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLFJkPXJkKFFkKSxTZD1tKHt9LEFkLHtwb2ludGVySWQ6MCx3aWR0aDowLGhlaWdodDowLHByZXNzdXJlOjAsdGFuZ2VudGlhbFByZXNzdXJlOjAsdGlsdFg6MCx0aWx0WTowLHR3aXN0OjAscG9pbnRlclR5cGU6MCxpc1ByaW1hcnk6MH0pLFRkPXJkKFNkKSxVZD1tKHt9LHVkLHt0b3VjaGVzOjAsdGFyZ2V0VG91Y2hlczowLGNoYW5nZWRUb3VjaGVzOjAsYWx0S2V5OjAsbWV0YUtleTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGdldE1vZGlmaWVyU3RhdGU6emR9KSxWZD1yZChVZCksV2Q9bSh7fSxzZCx7cHJvcGVydHlOYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxYZD1yZChXZCksWWQ9bSh7fSxBZCx7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sXG5kZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6MCxkZWx0YU1vZGU6MH0pLFpkPXJkKFlkKSwkZD1bOSwxMywyNywzMl0sYWU9ZmEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGJlPW51bGw7ZmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGJlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7dmFyIGNlPWZhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhYmUsZGU9ZmEmJighYWV8fGJlJiY4PGJlJiYxMT49YmUpLGVlPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLGZlPSExO1xuZnVuY3Rpb24gZ2UoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT0kZC5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiZm9jdXNvdXRcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBoZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBpZT0hMTtmdW5jdGlvbiBqZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gaGUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO2ZlPSEwO3JldHVybiBlZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1lZSYmZmU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24ga2UoYSxiKXtpZihpZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhYWUmJmdlKGEsYik/KGE9bmQoKSxtZD1sZD1rZD1udWxsLGllPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBkZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgbGU9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gbWUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFsZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gbmUoYSxiLGMsZCl7RWIoZCk7Yj1vZShiLFwib25DaGFuZ2VcIik7MDxiLmxlbmd0aCYmKGM9bmV3IHRkKFwib25DaGFuZ2VcIixcImNoYW5nZVwiLG51bGwsYyxkKSxhLnB1c2goe2V2ZW50OmMsbGlzdGVuZXJzOmJ9KSl9dmFyIHBlPW51bGwscWU9bnVsbDtmdW5jdGlvbiByZShhKXtzZShhLDApfWZ1bmN0aW9uIHRlKGEpe3ZhciBiPXVlKGEpO2lmKFdhKGIpKXJldHVybiBhfVxuZnVuY3Rpb24gdmUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgd2U9ITE7aWYoZmEpe3ZhciB4ZTtpZihmYSl7dmFyIHllPVwib25pbnB1dFwiaW4gZG9jdW1lbnQ7aWYoIXllKXt2YXIgemU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt6ZS5zZXRBdHRyaWJ1dGUoXCJvbmlucHV0XCIsXCJyZXR1cm47XCIpO3llPVwiZnVuY3Rpb25cIj09PXR5cGVvZiB6ZS5vbmlucHV0fXhlPXllfWVsc2UgeGU9ITE7d2U9eGUmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSl9ZnVuY3Rpb24gQWUoKXtwZSYmKHBlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSxxZT1wZT1udWxsKX1mdW5jdGlvbiBCZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmdGUocWUpKXt2YXIgYj1bXTtuZShiLHFlLGEseGIoYSkpO2E9cmU7aWYoS2IpYShiKTtlbHNle0tiPSEwO3RyeXtHYihhLGIpfWZpbmFsbHl7S2I9ITEsTWIoKX19fX1cbmZ1bmN0aW9uIENlKGEsYixjKXtcImZvY3VzaW5cIj09PWE/KEFlKCkscGU9YixxZT1jLHBlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSk6XCJmb2N1c291dFwiPT09YSYmQWUoKX1mdW5jdGlvbiBEZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiB0ZShxZSl9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBGZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBHZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIEhlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOkdlLEllPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBKZShhLGIpe2lmKEhlKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighSWUuY2FsbChiLGNbZF0pfHwhSGUoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBLZShhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBMZShhLGIpe3ZhciBjPUtlKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPUtlKGMpfX1mdW5jdGlvbiBNZShhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP01lKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIE5lKCl7Zm9yKHZhciBhPXdpbmRvdyxiPVhhKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPVhhKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIE9lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgUGU9ZmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxRZT1udWxsLFJlPW51bGwsU2U9bnVsbCxUZT0hMTtcbmZ1bmN0aW9uIFVlKGEsYixjKXt2YXIgZD1jLndpbmRvdz09PWM/Yy5kb2N1bWVudDo5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtUZXx8bnVsbD09UWV8fFFlIT09WGEoZCl8fChkPVFlLFwic2VsZWN0aW9uU3RhcnRcImluIGQmJk9lKGQpP2Q9e3N0YXJ0OmQuc2VsZWN0aW9uU3RhcnQsZW5kOmQuc2VsZWN0aW9uRW5kfTooZD0oZC5vd25lckRvY3VtZW50JiZkLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksZD17YW5jaG9yTm9kZTpkLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmQuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpkLmZvY3VzTm9kZSxmb2N1c09mZnNldDpkLmZvY3VzT2Zmc2V0fSksU2UmJkplKFNlLGQpfHwoU2U9ZCxkPW9lKFJlLFwib25TZWxlY3RcIiksMDxkLmxlbmd0aCYmKGI9bmV3IHRkKFwib25TZWxlY3RcIixcInNlbGVjdFwiLG51bGwsYixjKSxhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmR9KSxiLnRhcmdldD1RZSkpKX1cblBjKFwiY2FuY2VsIGNhbmNlbCBjbGljayBjbGljayBjbG9zZSBjbG9zZSBjb250ZXh0bWVudSBjb250ZXh0TWVudSBjb3B5IGNvcHkgY3V0IGN1dCBhdXhjbGljayBhdXhDbGljayBkYmxjbGljayBkb3VibGVDbGljayBkcmFnZW5kIGRyYWdFbmQgZHJhZ3N0YXJ0IGRyYWdTdGFydCBkcm9wIGRyb3AgZm9jdXNpbiBmb2N1cyBmb2N1c291dCBibHVyIGlucHV0IGlucHV0IGludmFsaWQgaW52YWxpZCBrZXlkb3duIGtleURvd24ga2V5cHJlc3Mga2V5UHJlc3Mga2V5dXAga2V5VXAgbW91c2Vkb3duIG1vdXNlRG93biBtb3VzZXVwIG1vdXNlVXAgcGFzdGUgcGFzdGUgcGF1c2UgcGF1c2UgcGxheSBwbGF5IHBvaW50ZXJjYW5jZWwgcG9pbnRlckNhbmNlbCBwb2ludGVyZG93biBwb2ludGVyRG93biBwb2ludGVydXAgcG9pbnRlclVwIHJhdGVjaGFuZ2UgcmF0ZUNoYW5nZSByZXNldCByZXNldCBzZWVrZWQgc2Vla2VkIHN1Ym1pdCBzdWJtaXQgdG91Y2hjYW5jZWwgdG91Y2hDYW5jZWwgdG91Y2hlbmQgdG91Y2hFbmQgdG91Y2hzdGFydCB0b3VjaFN0YXJ0IHZvbHVtZWNoYW5nZSB2b2x1bWVDaGFuZ2VcIi5zcGxpdChcIiBcIiksXG4wKTtQYyhcImRyYWcgZHJhZyBkcmFnZW50ZXIgZHJhZ0VudGVyIGRyYWdleGl0IGRyYWdFeGl0IGRyYWdsZWF2ZSBkcmFnTGVhdmUgZHJhZ292ZXIgZHJhZ092ZXIgbW91c2Vtb3ZlIG1vdXNlTW92ZSBtb3VzZW91dCBtb3VzZU91dCBtb3VzZW92ZXIgbW91c2VPdmVyIHBvaW50ZXJtb3ZlIHBvaW50ZXJNb3ZlIHBvaW50ZXJvdXQgcG9pbnRlck91dCBwb2ludGVyb3ZlciBwb2ludGVyT3ZlciBzY3JvbGwgc2Nyb2xsIHRvZ2dsZSB0b2dnbGUgdG91Y2htb3ZlIHRvdWNoTW92ZSB3aGVlbCB3aGVlbFwiLnNwbGl0KFwiIFwiKSwxKTtQYyhPYywyKTtmb3IodmFyIFZlPVwiY2hhbmdlIHNlbGVjdGlvbmNoYW5nZSB0ZXh0SW5wdXQgY29tcG9zaXRpb25zdGFydCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnVwZGF0ZVwiLnNwbGl0KFwiIFwiKSxXZT0wO1dlPFZlLmxlbmd0aDtXZSsrKU5jLnNldChWZVtXZV0sMCk7ZWEoXCJvbk1vdXNlRW50ZXJcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtcbmVhKFwib25Nb3VzZUxlYXZlXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7ZWEoXCJvblBvaW50ZXJFbnRlclwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtlYShcIm9uUG9pbnRlckxlYXZlXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2RhKFwib25DaGFuZ2VcIixcImNoYW5nZSBjbGljayBmb2N1c2luIGZvY3Vzb3V0IGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uU2VsZWN0XCIsXCJmb2N1c291dCBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzaW4ga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25CZWZvcmVJbnB1dFwiLFtcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXSk7ZGEoXCJvbkNvbXBvc2l0aW9uRW5kXCIsXCJjb21wb3NpdGlvbmVuZCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7XG5kYShcIm9uQ29tcG9zaXRpb25TdGFydFwiLFwiY29tcG9zaXRpb25zdGFydCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsXCJjb21wb3NpdGlvbnVwZGF0ZSBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7dmFyIFhlPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxZZT1uZXcgU2V0KFwiY2FuY2VsIGNsb3NlIGludmFsaWQgbG9hZCBzY3JvbGwgdG9nZ2xlXCIuc3BsaXQoXCIgXCIpLmNvbmNhdChYZSkpO1xuZnVuY3Rpb24gWmUoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PWM7WWIoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1cbmZ1bmN0aW9uIHNlKGEsYil7Yj0wIT09KGImNCk7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspe3ZhciBkPWFbY10sZT1kLmV2ZW50O2Q9ZC5saXN0ZW5lcnM7YTp7dmFyIGY9dm9pZCAwO2lmKGIpZm9yKHZhciBnPWQubGVuZ3RoLTE7MDw9ZztnLS0pe3ZhciBoPWRbZ10saz1oLmluc3RhbmNlLGw9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7WmUoZSxoLGwpO2Y9a31lbHNlIGZvcihnPTA7ZzxkLmxlbmd0aDtnKyspe2g9ZFtnXTtrPWguaW5zdGFuY2U7bD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfX19aWYoVWIpdGhyb3cgYT1WYixVYj0hMSxWYj1udWxsLGE7fVxuZnVuY3Rpb24gRyhhLGIpe3ZhciBjPSRlKGIpLGQ9YStcIl9fYnViYmxlXCI7Yy5oYXMoZCl8fChhZihiLGEsMiwhMSksYy5hZGQoZCkpfXZhciBiZj1cIl9yZWFjdExpc3RlbmluZ1wiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO2Z1bmN0aW9uIGNmKGEpe2FbYmZdfHwoYVtiZl09ITAsYmEuZm9yRWFjaChmdW5jdGlvbihiKXtZZS5oYXMoYil8fGRmKGIsITEsYSxudWxsKTtkZihiLCEwLGEsbnVsbCl9KSl9XG5mdW5jdGlvbiBkZihhLGIsYyxkKXt2YXIgZT00PGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XT9hcmd1bWVudHNbNF06MCxmPWM7XCJzZWxlY3Rpb25jaGFuZ2VcIj09PWEmJjkhPT1jLm5vZGVUeXBlJiYoZj1jLm93bmVyRG9jdW1lbnQpO2lmKG51bGwhPT1kJiYhYiYmWWUuaGFzKGEpKXtpZihcInNjcm9sbFwiIT09YSlyZXR1cm47ZXw9MjtmPWR9dmFyIGc9JGUoZiksaD1hK1wiX19cIisoYj9cImNhcHR1cmVcIjpcImJ1YmJsZVwiKTtnLmhhcyhoKXx8KGImJihlfD00KSxhZihmLGEsZSxiKSxnLmFkZChoKSl9XG5mdW5jdGlvbiBhZihhLGIsYyxkKXt2YXIgZT1OYy5nZXQoYik7c3dpdGNoKHZvaWQgMD09PWU/MjplKXtjYXNlIDA6ZT1nZDticmVhaztjYXNlIDE6ZT1pZDticmVhaztkZWZhdWx0OmU9aGR9Yz1lLmJpbmQobnVsbCxiLGMsYSk7ZT12b2lkIDA7IVBifHxcInRvdWNoc3RhcnRcIiE9PWImJlwidG91Y2htb3ZlXCIhPT1iJiZcIndoZWVsXCIhPT1ifHwoZT0hMCk7ZD92b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse2NhcHR1cmU6ITAscGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMCk6dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCExKX1cbmZ1bmN0aW9uIGpkKGEsYixjLGQsZSl7dmFyIGY9ZDtpZigwPT09KGImMSkmJjA9PT0oYiYyKSYmbnVsbCE9PWQpYTpmb3IoOzspe2lmKG51bGw9PT1kKXJldHVybjt2YXIgZz1kLnRhZztpZigzPT09Z3x8ND09PWcpe3ZhciBoPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoaD09PWV8fDg9PT1oLm5vZGVUeXBlJiZoLnBhcmVudE5vZGU9PT1lKWJyZWFrO2lmKDQ9PT1nKWZvcihnPWQucmV0dXJuO251bGwhPT1nOyl7dmFyIGs9Zy50YWc7aWYoMz09PWt8fDQ9PT1rKWlmKGs9Zy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxrPT09ZXx8OD09PWsubm9kZVR5cGUmJmsucGFyZW50Tm9kZT09PWUpcmV0dXJuO2c9Zy5yZXR1cm59Zm9yKDtudWxsIT09aDspe2c9d2MoaCk7aWYobnVsbD09PWcpcmV0dXJuO2s9Zy50YWc7aWYoNT09PWt8fDY9PT1rKXtkPWY9Zztjb250aW51ZSBhfWg9aC5wYXJlbnROb2RlfX1kPWQucmV0dXJufU5iKGZ1bmN0aW9uKCl7dmFyIGQ9ZixlPXhiKGMpLGc9W107XG5hOnt2YXIgaD1NYy5nZXQoYSk7aWYodm9pZCAwIT09aCl7dmFyIGs9dGQseD1hO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09b2QoYykpYnJlYWsgYTtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOms9UmQ7YnJlYWs7Y2FzZSBcImZvY3VzaW5cIjp4PVwiZm9jdXNcIjtrPUZkO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOng9XCJibHVyXCI7az1GZDticmVhaztjYXNlIFwiYmVmb3JlYmx1clwiOmNhc2UgXCJhZnRlcmJsdXJcIjprPUZkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilicmVhayBhO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6az1CZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjprPVxuRGQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6az1WZDticmVhaztjYXNlIEljOmNhc2UgSmM6Y2FzZSBLYzprPUhkO2JyZWFrO2Nhc2UgTGM6az1YZDticmVhaztjYXNlIFwic2Nyb2xsXCI6az12ZDticmVhaztjYXNlIFwid2hlZWxcIjprPVpkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOms9SmQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6az1UZH12YXIgdz0wIT09KGImNCksej0hdyYmXCJzY3JvbGxcIj09PWEsdT13P251bGwhPT1oP2grXCJDYXB0dXJlXCI6bnVsbDpoO3c9W107Zm9yKHZhciB0PWQscTtudWxsIT09XG50Oyl7cT10O3ZhciB2PXEuc3RhdGVOb2RlOzU9PT1xLnRhZyYmbnVsbCE9PXYmJihxPXYsbnVsbCE9PXUmJih2PU9iKHQsdSksbnVsbCE9diYmdy5wdXNoKGVmKHQsdixxKSkpKTtpZih6KWJyZWFrO3Q9dC5yZXR1cm59MDx3Lmxlbmd0aCYmKGg9bmV3IGsoaCx4LG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmgsbGlzdGVuZXJzOnd9KSl9fWlmKDA9PT0oYiY3KSl7YTp7aD1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YTtrPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihoJiYwPT09KGImMTYpJiYoeD1jLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpJiYod2MoeCl8fHhbZmZdKSlicmVhayBhO2lmKGt8fGgpe2g9ZS53aW5kb3c9PT1lP2U6KGg9ZS5vd25lckRvY3VtZW50KT9oLmRlZmF1bHRWaWV3fHxoLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoayl7aWYoeD1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50LGs9ZCx4PXg/d2MoeCk6bnVsbCxudWxsIT09XG54JiYoej1aYih4KSx4IT09enx8NSE9PXgudGFnJiY2IT09eC50YWcpKXg9bnVsbH1lbHNlIGs9bnVsbCx4PWQ7aWYoayE9PXgpe3c9QmQ7dj1cIm9uTW91c2VMZWF2ZVwiO3U9XCJvbk1vdXNlRW50ZXJcIjt0PVwibW91c2VcIjtpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpdz1UZCx2PVwib25Qb2ludGVyTGVhdmVcIix1PVwib25Qb2ludGVyRW50ZXJcIix0PVwicG9pbnRlclwiO3o9bnVsbD09az9oOnVlKGspO3E9bnVsbD09eD9oOnVlKHgpO2g9bmV3IHcodix0K1wibGVhdmVcIixrLGMsZSk7aC50YXJnZXQ9ejtoLnJlbGF0ZWRUYXJnZXQ9cTt2PW51bGw7d2MoZSk9PT1kJiYodz1uZXcgdyh1LHQrXCJlbnRlclwiLHgsYyxlKSx3LnRhcmdldD1xLHcucmVsYXRlZFRhcmdldD16LHY9dyk7ej12O2lmKGsmJngpYjp7dz1rO3U9eDt0PTA7Zm9yKHE9dztxO3E9Z2YocSkpdCsrO3E9MDtmb3Iodj11O3Y7dj1nZih2KSlxKys7Zm9yKDswPHQtcTspdz1nZih3KSx0LS07Zm9yKDswPHEtdDspdT1cbmdmKHUpLHEtLTtmb3IoO3QtLTspe2lmKHc9PT11fHxudWxsIT09dSYmdz09PXUuYWx0ZXJuYXRlKWJyZWFrIGI7dz1nZih3KTt1PWdmKHUpfXc9bnVsbH1lbHNlIHc9bnVsbDtudWxsIT09ayYmaGYoZyxoLGssdywhMSk7bnVsbCE9PXgmJm51bGwhPT16JiZoZihnLHoseCx3LCEwKX19fWE6e2g9ZD91ZShkKTp3aW5kb3c7az1oLm5vZGVOYW1lJiZoLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWt8fFwiaW5wdXRcIj09PWsmJlwiZmlsZVwiPT09aC50eXBlKXZhciBKPXZlO2Vsc2UgaWYobWUoaCkpaWYod2UpSj1GZTtlbHNle0o9RGU7dmFyIEs9Q2V9ZWxzZShrPWgubm9kZU5hbWUpJiZcImlucHV0XCI9PT1rLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1oLnR5cGV8fFwicmFkaW9cIj09PWgudHlwZSkmJihKPUVlKTtpZihKJiYoSj1KKGEsZCkpKXtuZShnLEosYyxlKTticmVhayBhfUsmJksoYSxoLGQpO1wiZm9jdXNvdXRcIj09PWEmJihLPWguX3dyYXBwZXJTdGF0ZSkmJlxuSy5jb250cm9sbGVkJiZcIm51bWJlclwiPT09aC50eXBlJiZiYihoLFwibnVtYmVyXCIsaC52YWx1ZSl9Sz1kP3VlKGQpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjppZihtZShLKXx8XCJ0cnVlXCI9PT1LLmNvbnRlbnRFZGl0YWJsZSlRZT1LLFJlPWQsU2U9bnVsbDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjpTZT1SZT1RZT1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpUZT0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6VGU9ITE7VWUoZyxjLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihQZSlicmVhaztjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOlVlKGcsYyxlKX12YXIgUTtpZihhZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgTD1cIm9uQ29tcG9zaXRpb25TdGFydFwiO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6TD1cIm9uQ29tcG9zaXRpb25FbmRcIjticmVhayBiO1xuY2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6TD1cIm9uQ29tcG9zaXRpb25VcGRhdGVcIjticmVhayBifUw9dm9pZCAwfWVsc2UgaWU/Z2UoYSxjKSYmKEw9XCJvbkNvbXBvc2l0aW9uRW5kXCIpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoTD1cIm9uQ29tcG9zaXRpb25TdGFydFwiKTtMJiYoZGUmJlwia29cIiE9PWMubG9jYWxlJiYoaWV8fFwib25Db21wb3NpdGlvblN0YXJ0XCIhPT1MP1wib25Db21wb3NpdGlvbkVuZFwiPT09TCYmaWUmJihRPW5kKCkpOihrZD1lLGxkPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGllPSEwKSksSz1vZShkLEwpLDA8Sy5sZW5ndGgmJihMPW5ldyBMZChMLGEsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6TCxsaXN0ZW5lcnM6S30pLFE/TC5kYXRhPVE6KFE9aGUoYyksbnVsbCE9PVEmJihMLmRhdGE9USkpKSk7aWYoUT1jZT9qZShhLGMpOmtlKGEsYykpZD1vZShkLFwib25CZWZvcmVJbnB1dFwiKSwwPGQubGVuZ3RoJiYoZT1uZXcgTGQoXCJvbkJlZm9yZUlucHV0XCIsXG5cImJlZm9yZWlucHV0XCIsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6ZSxsaXN0ZW5lcnM6ZH0pLGUuZGF0YT1RKX1zZShnLGIpfSl9ZnVuY3Rpb24gZWYoYSxiLGMpe3JldHVybntpbnN0YW5jZTphLGxpc3RlbmVyOmIsY3VycmVudFRhcmdldDpjfX1mdW5jdGlvbiBvZShhLGIpe2Zvcih2YXIgYz1iK1wiQ2FwdHVyZVwiLGQ9W107bnVsbCE9PWE7KXt2YXIgZT1hLGY9ZS5zdGF0ZU5vZGU7NT09PWUudGFnJiZudWxsIT09ZiYmKGU9ZixmPU9iKGEsYyksbnVsbCE9ZiYmZC51bnNoaWZ0KGVmKGEsZixlKSksZj1PYihhLGIpLG51bGwhPWYmJmQucHVzaChlZihhLGYsZSkpKTthPWEucmV0dXJufXJldHVybiBkfWZ1bmN0aW9uIGdmKGEpe2lmKG51bGw9PT1hKXJldHVybiBudWxsO2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9XG5mdW5jdGlvbiBoZihhLGIsYyxkLGUpe2Zvcih2YXIgZj1iLl9yZWFjdE5hbWUsZz1bXTtudWxsIT09YyYmYyE9PWQ7KXt2YXIgaD1jLGs9aC5hbHRlcm5hdGUsbD1oLnN0YXRlTm9kZTtpZihudWxsIT09ayYmaz09PWQpYnJlYWs7NT09PWgudGFnJiZudWxsIT09bCYmKGg9bCxlPyhrPU9iKGMsZiksbnVsbCE9ayYmZy51bnNoaWZ0KGVmKGMsayxoKSkpOmV8fChrPU9iKGMsZiksbnVsbCE9ayYmZy5wdXNoKGVmKGMsayxoKSkpKTtjPWMucmV0dXJufTAhPT1nLmxlbmd0aCYmYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpnfSl9ZnVuY3Rpb24gamYoKXt9dmFyIGtmPW51bGwsbGY9bnVsbDtmdW5jdGlvbiBtZihhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG5mdW5jdGlvbiBuZihhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIG9mPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHBmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtmdW5jdGlvbiBxZihhKXsxPT09YS5ub2RlVHlwZT9hLnRleHRDb250ZW50PVwiXCI6OT09PWEubm9kZVR5cGUmJihhPWEuYm9keSxudWxsIT1hJiYoYS50ZXh0Q29udGVudD1cIlwiKSl9XG5mdW5jdGlvbiByZihhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVha31yZXR1cm4gYX1mdW5jdGlvbiBzZihhKXthPWEucHJldmlvdXNTaWJsaW5nO2Zvcih2YXIgYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiJFwiPT09Y3x8XCIkIVwiPT09Y3x8XCIkP1wiPT09Yyl7aWYoMD09PWIpcmV0dXJuIGE7Yi0tfWVsc2VcIi8kXCI9PT1jJiZiKyt9YT1hLnByZXZpb3VzU2libGluZ31yZXR1cm4gbnVsbH12YXIgdGY9MDtmdW5jdGlvbiB1ZihhKXtyZXR1cm57JCR0eXBlb2Y6R2EsdG9TdHJpbmc6YSx2YWx1ZU9mOmF9fXZhciB2Zj1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSx3Zj1cIl9fcmVhY3RGaWJlciRcIit2Zix4Zj1cIl9fcmVhY3RQcm9wcyRcIit2ZixmZj1cIl9fcmVhY3RDb250YWluZXIkXCIrdmYseWY9XCJfX3JlYWN0RXZlbnRzJFwiK3ZmO1xuZnVuY3Rpb24gd2MoYSl7dmFyIGI9YVt3Zl07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbZmZdfHxjW3dmXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPXNmKGEpO251bGwhPT1hOyl7aWYoYz1hW3dmXSlyZXR1cm4gYzthPXNmKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDYihhKXthPWFbd2ZdfHxhW2ZmXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gdWUoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHkoMzMpKTt9ZnVuY3Rpb24gRGIoYSl7cmV0dXJuIGFbeGZdfHxudWxsfVxuZnVuY3Rpb24gJGUoYSl7dmFyIGI9YVt5Zl07dm9pZCAwPT09YiYmKGI9YVt5Zl09bmV3IFNldCk7cmV0dXJuIGJ9dmFyIHpmPVtdLEFmPS0xO2Z1bmN0aW9uIEJmKGEpe3JldHVybntjdXJyZW50OmF9fWZ1bmN0aW9uIEgoYSl7MD5BZnx8KGEuY3VycmVudD16ZltBZl0semZbQWZdPW51bGwsQWYtLSl9ZnVuY3Rpb24gSShhLGIpe0FmKys7emZbQWZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgQ2Y9e30sTT1CZihDZiksTj1CZighMSksRGY9Q2Y7XG5mdW5jdGlvbiBFZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIENmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEZmKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gR2YoKXtIKE4pO0goTSl9ZnVuY3Rpb24gSGYoYSxiLGMpe2lmKE0uY3VycmVudCE9PUNmKXRocm93IEVycm9yKHkoMTY4KSk7SShNLGIpO0koTixjKX1cbmZ1bmN0aW9uIElmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IoeSgxMDgsUmEoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbSh7fSxjLGQpfWZ1bmN0aW9uIEpmKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxDZjtEZj1NLmN1cnJlbnQ7SShNLGEpO0koTixOLmN1cnJlbnQpO3JldHVybiEwfWZ1bmN0aW9uIEtmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcih5KDE2OSkpO2M/KGE9SWYoYSxiLERmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWEsSChOKSxIKE0pLEkoTSxhKSk6SChOKTtJKE4sYyl9XG52YXIgTGY9bnVsbCxNZj1udWxsLE5mPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LE9mPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxQZj1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLFFmPXIudW5zdGFibGVfc2hvdWxkWWllbGQsUmY9ci51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsU2Y9ci51bnN0YWJsZV9ub3csVGY9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxVZj1yLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LFZmPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksV2Y9ci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxYZj1yLnVuc3RhYmxlX0xvd1ByaW9yaXR5LFlmPXIudW5zdGFibGVfSWRsZVByaW9yaXR5LFpmPXt9LCRmPXZvaWQgMCE9PVJmP1JmOmZ1bmN0aW9uKCl7fSxhZz1udWxsLGJnPW51bGwsY2c9ITEsZGc9U2YoKSxPPTFFND5kZz9TZjpmdW5jdGlvbigpe3JldHVybiBTZigpLWRnfTtcbmZ1bmN0aW9uIGVnKCl7c3dpdGNoKFRmKCkpe2Nhc2UgVWY6cmV0dXJuIDk5O2Nhc2UgVmY6cmV0dXJuIDk4O2Nhc2UgV2Y6cmV0dXJuIDk3O2Nhc2UgWGY6cmV0dXJuIDk2O2Nhc2UgWWY6cmV0dXJuIDk1O2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGZnKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiBVZjtjYXNlIDk4OnJldHVybiBWZjtjYXNlIDk3OnJldHVybiBXZjtjYXNlIDk2OnJldHVybiBYZjtjYXNlIDk1OnJldHVybiBZZjtkZWZhdWx0OnRocm93IEVycm9yKHkoMzMyKSk7fX1mdW5jdGlvbiBnZyhhLGIpe2E9ZmcoYSk7cmV0dXJuIE5mKGEsYil9ZnVuY3Rpb24gaGcoYSxiLGMpe2E9ZmcoYSk7cmV0dXJuIE9mKGEsYixjKX1mdW5jdGlvbiBpZygpe2lmKG51bGwhPT1iZyl7dmFyIGE9Ymc7Ymc9bnVsbDtQZihhKX1qZygpfVxuZnVuY3Rpb24gamcoKXtpZighY2cmJm51bGwhPT1hZyl7Y2c9ITA7dmFyIGE9MDt0cnl7dmFyIGI9YWc7Z2coOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO2FnPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PWFnJiYoYWc9YWcuc2xpY2UoYSsxKSksT2YoVWYsaWcpLGM7fWZpbmFsbHl7Y2c9ITF9fX12YXIga2c9cmEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc7ZnVuY3Rpb24gbGcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1tKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSk7cmV0dXJuIGJ9cmV0dXJuIGJ9dmFyIG1nPUJmKG51bGwpLG5nPW51bGwsb2c9bnVsbCxwZz1udWxsO2Z1bmN0aW9uIHFnKCl7cGc9b2c9bmc9bnVsbH1cbmZ1bmN0aW9uIHJnKGEpe3ZhciBiPW1nLmN1cnJlbnQ7SChtZyk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBzZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmFsdGVybmF0ZTtpZigoYS5jaGlsZExhbmVzJmIpPT09YilpZihudWxsPT09Y3x8KGMuY2hpbGRMYW5lcyZiKT09PWIpYnJlYWs7ZWxzZSBjLmNoaWxkTGFuZXN8PWI7ZWxzZSBhLmNoaWxkTGFuZXN8PWIsbnVsbCE9PWMmJihjLmNoaWxkTGFuZXN8PWIpO2E9YS5yZXR1cm59fWZ1bmN0aW9uIHRnKGEsYil7bmc9YTtwZz1vZz1udWxsO2E9YS5kZXBlbmRlbmNpZXM7bnVsbCE9PWEmJm51bGwhPT1hLmZpcnN0Q29udGV4dCYmKDAhPT0oYS5sYW5lcyZiKSYmKHVnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1cbmZ1bmN0aW9uIHZnKGEsYil7aWYocGchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKXBnPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O2lmKG51bGw9PT1vZyl7aWYobnVsbD09PW5nKXRocm93IEVycm9yKHkoMzA4KSk7b2c9YjtuZy5kZXBlbmRlbmNpZXM9e2xhbmVzOjAsZmlyc3RDb250ZXh0OmIscmVzcG9uZGVyczpudWxsfX1lbHNlIG9nPW9nLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciB3Zz0hMTtmdW5jdGlvbiB4ZyhhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGZpcnN0QmFzZVVwZGF0ZTpudWxsLGxhc3RCYXNlVXBkYXRlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGx9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiB5ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6YS5maXJzdEJhc2VVcGRhdGUsbGFzdEJhc2VVcGRhdGU6YS5sYXN0QmFzZVVwZGF0ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiB6ZyhhLGIpe3JldHVybntldmVudFRpbWU6YSxsYW5lOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfX1mdW5jdGlvbiBBZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YSl7YT1hLnNoYXJlZDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifX1cbmZ1bmN0aW9uIEJnKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZSxkPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1kJiYoZD1kLnVwZGF0ZVF1ZXVlLGM9PT1kKSl7dmFyIGU9bnVsbCxmPW51bGw7Yz1jLmZpcnN0QmFzZVVwZGF0ZTtpZihudWxsIT09Yyl7ZG97dmFyIGc9e2V2ZW50VGltZTpjLmV2ZW50VGltZSxsYW5lOmMubGFuZSx0YWc6Yy50YWcscGF5bG9hZDpjLnBheWxvYWQsY2FsbGJhY2s6Yy5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT1mP2U9Zj1nOmY9Zi5uZXh0PWc7Yz1jLm5leHR9d2hpbGUobnVsbCE9PWMpO251bGw9PT1mP2U9Zj1iOmY9Zi5uZXh0PWJ9ZWxzZSBlPWY9YjtjPXtiYXNlU3RhdGU6ZC5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmUsbGFzdEJhc2VVcGRhdGU6ZixzaGFyZWQ6ZC5zaGFyZWQsZWZmZWN0czpkLmVmZmVjdHN9O2EudXBkYXRlUXVldWU9YztyZXR1cm59YT1jLmxhc3RCYXNlVXBkYXRlO251bGw9PT1hP2MuZmlyc3RCYXNlVXBkYXRlPWI6YS5uZXh0PVxuYjtjLmxhc3RCYXNlVXBkYXRlPWJ9XG5mdW5jdGlvbiBDZyhhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO3dnPSExO3ZhciBmPWUuZmlyc3RCYXNlVXBkYXRlLGc9ZS5sYXN0QmFzZVVwZGF0ZSxoPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWgpe2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDt2YXIgaz1oLGw9ay5uZXh0O2submV4dD1udWxsO251bGw9PT1nP2Y9bDpnLm5leHQ9bDtnPWs7dmFyIG49YS5hbHRlcm5hdGU7aWYobnVsbCE9PW4pe249bi51cGRhdGVRdWV1ZTt2YXIgQT1uLmxhc3RCYXNlVXBkYXRlO0EhPT1nJiYobnVsbD09PUE/bi5maXJzdEJhc2VVcGRhdGU9bDpBLm5leHQ9bCxuLmxhc3RCYXNlVXBkYXRlPWspfX1pZihudWxsIT09Zil7QT1lLmJhc2VTdGF0ZTtnPTA7bj1sPWs9bnVsbDtkb3toPWYubGFuZTt2YXIgcD1mLmV2ZW50VGltZTtpZigoZCZoKT09PWgpe251bGwhPT1uJiYobj1uLm5leHQ9e2V2ZW50VGltZTpwLGxhbmU6MCx0YWc6Zi50YWcscGF5bG9hZDpmLnBheWxvYWQsY2FsbGJhY2s6Zi5jYWxsYmFjayxcbm5leHQ6bnVsbH0pO2E6e3ZhciBDPWEseD1mO2g9YjtwPWM7c3dpdGNoKHgudGFnKXtjYXNlIDE6Qz14LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEMpe0E9Qy5jYWxsKHAsQSxoKTticmVhayBhfUE9QzticmVhayBhO2Nhc2UgMzpDLmZsYWdzPUMuZmxhZ3MmLTQwOTd8NjQ7Y2FzZSAwOkM9eC5wYXlsb2FkO2g9XCJmdW5jdGlvblwiPT09dHlwZW9mIEM/Qy5jYWxsKHAsQSxoKTpDO2lmKG51bGw9PT1ofHx2b2lkIDA9PT1oKWJyZWFrIGE7QT1tKHt9LEEsaCk7YnJlYWsgYTtjYXNlIDI6d2c9ITB9fW51bGwhPT1mLmNhbGxiYWNrJiYoYS5mbGFnc3w9MzIsaD1lLmVmZmVjdHMsbnVsbD09PWg/ZS5lZmZlY3RzPVtmXTpoLnB1c2goZikpfWVsc2UgcD17ZXZlbnRUaW1lOnAsbGFuZTpoLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLG5leHQ6bnVsbH0sbnVsbD09PW4/KGw9bj1wLGs9QSk6bj1uLm5leHQ9cCxnfD1oO2Y9Zi5uZXh0O2lmKG51bGw9PT1cbmYpaWYoaD1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1oKWJyZWFrO2Vsc2UgZj1oLm5leHQsaC5uZXh0PW51bGwsZS5sYXN0QmFzZVVwZGF0ZT1oLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKTtudWxsPT09biYmKGs9QSk7ZS5iYXNlU3RhdGU9aztlLmZpcnN0QmFzZVVwZGF0ZT1sO2UubGFzdEJhc2VVcGRhdGU9bjtEZ3w9ZzthLmxhbmVzPWc7YS5tZW1vaXplZFN0YXRlPUF9fWZ1bmN0aW9uIEVnKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZSl0aHJvdyBFcnJvcih5KDE5MSxlKSk7ZS5jYWxsKGQpfX19dmFyIEZnPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24gR2coYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm0oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5sYW5lcyYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIEtnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbHMpP1piKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUhnKCksZT1JZyhhKSxmPXpnKGQsZSk7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO0FnKGEsZik7SmcoYSxlLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUhnKCksZT1JZyhhKSxmPXpnKGQsZSk7Zi50YWc9MTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGM9SGcoKSxkPUlnKGEpLGU9emcoYyxkKTtlLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZS5jYWxsYmFjaz1cbmIpO0FnKGEsZSk7SmcoYSxkLGMpfX07ZnVuY3Rpb24gTGcoYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hSmUoYyxkKXx8IUplKGUsZik6ITB9XG5mdW5jdGlvbiBNZyhhLGIsYyl7dmFyIGQ9ITEsZT1DZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj12ZyhmKTooZT1GZihiKT9EZjpNLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9FZihhLGUpOkNmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9S2c7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFscz1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBOZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmS2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBPZyhhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPUZnO3hnKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9dmcoZik6KGY9RmYoYik/RGY6TS5jdXJyZW50LGUuY29udGV4dD1FZihhLGYpKTtDZyhhLGMsZSxkKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoR2coYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8XG4oYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmS2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksQ2coYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5mbGFnc3w9NCl9dmFyIFBnPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBRZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHkoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IoeSgxNDcsYSkpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09RmcmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IoeSgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IoeSgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIFJnKGEsYil7aWYoXCJ0ZXh0YXJlYVwiIT09YS50eXBlKXRocm93IEVycm9yKHkoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiKSk7fVxuZnVuY3Rpb24gU2coYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5mbGFncz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1UZyhhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5mbGFncz0yLFxuYyk6ZDtiLmZsYWdzPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmZsYWdzPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1VZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1RZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9VmcoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9UWcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9XG5XZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbihhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9WGcoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBBKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1VZyhcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYz1WZyhiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1RZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgdGE6cmV0dXJuIGI9V2coYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKFBnKGIpfHxMYShiKSlyZXR1cm4gYj1YZyhiLFxuYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO1JnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PXVhP24oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSB0YTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihQZyhjKXx8TGEoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bihhLGIsYyxkLG51bGwpO1JnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQyhhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPWEuZ2V0KGMpfHxcbm51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT11YT9uKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSB0YTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZihQZyhkKXx8TGEoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbihiLGEsZCxlLG51bGwpO1JnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geChlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCx0PW51bGwsdT1nLHo9Zz0wLHE9bnVsbDtudWxsIT09dSYmejxoLmxlbmd0aDt6Kyspe3UuaW5kZXg+ej8ocT11LHU9bnVsbCk6cT11LnNpYmxpbmc7dmFyIG49cChlLHUsaFt6XSxrKTtpZihudWxsPT09bil7bnVsbD09PXUmJih1PXEpO2JyZWFrfWEmJnUmJm51bGw9PT1cbm4uYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKG4sZyx6KTtudWxsPT09dD9sPW46dC5zaWJsaW5nPW47dD1uO3U9cX1pZih6PT09aC5sZW5ndGgpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoO3o8aC5sZW5ndGg7eisrKXU9QShlLGhbel0sayksbnVsbCE9PXUmJihnPWYodSxnLHopLG51bGw9PT10P2w9dTp0LnNpYmxpbmc9dSx0PXUpO3JldHVybiBsfWZvcih1PWQoZSx1KTt6PGgubGVuZ3RoO3orKylxPUModSxlLHosaFt6XSxrKSxudWxsIT09cSYmKGEmJm51bGwhPT1xLmFsdGVybmF0ZSYmdS5kZWxldGUobnVsbD09PXEua2V5P3o6cS5rZXkpLGc9ZihxLGcseiksbnVsbD09PXQ/bD1xOnQuc2libGluZz1xLHQ9cSk7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiB3KGUsZyxoLGspe3ZhciBsPUxhKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBsKXRocm93IEVycm9yKHkoMTUwKSk7aD1sLmNhbGwoaCk7aWYobnVsbD09XG5oKXRocm93IEVycm9yKHkoMTUxKSk7Zm9yKHZhciB0PWw9bnVsbCx1PWcsej1nPTAscT1udWxsLG49aC5uZXh0KCk7bnVsbCE9PXUmJiFuLmRvbmU7eisrLG49aC5uZXh0KCkpe3UuaW5kZXg+ej8ocT11LHU9bnVsbCk6cT11LnNpYmxpbmc7dmFyIHc9cChlLHUsbi52YWx1ZSxrKTtpZihudWxsPT09dyl7bnVsbD09PXUmJih1PXEpO2JyZWFrfWEmJnUmJm51bGw9PT13LmFsdGVybmF0ZSYmYihlLHUpO2c9Zih3LGcseik7bnVsbD09PXQ/bD13OnQuc2libGluZz13O3Q9dzt1PXF9aWYobi5kb25lKXJldHVybiBjKGUsdSksbDtpZihudWxsPT09dSl7Zm9yKDshbi5kb25lO3orKyxuPWgubmV4dCgpKW49QShlLG4udmFsdWUsayksbnVsbCE9PW4mJihnPWYobixnLHopLG51bGw9PT10P2w9bjp0LnNpYmxpbmc9bix0PW4pO3JldHVybiBsfWZvcih1PWQoZSx1KTshbi5kb25lO3orKyxuPWgubmV4dCgpKW49Qyh1LGUseixuLnZhbHVlLGspLG51bGwhPT1uJiYoYSYmbnVsbCE9PW4uYWx0ZXJuYXRlJiZcbnUuZGVsZXRlKG51bGw9PT1uLmtleT96Om4ua2V5KSxnPWYobixnLHopLG51bGw9PT10P2w9bjp0LnNpYmxpbmc9bix0PW4pO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PXVhJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIHNhOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bCl7c3dpdGNoKGsudGFnKXtjYXNlIDc6aWYoZi50eXBlPT09dWEpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YnJlYWs7ZGVmYXVsdDppZihrLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsay5zaWJsaW5nKTtcbmQ9ZShrLGYucHJvcHMpO2QucmVmPVFnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1jKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09dWE/KGQ9WGcoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVZnKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVFnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSB0YTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1cbldnKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPVVnKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKFBnKGYpKXJldHVybiB4KGEsZCxmLGgpO2lmKExhKGYpKXJldHVybiB3KGEsZCxmLGgpO2wmJlJnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDIyOmNhc2UgMDpjYXNlIDExOmNhc2UgMTU6dGhyb3cgRXJyb3IoeSgxNTIsUmEoYS50eXBlKXx8XCJDb21wb25lbnRcIikpO31yZXR1cm4gYyhhLGQpfX12YXIgWWc9U2coITApLFpnPVNnKCExKSwkZz17fSxhaD1CZigkZyksYmg9QmYoJGcpLGNoPUJmKCRnKTtcbmZ1bmN0aW9uIGRoKGEpe2lmKGE9PT0kZyl0aHJvdyBFcnJvcih5KDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIGVoKGEsYil7SShjaCxiKTtJKGJoLGEpO0koYWgsJGcpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6bWIobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPW1iKGIsYSl9SChhaCk7SShhaCxiKX1mdW5jdGlvbiBmaCgpe0goYWgpO0goYmgpO0goY2gpfWZ1bmN0aW9uIGdoKGEpe2RoKGNoLmN1cnJlbnQpO3ZhciBiPWRoKGFoLmN1cnJlbnQpO3ZhciBjPW1iKGIsYS50eXBlKTtiIT09YyYmKEkoYmgsYSksSShhaCxjKSl9ZnVuY3Rpb24gaGgoYSl7YmguY3VycmVudD09PWEmJihIKGFoKSxIKGJoKSl9dmFyIFA9QmYoMCk7XG5mdW5jdGlvbiBpaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxcIiQ/XCI9PT1jLmRhdGF8fFwiJCFcIj09PWMuZGF0YSkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5mbGFncyY2NCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfXZhciBqaD1udWxsLGtoPW51bGwsbGg9ITE7XG5mdW5jdGlvbiBtaChhLGIpe3ZhciBjPW5oKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmZsYWdzPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBvaChhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gcGgoYSl7aWYobGgpe3ZhciBiPWtoO2lmKGIpe3ZhciBjPWI7aWYoIW9oKGEsYikpe2I9cmYoYy5uZXh0U2libGluZyk7aWYoIWJ8fCFvaChhLGIpKXthLmZsYWdzPWEuZmxhZ3MmLTEwMjV8MjtsaD0hMTtqaD1hO3JldHVybn1taChqaCxjKX1qaD1hO2toPXJmKGIuZmlyc3RDaGlsZCl9ZWxzZSBhLmZsYWdzPWEuZmxhZ3MmLTEwMjV8MixsaD0hMSxqaD1hfX1mdW5jdGlvbiBxaChhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47amg9YX1cbmZ1bmN0aW9uIHJoKGEpe2lmKGEhPT1qaClyZXR1cm4hMTtpZighbGgpcmV0dXJuIHFoKGEpLGxoPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhbmYoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPWtoO2I7KW1oKGEsYiksYj1yZihiLm5leHRTaWJsaW5nKTtxaChhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHkoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIvJFwiPT09Yyl7aWYoMD09PWIpe2toPXJmKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2VcIiRcIiE9PWMmJlwiJCFcIiE9PWMmJlwiJD9cIiE9PWN8fGIrK31hPWEubmV4dFNpYmxpbmd9a2g9bnVsbH19ZWxzZSBraD1qaD9yZihhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1cbmZ1bmN0aW9uIHNoKCl7a2g9amg9bnVsbDtsaD0hMX12YXIgdGg9W107ZnVuY3Rpb24gdWgoKXtmb3IodmFyIGE9MDthPHRoLmxlbmd0aDthKyspdGhbYV0uX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9bnVsbDt0aC5sZW5ndGg9MH12YXIgdmg9cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcix3aD1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyx4aD0wLFI9bnVsbCxTPW51bGwsVD1udWxsLHloPSExLHpoPSExO2Z1bmN0aW9uIEFoKCl7dGhyb3cgRXJyb3IoeSgzMjEpKTt9ZnVuY3Rpb24gQmgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighSGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIENoKGEsYixjLGQsZSxmKXt4aD1mO1I9YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5sYW5lcz0wO3ZoLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/RGg6RWg7YT1jKGQsZSk7aWYoemgpe2Y9MDtkb3t6aD0hMTtpZighKDI1PmYpKXRocm93IEVycm9yKHkoMzAxKSk7Zis9MTtUPVM9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7dmguY3VycmVudD1GaDthPWMoZCxlKX13aGlsZSh6aCl9dmguY3VycmVudD1HaDtiPW51bGwhPT1TJiZudWxsIT09Uy5uZXh0O3hoPTA7VD1TPVI9bnVsbDt5aD0hMTtpZihiKXRocm93IEVycm9yKHkoMzAwKSk7cmV0dXJuIGF9ZnVuY3Rpb24gSGgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWE7cmV0dXJuIFR9XG5mdW5jdGlvbiBJaCgpe2lmKG51bGw9PT1TKXt2YXIgYT1SLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1TLm5leHQ7dmFyIGI9bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlOlQubmV4dDtpZihudWxsIT09YilUPWIsUz1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeSgzMTApKTtTPWE7YT17bWVtb2l6ZWRTdGF0ZTpTLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOlMuYmFzZVN0YXRlLGJhc2VRdWV1ZTpTLmJhc2VRdWV1ZSxxdWV1ZTpTLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlPVQ9YTpUPVQubmV4dD1hfXJldHVybiBUfWZ1bmN0aW9uIEpoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gS2goYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1TLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2U9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1mPW51bGwsaz1lO2Rve3ZhciBsPWsubGFuZTtpZigoeGgmbCk9PT1sKW51bGwhPT1oJiYoaD1oLm5leHQ9e2xhbmU6MCxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLGQ9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGQsay5hY3Rpb24pO2Vsc2V7dmFyIG49e2xhbmU6bCxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLFxuZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09aD8oZz1oPW4sZj1kKTpoPWgubmV4dD1uO1IubGFuZXN8PWw7RGd8PWx9az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1lKTtudWxsPT09aD9mPWQ6aC5uZXh0PWc7SGUoZCxiLm1lbW9pemVkU3RhdGUpfHwodWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWY7Yi5iYXNlUXVldWU9aDtjLmxhc3RSZW5kZXJlZFN0YXRlPWR9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIExoKGEpe3ZhciBiPUloKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHkoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTtIZShmLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfVxuZnVuY3Rpb24gTWgoYSxiLGMpe3ZhciBkPWIuX2dldFZlcnNpb247ZD1kKGIuX3NvdXJjZSk7dmFyIGU9Yi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeTtpZihudWxsIT09ZSlhPWU9PT1kO2Vsc2UgaWYoYT1hLm11dGFibGVSZWFkTGFuZXMsYT0oeGgmYSk9PT1hKWIuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9ZCx0aC5wdXNoKGIpO2lmKGEpcmV0dXJuIGMoYi5fc291cmNlKTt0aC5wdXNoKGIpO3Rocm93IEVycm9yKHkoMzUwKSk7fVxuZnVuY3Rpb24gTmgoYSxiLGMsZCl7dmFyIGU9VTtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih5KDM0OSkpO3ZhciBmPWIuX2dldFZlcnNpb24sZz1mKGIuX3NvdXJjZSksaD12aC5jdXJyZW50LGs9aC51c2VTdGF0ZShmdW5jdGlvbigpe3JldHVybiBNaChlLGIsYyl9KSxsPWtbMV0sbj1rWzBdO2s9VDt2YXIgQT1hLm1lbW9pemVkU3RhdGUscD1BLnJlZnMsQz1wLmdldFNuYXBzaG90LHg9QS5zb3VyY2U7QT1BLnN1YnNjcmliZTt2YXIgdz1SO2EubWVtb2l6ZWRTdGF0ZT17cmVmczpwLHNvdXJjZTpiLHN1YnNjcmliZTpkfTtoLnVzZUVmZmVjdChmdW5jdGlvbigpe3AuZ2V0U25hcHNob3Q9YztwLnNldFNuYXBzaG90PWw7dmFyIGE9ZihiLl9zb3VyY2UpO2lmKCFIZShnLGEpKXthPWMoYi5fc291cmNlKTtIZShuLGEpfHwobChhKSxhPUlnKHcpLGUubXV0YWJsZVJlYWRMYW5lc3w9YSZlLnBlbmRpbmdMYW5lcyk7YT1lLm11dGFibGVSZWFkTGFuZXM7ZS5lbnRhbmdsZWRMYW5lc3w9YTtmb3IodmFyIGQ9XG5lLmVudGFuZ2xlbWVudHMsaD1hOzA8aDspe3ZhciBrPTMxLVZjKGgpLHY9MTw8aztkW2tdfD1hO2gmPX52fX19LFtjLGIsZF0pO2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cmV0dXJuIGQoYi5fc291cmNlLGZ1bmN0aW9uKCl7dmFyIGE9cC5nZXRTbmFwc2hvdCxjPXAuc2V0U25hcHNob3Q7dHJ5e2MoYShiLl9zb3VyY2UpKTt2YXIgZD1JZyh3KTtlLm11dGFibGVSZWFkTGFuZXN8PWQmZS5wZW5kaW5nTGFuZXN9Y2F0Y2gocSl7YyhmdW5jdGlvbigpe3Rocm93IHE7fSl9fSl9LFtiLGRdKTtIZShDLGMpJiZIZSh4LGIpJiZIZShBLGQpfHwoYT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpKaCxsYXN0UmVuZGVyZWRTdGF0ZTpufSxhLmRpc3BhdGNoPWw9T2guYmluZChudWxsLFIsYSksay5xdWV1ZT1hLGsuYmFzZVF1ZXVlPW51bGwsbj1NaChlLGIsYyksay5tZW1vaXplZFN0YXRlPWsuYmFzZVN0YXRlPW4pO3JldHVybiBufVxuZnVuY3Rpb24gUGgoYSxiLGMpe3ZhciBkPUloKCk7cmV0dXJuIE5oKGQsYSxiLGMpfWZ1bmN0aW9uIFFoKGEpe3ZhciBiPUhoKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD1PaC5iaW5kKG51bGwsUixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfVxuZnVuY3Rpb24gUmgoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ui51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsfSxSLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfWZ1bmN0aW9uIFNoKGEpe3ZhciBiPUhoKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9ZnVuY3Rpb24gVGgoKXtyZXR1cm4gSWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIFVoKGEsYixjLGQpe3ZhciBlPUhoKCk7Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1cbmZ1bmN0aW9uIFZoKGEsYixjLGQpe3ZhciBlPUloKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PVMpe3ZhciBnPVMubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmQmgoZCxnLmRlcHMpKXtSaChiLGMsZixkKTtyZXR1cm59fVIuZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPVJoKDF8YixjLGYsZCl9ZnVuY3Rpb24gV2goYSxiKXtyZXR1cm4gVWgoNTE2LDQsYSxiKX1mdW5jdGlvbiBYaChhLGIpe3JldHVybiBWaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFloKGEsYil7cmV0dXJuIFZoKDQsMixhLGIpfWZ1bmN0aW9uIFpoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19XG5mdW5jdGlvbiAkaChhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFZoKDQsMixaaC5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBhaSgpe31mdW5jdGlvbiBiaShhLGIpe3ZhciBjPUloKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZCaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBjaShhLGIpe3ZhciBjPUloKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZCaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIGRpKGEsYil7dmFyIGM9ZWcoKTtnZyg5OD5jPzk4OmMsZnVuY3Rpb24oKXthKCEwKX0pO2dnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBjPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXthKCExKSxiKCl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWN9fSl9XG5mdW5jdGlvbiBPaChhLGIsYyl7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9e2xhbmU6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxnPWIucGVuZGluZztudWxsPT09Zz9mLm5leHQ9ZjooZi5uZXh0PWcubmV4dCxnLm5leHQ9Zik7Yi5wZW5kaW5nPWY7Zz1hLmFsdGVybmF0ZTtpZihhPT09Unx8bnVsbCE9PWcmJmc9PT1SKXpoPXloPSEwO2Vsc2V7aWYoMD09PWEubGFuZXMmJihudWxsPT09Z3x8MD09PWcubGFuZXMpJiYoZz1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWcpKXRyeXt2YXIgaD1iLmxhc3RSZW5kZXJlZFN0YXRlLGs9ZyhoLGMpO2YuZWFnZXJSZWR1Y2VyPWc7Zi5lYWdlclN0YXRlPWs7aWYoSGUoayxoKSlyZXR1cm59Y2F0Y2gobCl7fWZpbmFsbHl7fUpnKGEsZSxkKX19XG52YXIgR2g9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOkFoLHVzZUNvbnRleHQ6QWgsdXNlRWZmZWN0OkFoLHVzZUltcGVyYXRpdmVIYW5kbGU6QWgsdXNlTGF5b3V0RWZmZWN0OkFoLHVzZU1lbW86QWgsdXNlUmVkdWNlcjpBaCx1c2VSZWY6QWgsdXNlU3RhdGU6QWgsdXNlRGVidWdWYWx1ZTpBaCx1c2VEZWZlcnJlZFZhbHVlOkFoLHVzZVRyYW5zaXRpb246QWgsdXNlTXV0YWJsZVNvdXJjZTpBaCx1c2VPcGFxdWVJZGVudGlmaWVyOkFoLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRGg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7SGgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6V2gsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFVoKDQsMixaaC5iaW5kKG51bGwsXG5iLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVWgoNCwyLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1IaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpTaCx1c2VTdGF0ZTpRaCx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9UWgoYSksYz1iWzBdLGQ9YlsxXTtXaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247XG53aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9UWgoITEpLGI9YVswXTthPWRpLmJpbmQobnVsbCxhWzFdKTtTaChhKTtyZXR1cm5bYSxiXX0sdXNlTXV0YWJsZVNvdXJjZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9SGgoKTtkLm1lbW9pemVkU3RhdGU9e3JlZnM6e2dldFNuYXBzaG90OmIsc2V0U25hcHNob3Q6bnVsbH0sc291cmNlOmEsc3Vic2NyaWJlOmN9O3JldHVybiBOaChkLGEsYixjKX0sdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe2lmKGxoKXt2YXIgYT0hMSxiPXVmKGZ1bmN0aW9uKCl7YXx8KGE9ITAsYyhcInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KSkpO3Rocm93IEVycm9yKHkoMzU1KSk7fSksYz1RaChiKVsxXTswPT09KFIubW9kZSYyKSYmKFIuZmxhZ3N8PTUxNixSaCg1LGZ1bmN0aW9uKCl7YyhcInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KSl9LFxudm9pZCAwLG51bGwpKTtyZXR1cm4gYn1iPVwicjpcIisodGYrKykudG9TdHJpbmcoMzYpO1FoKGIpO3JldHVybiBifSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEVoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6S2gsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIEtoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUtoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9S2goSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIEtoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxGaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6YmksdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6WGgsdXNlSW1wZXJhdGl2ZUhhbmRsZTokaCx1c2VMYXlvdXRFZmZlY3Q6WWgsdXNlTWVtbzpjaSx1c2VSZWR1Y2VyOkxoLHVzZVJlZjpUaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBMaChKaCl9LHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1MaChKaCksYz1iWzBdLGQ9YlsxXTtYaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPUxoKEpoKVswXTtyZXR1cm5bVGgoKS5jdXJyZW50LFxuYV19LHVzZU11dGFibGVTb3VyY2U6UGgsdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe3JldHVybiBMaChKaClbMF19LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sZWk9cmEuUmVhY3RDdXJyZW50T3duZXIsdWc9ITE7ZnVuY3Rpb24gZmkoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9aZyhiLG51bGwsYyxkKTpZZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBnaShhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7dGcoYixlKTtkPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGlpKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhamkoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsa2koYSxiLGcsZCxlLGYpO2E9VmcoYy50eXBlLG51bGwsZCxiLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKDA9PT0oZSZmKSYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpKZSxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiBoaShhLGIsZik7Yi5mbGFnc3w9MTthPVRnKGcsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24ga2koYSxiLGMsZCxlLGYpe2lmKG51bGwhPT1hJiZKZShhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYpaWYodWc9ITEsMCE9PShmJmUpKTAhPT0oYS5mbGFncyYxNjM4NCkmJih1Zz0hMCk7ZWxzZSByZXR1cm4gYi5sYW5lcz1hLmxhbmVzLGhpKGEsYixmKTtyZXR1cm4gbGkoYSxiLGMsZCxmKX1cbmZ1bmN0aW9uIG1pKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQuY2hpbGRyZW4sZj1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbDtpZihcImhpZGRlblwiPT09ZC5tb2RlfHxcInVuc3RhYmxlLWRlZmVyLXdpdGhvdXQtaGlkaW5nXCI9PT1kLm1vZGUpaWYoMD09PShiLm1vZGUmNCkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MH0sbmkoYixjKTtlbHNlIGlmKDAhPT0oYyYxMDczNzQxODI0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLG51bGwhPT1mP2YuYmFzZUxhbmVzOmMpO2Vsc2UgcmV0dXJuIGE9bnVsbCE9PWY/Zi5iYXNlTGFuZXN8YzpjLGIubGFuZXM9Yi5jaGlsZExhbmVzPTEwNzM3NDE4MjQsYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6YX0sbmkoYixhKSxudWxsO2Vsc2UgbnVsbCE9PWY/KGQ9Zi5iYXNlTGFuZXN8YyxiLm1lbW9pemVkU3RhdGU9bnVsbCk6ZD1jLG5pKGIsZCk7ZmkoYSxiLGUsYyk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBvaShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmZsYWdzfD0xMjh9ZnVuY3Rpb24gbGkoYSxiLGMsZCxlKXt2YXIgZj1GZihjKT9EZjpNLmN1cnJlbnQ7Zj1FZihiLGYpO3RnKGIsZSk7Yz1DaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF1ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS01MTcsYS5sYW5lcyY9fmUsaGkoYSxiLGUpO2IuZmxhZ3N8PTE7ZmkoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBwaShhLGIsYyxkLGUpe2lmKEZmKGMpKXt2YXIgZj0hMDtKZihiKX1lbHNlIGY9ITE7dGcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksTWcoYixjLGQpLE9nKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXZnKGwpOihsPUZmKGMpP0RmOk0uY3VycmVudCxsPUVmKGIsbCkpO3ZhciBuPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIG58fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO0F8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZOZyhiLGcsZCxsKTt3Zz0hMTt2YXIgcD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHxwIT09a3x8Ti5jdXJyZW50fHx3Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG4mJihHZyhiLGMsbixkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9d2d8fExnKGIsYyxoLGQscCxrLGwpKT8oQXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksZD0hMSl9ZWxzZXtnPWIuc3RhdGVOb2RlO3lnKGEsYik7aD1iLm1lbW9pemVkUHJvcHM7bD1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6bGcoYi50eXBlLGgpO2cucHJvcHM9bDtBPWIucGVuZGluZ1Byb3BzO3A9Zy5jb250ZXh0O2s9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9dmcoayk6KGs9RmYoYyk/RGY6TS5jdXJyZW50LGs9RWYoYixrKSk7dmFyIEM9Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7KG49XCJmdW5jdGlvblwiPT09dHlwZW9mIEN8fFxuXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1BfHxwIT09aykmJk5nKGIsZyxkLGspO3dnPSExO3A9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cDtDZyhiLGQsZyxlKTt2YXIgeD1iLm1lbW9pemVkU3RhdGU7aCE9PUF8fHAhPT14fHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyYmKEdnKGIsYyxDLGQpLHg9Yi5tZW1vaXplZFN0YXRlKSwobD13Z3x8TGcoYixjLGwsZCxwLHgsaykpPyhufHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLFxueCxrKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsaykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5mbGFnc3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9eCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9ayxkPWwpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fFxuaD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MjU2KSxkPSExKX1yZXR1cm4gcWkoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gcWkoYSxiLGMsZCxlLGYpe29pKGEsYik7dmFyIGc9MCE9PShiLmZsYWdzJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJktmKGIsYywhMSksaGkoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7ZWkuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5mbGFnc3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1ZZyhiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPVlnKGIsbnVsbCxoLGYpKTpmaShhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZLZihiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIHJpKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/SGYoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmSGYoYSxiLmNvbnRleHQsITEpO2VoKGEsYi5jb250YWluZXJJbmZvKX1cbnZhciBzaT17ZGVoeWRyYXRlZDpudWxsLHJldHJ5TGFuZTowfTtcbmZ1bmN0aW9uIHRpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPVAuY3VycmVudCxmPSExLGc7KGc9MCE9PShiLmZsYWdzJjY0KSl8fChnPW51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlPyExOjAhPT0oZSYyKSk7Zz8oZj0hMCxiLmZsYWdzJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1kLmZhbGxiYWNrfHwhMD09PWQudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChlfD0xKTtJKFAsZSYxKTtpZihudWxsPT09YSl7dm9pZCAwIT09ZC5mYWxsYmFjayYmcGgoYik7YT1kLmNoaWxkcmVuO2U9ZC5mYWxsYmFjaztpZihmKXJldHVybiBhPXVpKGIsYSxlLGMpLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmN9LGIubWVtb2l6ZWRTdGF0ZT1zaSxhO2lmKFwibnVtYmVyXCI9PT10eXBlb2YgZC51bnN0YWJsZV9leHBlY3RlZExvYWRUaW1lKXJldHVybiBhPXVpKGIsYSxlLGMpLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmN9LFxuYi5tZW1vaXplZFN0YXRlPXNpLGIubGFuZXM9MzM1NTQ0MzIsYTtjPXZpKHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmF9LGIubW9kZSxjLG51bGwpO2MucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9Y31pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXtpZihmKXJldHVybiBkPXdpKGEsYixkLmNoaWxkcmVuLGQuZmFsbGJhY2ssYyksZj1iLmNoaWxkLGU9YS5jaGlsZC5tZW1vaXplZFN0YXRlLGYubWVtb2l6ZWRTdGF0ZT1udWxsPT09ZT97YmFzZUxhbmVzOmN9OntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWlmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306XG57YmFzZUxhbmVzOmUuYmFzZUxhbmVzfGN9LGYuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmMsYi5tZW1vaXplZFN0YXRlPXNpLGQ7Yz14aShhLGIsZC5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gY31mdW5jdGlvbiB1aShhLGIsYyxkKXt2YXIgZT1hLm1vZGUsZj1hLmNoaWxkO2I9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpifTswPT09KGUmMikmJm51bGwhPT1mPyhmLmNoaWxkTGFuZXM9MCxmLnBlbmRpbmdQcm9wcz1iKTpmPXZpKGIsZSwwLG51bGwpO2M9WGcoYyxlLGQsbnVsbCk7Zi5yZXR1cm49YTtjLnJldHVybj1hO2Yuc2libGluZz1jO2EuY2hpbGQ9ZjtyZXR1cm4gY31cbmZ1bmN0aW9uIHhpKGEsYixjLGQpe3ZhciBlPWEuY2hpbGQ7YT1lLnNpYmxpbmc7Yz1UZyhlLHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmN9KTswPT09KGIubW9kZSYyKSYmKGMubGFuZXM9ZCk7Yy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbDtudWxsIT09YSYmKGEubmV4dEVmZmVjdD1udWxsLGEuZmxhZ3M9OCxiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1hKTtyZXR1cm4gYi5jaGlsZD1jfVxuZnVuY3Rpb24gd2koYSxiLGMsZCxlKXt2YXIgZj1iLm1vZGUsZz1hLmNoaWxkO2E9Zy5zaWJsaW5nO3ZhciBoPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Y307MD09PShmJjIpJiZiLmNoaWxkIT09Zz8oYz1iLmNoaWxkLGMuY2hpbGRMYW5lcz0wLGMucGVuZGluZ1Byb3BzPWgsZz1jLmxhc3RFZmZlY3QsbnVsbCE9PWc/KGIuZmlyc3RFZmZlY3Q9Yy5maXJzdEVmZmVjdCxiLmxhc3RFZmZlY3Q9ZyxnLm5leHRFZmZlY3Q9bnVsbCk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbCk6Yz1UZyhnLGgpO251bGwhPT1hP2Q9VGcoYSxkKTooZD1YZyhkLGYsZSxudWxsKSxkLmZsYWdzfD0yKTtkLnJldHVybj1iO2MucmV0dXJuPWI7Yy5zaWJsaW5nPWQ7Yi5jaGlsZD1jO3JldHVybiBkfWZ1bmN0aW9uIHlpKGEsYil7YS5sYW5lc3w9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKGMubGFuZXN8PWIpO3NnKGEucmV0dXJuLGIpfVxuZnVuY3Rpb24gemkoYSxiLGMsZCxlLGYpe3ZhciBnPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zz9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcucmVuZGVyaW5nU3RhcnRUaW1lPTAsZy5sYXN0PWQsZy50YWlsPWMsZy50YWlsTW9kZT1lLGcubGFzdEVmZmVjdD1mKX1cbmZ1bmN0aW9uIEFpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7ZmkoYSxiLGQuY2hpbGRyZW4sYyk7ZD1QLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5mbGFnc3w9NjQ7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJnlpKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKXlpKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoUCxkKTtpZigwPT09KGIubW9kZSYyKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09aWgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTt6aShiLCExLGUsYyxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1paChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9emkoYiwhMCxjLG51bGwsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOnppKGIsITEsbnVsbCxudWxsLHZvaWQgMCxiLmxhc3RFZmZlY3QpO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBoaShhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7RGd8PWIubGFuZXM7aWYoMCE9PShjJmIuY2hpbGRMYW5lcykpe2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcih5KDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1UZyhhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9VGcoYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1yZXR1cm4gbnVsbH12YXIgQmksQ2ksRGksRWk7XG5CaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07Q2k9ZnVuY3Rpb24oKXt9O1xuRGk9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9YS5tZW1vaXplZFByb3BzO2lmKGUhPT1kKXthPWIuc3RhdGVOb2RlO2RoKGFoLmN1cnJlbnQpO3ZhciBmPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmU9WWEoYSxlKTtkPVlhKGEsZCk7Zj1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGUpO2Q9ZWIoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjplPW0oe30sZSx7dmFsdWU6dm9pZCAwfSk7ZD1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2Y9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6ZT1nYihhLGUpO2Q9Z2IoYSxkKTtmPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGUub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGEub25jbGljaz1qZil9dmIoYyxkKTt2YXIgZztjPW51bGw7Zm9yKGwgaW4gZSlpZighZC5oYXNPd25Qcm9wZXJ0eShsKSYmZS5oYXNPd25Qcm9wZXJ0eShsKSYmbnVsbCE9ZVtsXSlpZihcInN0eWxlXCI9PT1cbmwpe3ZhciBoPWVbbF07Zm9yKGcgaW4gaCloLmhhc093blByb3BlcnR5KGcpJiYoY3x8KGM9e30pLGNbZ109XCJcIil9ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWwmJlwiY2hpbGRyZW5cIiE9PWwmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT9mfHwoZj1bXSk6KGY9Znx8W10pLnB1c2gobCxudWxsKSk7Zm9yKGwgaW4gZCl7dmFyIGs9ZFtsXTtoPW51bGwhPWU/ZVtsXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShsKSYmayE9PWgmJihudWxsIT1rfHxudWxsIT1oKSlpZihcInN0eWxlXCI9PT1sKWlmKGgpe2ZvcihnIGluIGgpIWguaGFzT3duUHJvcGVydHkoZyl8fGsmJmsuaGFzT3duUHJvcGVydHkoZyl8fChjfHwoYz17fSksY1tnXT1cIlwiKTtmb3IoZyBpbiBrKWsuaGFzT3duUHJvcGVydHkoZykmJmhbZ10hPT1rW2ddJiYoY3x8XG4oYz17fSksY1tnXT1rW2ddKX1lbHNlIGN8fChmfHwoZj1bXSksZi5wdXNoKGwsYykpLGM9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8oaz1rP2suX19odG1sOnZvaWQgMCxoPWg/aC5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmghPT1rJiYoZj1mfHxbXSkucHVzaChsLGspKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoZj1mfHxbXSkucHVzaChsLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiYoY2EuaGFzT3duUHJvcGVydHkobCk/KG51bGwhPWsmJlwib25TY3JvbGxcIj09PWwmJkcoXCJzY3JvbGxcIixhKSxmfHxoPT09a3x8KGY9W10pKTpcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rJiZrLiQkdHlwZW9mPT09R2E/ay50b1N0cmluZygpOihmPWZ8fFtdKS5wdXNoKGwsaykpfWMmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixcbmMpO3ZhciBsPWY7aWYoYi51cGRhdGVRdWV1ZT1sKWIuZmxhZ3N8PTR9fTtFaT1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZmxhZ3N8PTQpfTtmdW5jdGlvbiBGaShhLGIpe2lmKCFsaClzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gR2koYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIG51bGw7Y2FzZSAxOnJldHVybiBGZihiLnR5cGUpJiZHZigpLG51bGw7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7ZD1iLnN0YXRlTm9kZTtkLnBlbmRpbmdDb250ZXh0JiYoZC5jb250ZXh0PWQucGVuZGluZ0NvbnRleHQsZC5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpcmgoYik/Yi5mbGFnc3w9NDpkLmh5ZHJhdGV8fChiLmZsYWdzfD0yNTYpO0NpKGIpO3JldHVybiBudWxsO2Nhc2UgNTpoaChiKTt2YXIgZT1kaChjaC5jdXJyZW50KTtjPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRGkoYSxiLGMsZCxlKSxhLnJlZiE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KTtlbHNle2lmKCFkKXtpZihudWxsPT09XG5iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2NikpO3JldHVybiBudWxsfWE9ZGgoYWguY3VycmVudCk7aWYocmgoYikpe2Q9Yi5zdGF0ZU5vZGU7Yz1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2Rbd2ZdPWI7ZFt4Zl09Zjtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkcoXCJjYW5jZWxcIixkKTtHKFwiY2xvc2VcIixkKTticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkcoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGE9MDthPFhlLmxlbmd0aDthKyspRyhYZVthXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RyhcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsZCk7RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpaYShkLGYpO0coXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIWYubXVsdGlwbGV9O0coXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoZCxmKSxHKFwiaW52YWxpZFwiLGQpfXZiKGMsZik7YT1udWxsO2Zvcih2YXIgZyBpbiBmKWYuaGFzT3duUHJvcGVydHkoZykmJihlPWZbZ10sXCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGU/ZC50ZXh0Q29udGVudCE9PWUmJihhPVtcImNoaWxkcmVuXCIsZV0pOlwibnVtYmVyXCI9PT10eXBlb2YgZSYmZC50ZXh0Q29udGVudCE9PVwiXCIrZSYmKGE9W1wiY2hpbGRyZW5cIixcIlwiK2VdKTpjYS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9ZSYmXCJvblNjcm9sbFwiPT09ZyYmRyhcInNjcm9sbFwiLGQpKTtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoZCk7Y2IoZCxmLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShkKTtqYihkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmKGQub25jbGljaz1cbmpmKX1kPWE7Yi51cGRhdGVRdWV1ZT1kO251bGwhPT1kJiYoYi5mbGFnc3w9NCl9ZWxzZXtnPTk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50O2E9PT1rYi5odG1sJiYoYT1sYihjKSk7YT09PWtiLmh0bWw/XCJzY3JpcHRcIj09PWM/KGE9Zy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZC5pcz9hPWcuY3JlYXRlRWxlbWVudChjLHtpczpkLmlzfSk6KGE9Zy5jcmVhdGVFbGVtZW50KGMpLFwic2VsZWN0XCI9PT1jJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxjKTthW3dmXT1iO2FbeGZdPWQ7QmkoYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2c9d2IoYyxkKTtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkcoXCJjYW5jZWxcIixhKTtHKFwiY2xvc2VcIixhKTtcbmU9ZDticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkcoXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihlPTA7ZTxYZS5sZW5ndGg7ZSsrKUcoWGVbZV0sYSk7ZT1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsYSk7RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpHKFwidG9nZ2xlXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGEsZCk7ZT1ZYShhLGQpO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZWIoYSxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2U9bSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGEsZCk7ZT1cbmdiKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztkZWZhdWx0OmU9ZH12YihjLGUpO3ZhciBoPWU7Zm9yKGYgaW4gaClpZihoLmhhc093blByb3BlcnR5KGYpKXt2YXIgaz1oW2ZdO1wic3R5bGVcIj09PWY/dGIoYSxrKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJm9iKGEsaykpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBrPyhcInRleHRhcmVhXCIhPT1jfHxcIlwiIT09aykmJnBiKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZwYihhLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKGNhLmhhc093blByb3BlcnR5KGYpP251bGwhPWsmJlwib25TY3JvbGxcIj09PWYmJkcoXCJzY3JvbGxcIixhKTpudWxsIT1rJiZxYShhLGYsayxnKSl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGEpO2NiKGEsZCwhMSk7XG5icmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShhKTtqYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrU2EoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtmPWQudmFsdWU7bnVsbCE9Zj9mYihhLCEhZC5tdWx0aXBsZSxmLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmZmIoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGUub25DbGljayYmKGEub25jbGljaz1qZil9bWYoYyxkKSYmKGIuZmxhZ3N8PTQpfW51bGwhPT1iLnJlZiYmKGIuZmxhZ3N8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKUVpKGEsYixhLm1lbW9pemVkUHJvcHMsZCk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGQmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2NikpO1xuYz1kaChjaC5jdXJyZW50KTtkaChhaC5jdXJyZW50KTtyaChiKT8oZD1iLnN0YXRlTm9kZSxjPWIubWVtb2l6ZWRQcm9wcyxkW3dmXT1iLGQubm9kZVZhbHVlIT09YyYmKGIuZmxhZ3N8PTQpKTooZD0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGRbd2ZdPWIsYi5zdGF0ZU5vZGU9ZCl9cmV0dXJuIG51bGw7Y2FzZSAxMzpIKFApO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5mbGFncyY2NCkpcmV0dXJuIGIubGFuZXM9YyxiO2Q9bnVsbCE9PWQ7Yz0hMTtudWxsPT09YT92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJnJoKGIpOmM9bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZTtpZihkJiYhYyYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWEmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KFAuY3VycmVudCYxKSkwPT09ViYmKFY9Myk7ZWxzZXtpZigwPT09Vnx8Mz09PVYpVj1cbjQ7bnVsbD09PVV8fDA9PT0oRGcmMTM0MjE3NzI3KSYmMD09PShIaSYxMzQyMTc3MjcpfHxJaShVLFcpfWlmKGR8fGMpYi5mbGFnc3w9NDtyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIGZoKCksQ2koYiksbnVsbD09PWEmJmNmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYiksbnVsbDtjYXNlIDE3OnJldHVybiBGZihiLnR5cGUpJiZHZigpLG51bGw7Y2FzZSAxOTpIKFApO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2Y9MCE9PShiLmZsYWdzJjY0KTtnPWQucmVuZGVyaW5nO2lmKG51bGw9PT1nKWlmKGYpRmkoZCwhMSk7ZWxzZXtpZigwIT09Vnx8bnVsbCE9PWEmJjAhPT0oYS5mbGFncyY2NCkpZm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2c9aWgoYSk7aWYobnVsbCE9PWcpe2IuZmxhZ3N8PTY0O0ZpKGQsITEpO2Y9Zy51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKGIudXBkYXRlUXVldWU9ZixiLmZsYWdzfD00KTtcbm51bGw9PT1kLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3Q7ZD1jO2ZvcihjPWIuY2hpbGQ7bnVsbCE9PWM7KWY9YyxhPWQsZi5mbGFncyY9MixmLm5leHRFZmZlY3Q9bnVsbCxmLmZpcnN0RWZmZWN0PW51bGwsZi5sYXN0RWZmZWN0PW51bGwsZz1mLmFsdGVybmF0ZSxudWxsPT09Zz8oZi5jaGlsZExhbmVzPTAsZi5sYW5lcz1hLGYuY2hpbGQ9bnVsbCxmLm1lbW9pemVkUHJvcHM9bnVsbCxmLm1lbW9pemVkU3RhdGU9bnVsbCxmLnVwZGF0ZVF1ZXVlPW51bGwsZi5kZXBlbmRlbmNpZXM9bnVsbCxmLnN0YXRlTm9kZT1udWxsKTooZi5jaGlsZExhbmVzPWcuY2hpbGRMYW5lcyxmLmxhbmVzPWcubGFuZXMsZi5jaGlsZD1nLmNoaWxkLGYubWVtb2l6ZWRQcm9wcz1nLm1lbW9pemVkUHJvcHMsZi5tZW1vaXplZFN0YXRlPWcubWVtb2l6ZWRTdGF0ZSxmLnVwZGF0ZVF1ZXVlPWcudXBkYXRlUXVldWUsZi50eXBlPWcudHlwZSxhPWcuZGVwZW5kZW5jaWVzLFxuZi5kZXBlbmRlbmNpZXM9bnVsbD09PWE/bnVsbDp7bGFuZXM6YS5sYW5lcyxmaXJzdENvbnRleHQ6YS5maXJzdENvbnRleHR9KSxjPWMuc2libGluZztJKFAsUC5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9YT1hLnNpYmxpbmd9bnVsbCE9PWQudGFpbCYmTygpPkppJiYoYi5mbGFnc3w9NjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKX1lbHNle2lmKCFmKWlmKGE9aWgoZyksbnVsbCE9PWEpe2lmKGIuZmxhZ3N8PTY0LGY9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZmxhZ3N8PTQpLEZpKGQsITApLG51bGw9PT1kLnRhaWwmJlwiaGlkZGVuXCI9PT1kLnRhaWxNb2RlJiYhZy5hbHRlcm5hdGUmJiFsaClyZXR1cm4gYj1iLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0LG51bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpLG51bGx9ZWxzZSAyKk8oKS1kLnJlbmRlcmluZ1N0YXJ0VGltZT5KaSYmMTA3Mzc0MTgyNCE9PWMmJihiLmZsYWdzfD1cbjY0LGY9ITAsRmkoZCwhMSksYi5sYW5lcz0zMzU1NDQzMik7ZC5pc0JhY2t3YXJkcz8oZy5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1nKTooYz1kLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWc6Yi5jaGlsZD1nLGQubGFzdD1nKX1yZXR1cm4gbnVsbCE9PWQudGFpbD8oYz1kLnRhaWwsZC5yZW5kZXJpbmc9YyxkLnRhaWw9Yy5zaWJsaW5nLGQubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QsZC5yZW5kZXJpbmdTdGFydFRpbWU9TygpLGMuc2libGluZz1udWxsLGI9UC5jdXJyZW50LEkoUCxmP2ImMXwyOmImMSksYyk6bnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbCE9PWEmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUhPT0obnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSkmJlwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIiE9PWQubW9kZSYmKGIuZmxhZ3N8PTQpLG51bGx9dGhyb3cgRXJyb3IoeSgxNTYsYi50YWcpKTt9XG5mdW5jdGlvbiBMaShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpGZihhLnR5cGUpJiZHZigpO3ZhciBiPWEuZmxhZ3M7cmV0dXJuIGImNDA5Nj8oYS5mbGFncz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7Yj1hLmZsYWdzO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IoeSgyODUpKTthLmZsYWdzPWImLTQwOTd8NjQ7cmV0dXJuIGE7Y2FzZSA1OnJldHVybiBoaChhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIEgoUCksYj1hLmZsYWdzLGImNDA5Nj8oYS5mbGFncz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAxOTpyZXR1cm4gSChQKSxudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIHJnKGEpLG51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBLaSgpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBNaShhLGIpe3RyeXt2YXIgYz1cIlwiLGQ9YjtkbyBjKz1RYShkKSxkPWQucmV0dXJuO3doaWxlKGQpO3ZhciBlPWN9Y2F0Y2goZil7ZT1cIlxcbkVycm9yIGdlbmVyYXRpbmcgc3RhY2s6IFwiK2YubWVzc2FnZStcIlxcblwiK2Yuc3RhY2t9cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6ZX19ZnVuY3Rpb24gTmkoYSxiKXt0cnl7Y29uc29sZS5lcnJvcihiLnZhbHVlKX1jYXRjaChjKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYzt9KX19dmFyIE9pPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIFBpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1FpfHwoUWk9ITAsUmk9ZCk7TmkoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBTaShhLGIsYyl7Yz16ZygtMSxjKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7TmkoYSxiKTtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PVRpP1RpPW5ldyBTZXQoW3RoaXNdKTpUaS5hZGQodGhpcyksTmkoYSxiKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9dmFyIFVpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O1xuZnVuY3Rpb24gVmkoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7V2koYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfWZ1bmN0aW9uIFhpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6cmV0dXJuO2Nhc2UgMTppZihiLmZsYWdzJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6bGcoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1yZXR1cm47Y2FzZSAzOmIuZmxhZ3MmMjU2JiZxZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTtyZXR1cm47Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBZaShhLGIsYyl7c3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6Yj1jLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe2E9Yj1iLm5leHQ7ZG97aWYoMz09PShhLnRhZyYzKSl7dmFyIGQ9YS5jcmVhdGU7YS5kZXN0cm95PWQoKX1hPWEubmV4dH13aGlsZShhIT09Yil9Yj1jLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe2E9Yj1iLm5leHQ7ZG97dmFyIGU9YTtkPWUubmV4dDtlPWUudGFnOzAhPT0oZSY0KSYmMCE9PShlJjEpJiYoWmkoYyxhKSwkaShjLGEpKTthPWR9d2hpbGUoYSE9PWIpfXJldHVybjtjYXNlIDE6YT1jLnN0YXRlTm9kZTtjLmZsYWdzJjQmJihudWxsPT09Yj9hLmNvbXBvbmVudERpZE1vdW50KCk6KGQ9Yy5lbGVtZW50VHlwZT09PWMudHlwZT9iLm1lbW9pemVkUHJvcHM6bGcoYy50eXBlLGIubWVtb2l6ZWRQcm9wcyksYS5jb21wb25lbnREaWRVcGRhdGUoZCxcbmIubWVtb2l6ZWRTdGF0ZSxhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKSkpO2I9Yy51cGRhdGVRdWV1ZTtudWxsIT09YiYmRWcoYyxiLGEpO3JldHVybjtjYXNlIDM6Yj1jLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthPW51bGw7aWYobnVsbCE9PWMuY2hpbGQpc3dpdGNoKGMuY2hpbGQudGFnKXtjYXNlIDU6YT1jLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6YT1jLmNoaWxkLnN0YXRlTm9kZX1FZyhjLGIsYSl9cmV0dXJuO2Nhc2UgNTphPWMuc3RhdGVOb2RlO251bGw9PT1iJiZjLmZsYWdzJjQmJm1mKGMudHlwZSxjLm1lbW9pemVkUHJvcHMpJiZhLmZvY3VzKCk7cmV0dXJuO2Nhc2UgNjpyZXR1cm47Y2FzZSA0OnJldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGw9PT1jLm1lbW9pemVkU3RhdGUmJihjPWMuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYz1jLm1lbW9pemVkU3RhdGUsbnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsIT09YyYmQ2MoYykpKSk7XG5yZXR1cm47Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpjYXNlIDIzOmNhc2UgMjQ6cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fVxuZnVuY3Rpb24gYWooYSxiKXtmb3IodmFyIGM9YTs7KXtpZig1PT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKGIpZD1kLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLnNldFByb3BlcnR5P2Quc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6ZC5kaXNwbGF5PVwibm9uZVwiO2Vsc2V7ZD1jLnN0YXRlTm9kZTt2YXIgZT1jLm1lbW9pemVkUHJvcHMuc3R5bGU7ZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGw7ZC5zdHlsZS5kaXNwbGF5PXNiKFwiZGlzcGxheVwiLGUpfX1lbHNlIGlmKDY9PT1jLnRhZyljLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yj9cIlwiOmMubWVtb2l6ZWRQcm9wcztlbHNlIGlmKCgyMyE9PWMudGFnJiYyNCE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHxjPT09YSkmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09XG5hKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gYmooYSxiKXtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJVbm1vdW50KXRyeXtNZi5vbkNvbW1pdEZpYmVyVW5tb3VudChMZixiKX1jYXRjaChmKXt9c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjphPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWEmJihhPWEubGFzdEVmZmVjdCxudWxsIT09YSkpe3ZhciBjPWE9YS5uZXh0O2Rve3ZhciBkPWMsZT1kLmRlc3Ryb3k7ZD1kLnRhZztpZih2b2lkIDAhPT1lKWlmKDAhPT0oZCY0KSlaaShiLGMpO2Vsc2V7ZD1iO3RyeXtlKCl9Y2F0Y2goZil7V2koZCxmKX19Yz1jLm5leHR9d2hpbGUoYyE9PWEpfWJyZWFrO2Nhc2UgMTpWaShiKTthPWIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXthLnByb3BzPWIubWVtb2l6ZWRQcm9wcyxhLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxhLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goZil7V2koYixcbmYpfWJyZWFrO2Nhc2UgNTpWaShiKTticmVhaztjYXNlIDQ6Y2ooYSxiKX19ZnVuY3Rpb24gZGooYSl7YS5hbHRlcm5hdGU9bnVsbDthLmNoaWxkPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmZpcnN0RWZmZWN0PW51bGw7YS5sYXN0RWZmZWN0PW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLnJldHVybj1udWxsO2EudXBkYXRlUXVldWU9bnVsbH1mdW5jdGlvbiBlaihhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIGZqKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKGVqKGIpKWJyZWFrIGE7Yj1iLnJldHVybn10aHJvdyBFcnJvcih5KDE2MCkpO312YXIgYz1iO2I9Yy5zdGF0ZU5vZGU7c3dpdGNoKGMudGFnKXtjYXNlIDU6dmFyIGQ9ITE7YnJlYWs7Y2FzZSAzOmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDE2MSkpO31jLmZsYWdzJjE2JiYocGIoYixcIlwiKSxjLmZsYWdzJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8ZWooYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5mbGFncyYyKWNvbnRpbnVlIGI7aWYobnVsbD09PVxuYy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZmxhZ3MmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19ZD9naihhLGMsYik6aGooYSxjLGIpfVxuZnVuY3Rpb24gZ2ooYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPWpmKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGdqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspZ2ooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gaGooYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihoaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KWhqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIGNqKGEsYil7Zm9yKHZhciBjPWIsZD0hMSxlLGY7Oyl7aWYoIWQpe2Q9Yy5yZXR1cm47YTpmb3IoOzspe2lmKG51bGw9PT1kKXRocm93IEVycm9yKHkoMTYwKSk7ZT1kLnN0YXRlTm9kZTtzd2l0Y2goZC50YWcpe2Nhc2UgNTpmPSExO2JyZWFrIGE7Y2FzZSAzOmU9ZS5jb250YWluZXJJbmZvO2Y9ITA7YnJlYWsgYTtjYXNlIDQ6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhfWQ9ZC5yZXR1cm59ZD0hMH1pZig1PT09Yy50YWd8fDY9PT1jLnRhZyl7YTpmb3IodmFyIGc9YSxoPWMsaz1oOzspaWYoYmooZyxrKSxudWxsIT09ay5jaGlsZCYmNCE9PWsudGFnKWsuY2hpbGQucmV0dXJuPWssaz1rLmNoaWxkO2Vsc2V7aWYoaz09PWgpYnJlYWsgYTtmb3IoO251bGw9PT1rLnNpYmxpbmc7KXtpZihudWxsPT09ay5yZXR1cm58fGsucmV0dXJuPT09aClicmVhayBhO2s9ay5yZXR1cm59ay5zaWJsaW5nLnJldHVybj1rLnJldHVybjtrPWsuc2libGluZ31mPyhnPWUsaD1jLnN0YXRlTm9kZSxcbjg9PT1nLm5vZGVUeXBlP2cucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChoKTpnLnJlbW92ZUNoaWxkKGgpKTplLnJlbW92ZUNoaWxkKGMuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1jLnRhZyl7aWYobnVsbCE9PWMuY2hpbGQpe2U9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztmPSEwO2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKGJqKGEsYyksbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJuOzQ9PT1jLnRhZyYmKGQ9ITEpfWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gaWooYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOnZhciBjPWIudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG8gMz09PShkLnRhZyYzKSYmKGE9ZC5kZXN0cm95LGQuZGVzdHJveT12b2lkIDAsdm9pZCAwIT09YSYmYSgpKSxkPWQubmV4dDt3aGlsZShkIT09Yyl9cmV0dXJuO2Nhc2UgMTpyZXR1cm47Y2FzZSA1OmM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7ZD1iLm1lbW9pemVkUHJvcHM7dmFyIGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbeGZdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJiRhKGMsZCk7d2IoYSxlKTtiPXdiKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPVxuMil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP3RiKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9vYihjLGgpOlwiY2hpbGRyZW5cIj09PWc/cGIoYyxoKTpxYShjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6YWIoYyxkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihjLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGY9ZC52YWx1ZSxudWxsIT1mP2ZiKGMsISFkLm11bHRpcGxlLGYsITEpOmEhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9mYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6ZmIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1yZXR1cm47Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2MikpO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1cbmIubWVtb2l6ZWRQcm9wcztyZXR1cm47Y2FzZSAzOmM9Yi5zdGF0ZU5vZGU7Yy5oeWRyYXRlJiYoYy5oeWRyYXRlPSExLENjKGMuY29udGFpbmVySW5mbykpO3JldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGwhPT1iLm1lbW9pemVkU3RhdGUmJihqaj1PKCksYWooYi5jaGlsZCwhMCkpO2tqKGIpO3JldHVybjtjYXNlIDE5OmtqKGIpO3JldHVybjtjYXNlIDE3OnJldHVybjtjYXNlIDIzOmNhc2UgMjQ6YWooYixudWxsIT09Yi5tZW1vaXplZFN0YXRlKTtyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9ZnVuY3Rpb24ga2ooYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgVWkpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1sai5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbmZ1bmN0aW9uIG1qKGEsYil7cmV0dXJuIG51bGwhPT1hJiYoYT1hLm1lbW9pemVkU3RhdGUsbnVsbD09PWF8fG51bGwhPT1hLmRlaHlkcmF0ZWQpPyhiPWIubWVtb2l6ZWRTdGF0ZSxudWxsIT09YiYmbnVsbD09PWIuZGVoeWRyYXRlZCk6ITF9dmFyIG5qPU1hdGguY2VpbCxvaj1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHBqPXJhLlJlYWN0Q3VycmVudE93bmVyLFg9MCxVPW51bGwsWT1udWxsLFc9MCxxaj0wLHJqPUJmKDApLFY9MCxzaj1udWxsLHRqPTAsRGc9MCxIaT0wLHVqPTAsdmo9bnVsbCxqaj0wLEppPUluZmluaXR5O2Z1bmN0aW9uIHdqKCl7Smk9TygpKzUwMH12YXIgWj1udWxsLFFpPSExLFJpPW51bGwsVGk9bnVsbCx4aj0hMSx5aj1udWxsLHpqPTkwLEFqPVtdLEJqPVtdLENqPW51bGwsRGo9MCxFaj1udWxsLEZqPS0xLEdqPTAsSGo9MCxJaj1udWxsLEpqPSExO2Z1bmN0aW9uIEhnKCl7cmV0dXJuIDAhPT0oWCY0OCk/TygpOi0xIT09Rmo/Rmo6Rmo9TygpfVxuZnVuY3Rpb24gSWcoYSl7YT1hLm1vZGU7aWYoMD09PShhJjIpKXJldHVybiAxO2lmKDA9PT0oYSY0KSlyZXR1cm4gOTk9PT1lZygpPzE6MjswPT09R2omJihHaj10aik7aWYoMCE9PWtnLnRyYW5zaXRpb24pezAhPT1IaiYmKEhqPW51bGwhPT12aj92ai5wZW5kaW5nTGFuZXM6MCk7YT1Hajt2YXIgYj00MTg2MTEyJn5IajtiJj0tYjswPT09YiYmKGE9NDE4NjExMiZ+YSxiPWEmLWEsMD09PWImJihiPTgxOTIpKTtyZXR1cm4gYn1hPWVnKCk7MCE9PShYJjQpJiY5OD09PWE/YT1YYygxMixHaik6KGE9U2MoYSksYT1YYyhhLEdqKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBKZyhhLGIsYyl7aWYoNTA8RGopdGhyb3cgRGo9MCxFaj1udWxsLEVycm9yKHkoMTg1KSk7YT1LaihhLGIpO2lmKG51bGw9PT1hKXJldHVybiBudWxsOyRjKGEsYixjKTthPT09VSYmKEhpfD1iLDQ9PT1WJiZJaShhLFcpKTt2YXIgZD1lZygpOzE9PT1iPzAhPT0oWCY4KSYmMD09PShYJjQ4KT9MaihhKTooTWooYSxjKSwwPT09WCYmKHdqKCksaWcoKSkpOigwPT09KFgmNCl8fDk4IT09ZCYmOTkhPT1kfHwobnVsbD09PUNqP0NqPW5ldyBTZXQoW2FdKTpDai5hZGQoYSkpLE1qKGEsYykpO3ZqPWF9ZnVuY3Rpb24gS2ooYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7Yz1hO2ZvcihhPWEucmV0dXJuO251bGwhPT1hOylhLmNoaWxkTGFuZXN8PWIsYz1hLmFsdGVybmF0ZSxudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9YiksYz1hLGE9YS5yZXR1cm47cmV0dXJuIDM9PT1jLnRhZz9jLnN0YXRlTm9kZTpudWxsfVxuZnVuY3Rpb24gTWooYSxiKXtmb3IodmFyIGM9YS5jYWxsYmFja05vZGUsZD1hLnN1c3BlbmRlZExhbmVzLGU9YS5waW5nZWRMYW5lcyxmPWEuZXhwaXJhdGlvblRpbWVzLGc9YS5wZW5kaW5nTGFuZXM7MDxnOyl7dmFyIGg9MzEtVmMoZyksaz0xPDxoLGw9ZltoXTtpZigtMT09PWwpe2lmKDA9PT0oayZkKXx8MCE9PShrJmUpKXtsPWI7UmMoayk7dmFyIG49RjtmW2hdPTEwPD1uP2wrMjUwOjY8PW4/bCs1RTM6LTF9fWVsc2UgbDw9YiYmKGEuZXhwaXJlZExhbmVzfD1rKTtnJj1+a31kPVVjKGEsYT09PVU/VzowKTtiPUY7aWYoMD09PWQpbnVsbCE9PWMmJihjIT09WmYmJlBmKGMpLGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja1ByaW9yaXR5PTApO2Vsc2V7aWYobnVsbCE9PWMpe2lmKGEuY2FsbGJhY2tQcmlvcml0eT09PWIpcmV0dXJuO2MhPT1aZiYmUGYoYyl9MTU9PT1iPyhjPUxqLmJpbmQobnVsbCxhKSxudWxsPT09YWc/KGFnPVtjXSxiZz1PZihVZixqZykpOmFnLnB1c2goYyksXG5jPVpmKToxND09PWI/Yz1oZyg5OSxMai5iaW5kKG51bGwsYSkpOihjPVRjKGIpLGM9aGcoYyxOai5iaW5kKG51bGwsYSkpKTthLmNhbGxiYWNrUHJpb3JpdHk9YjthLmNhbGxiYWNrTm9kZT1jfX1cbmZ1bmN0aW9uIE5qKGEpe0ZqPS0xO0hqPUdqPTA7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO3ZhciBiPWEuY2FsbGJhY2tOb2RlO2lmKE9qKCkmJmEuY2FsbGJhY2tOb2RlIT09YilyZXR1cm4gbnVsbDt2YXIgYz1VYyhhLGE9PT1VP1c6MCk7aWYoMD09PWMpcmV0dXJuIG51bGw7dmFyIGQ9Yzt2YXIgZT1YO1h8PTE2O3ZhciBmPVBqKCk7aWYoVSE9PWF8fFchPT1kKXdqKCksUWooYSxkKTtkbyB0cnl7UmooKTticmVha31jYXRjaChoKXtTaihhLGgpfXdoaWxlKDEpO3FnKCk7b2ouY3VycmVudD1mO1g9ZTtudWxsIT09WT9kPTA6KFU9bnVsbCxXPTAsZD1WKTtpZigwIT09KHRqJkhpKSlRaihhLDApO2Vsc2UgaWYoMCE9PWQpezI9PT1kJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGM9V2MoYSksMCE9PWMmJihkPVRqKGEsYykpKTtpZigxPT09ZCl0aHJvdyBiPXNqLFFqKGEsMCksSWkoYSxjKSxNaihhLE8oKSksYjthLmZpbmlzaGVkV29yaz1cbmEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZExhbmVzPWM7c3dpdGNoKGQpe2Nhc2UgMDpjYXNlIDE6dGhyb3cgRXJyb3IoeSgzNDUpKTtjYXNlIDI6VWooYSk7YnJlYWs7Y2FzZSAzOklpKGEsYyk7aWYoKGMmNjI5MTQ1NjApPT09YyYmKGQ9amorNTAwLU8oKSwxMDxkKSl7aWYoMCE9PVVjKGEsMCkpYnJlYWs7ZT1hLnN1c3BlbmRlZExhbmVzO2lmKChlJmMpIT09Yyl7SGcoKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmU7YnJlYWt9YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxkKTticmVha31VaihhKTticmVhaztjYXNlIDQ6SWkoYSxjKTtpZigoYyY0MTg2MTEyKT09PWMpYnJlYWs7ZD1hLmV2ZW50VGltZXM7Zm9yKGU9LTE7MDxjOyl7dmFyIGc9MzEtVmMoYyk7Zj0xPDxnO2c9ZFtnXTtnPmUmJihlPWcpO2MmPX5mfWM9ZTtjPU8oKS1jO2M9KDEyMD5jPzEyMDo0ODA+Yz80ODA6MTA4MD5jPzEwODA6MTkyMD5jPzE5MjA6M0UzPmM/M0UzOjQzMjA+XG5jPzQzMjA6MTk2MCpuaihjLzE5NjApKS1jO2lmKDEwPGMpe2EudGltZW91dEhhbmRsZT1vZihVai5iaW5kKG51bGwsYSksYyk7YnJlYWt9VWooYSk7YnJlYWs7Y2FzZSA1OlVqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMjkpKTt9fU1qKGEsTygpKTtyZXR1cm4gYS5jYWxsYmFja05vZGU9PT1iP05qLmJpbmQobnVsbCxhKTpudWxsfWZ1bmN0aW9uIElpKGEsYil7YiY9fnVqO2ImPX5IaTthLnN1c3BlbmRlZExhbmVzfD1iO2EucGluZ2VkTGFuZXMmPX5iO2ZvcihhPWEuZXhwaXJhdGlvblRpbWVzOzA8Yjspe3ZhciBjPTMxLVZjKGIpLGQ9MTw8YzthW2NdPS0xO2ImPX5kfX1cbmZ1bmN0aW9uIExqKGEpe2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTtPaigpO2lmKGE9PT1VJiYwIT09KGEuZXhwaXJlZExhbmVzJlcpKXt2YXIgYj1XO3ZhciBjPVRqKGEsYik7MCE9PSh0aiZIaSkmJihiPVVjKGEsYiksYz1UaihhLGIpKX1lbHNlIGI9VWMoYSwwKSxjPVRqKGEsYik7MCE9PWEudGFnJiYyPT09YyYmKFh8PTY0LGEuaHlkcmF0ZSYmKGEuaHlkcmF0ZT0hMSxxZihhLmNvbnRhaW5lckluZm8pKSxiPVdjKGEpLDAhPT1iJiYoYz1UaihhLGIpKSk7aWYoMT09PWMpdGhyb3cgYz1zaixRaihhLDApLElpKGEsYiksTWooYSxPKCkpLGM7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9YjtVaihhKTtNaihhLE8oKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBWaigpe2lmKG51bGwhPT1Dail7dmFyIGE9Q2o7Q2o9bnVsbDthLmZvckVhY2goZnVuY3Rpb24oYSl7YS5leHBpcmVkTGFuZXN8PTI0JmEucGVuZGluZ0xhbmVzO01qKGEsTygpKX0pfWlnKCl9ZnVuY3Rpb24gV2ooYSxiKXt2YXIgYz1YO1h8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19ZnVuY3Rpb24gWGooYSxiKXt2YXIgYz1YO1gmPS0yO1h8PTg7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19ZnVuY3Rpb24gbmkoYSxiKXtJKHJqLHFqKTtxanw9Yjt0anw9Yn1mdW5jdGlvbiBLaSgpe3FqPXJqLmN1cnJlbnQ7SChyail9XG5mdW5jdGlvbiBRaihhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxwZihjKSk7aWYobnVsbCE9PVkpZm9yKGM9WS5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiZHZigpO2JyZWFrO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2JyZWFrO2Nhc2UgNTpoaChkKTticmVhaztjYXNlIDQ6ZmgoKTticmVhaztjYXNlIDEzOkgoUCk7YnJlYWs7Y2FzZSAxOTpIKFApO2JyZWFrO2Nhc2UgMTA6cmcoZCk7YnJlYWs7Y2FzZSAyMzpjYXNlIDI0OktpKCl9Yz1jLnJldHVybn1VPWE7WT1UZyhhLmN1cnJlbnQsbnVsbCk7Vz1xaj10aj1iO1Y9MDtzaj1udWxsO3VqPUhpPURnPTB9XG5mdW5jdGlvbiBTaihhLGIpe2Rve3ZhciBjPVk7dHJ5e3FnKCk7dmguY3VycmVudD1HaDtpZih5aCl7Zm9yKHZhciBkPVIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZDspe3ZhciBlPWQucXVldWU7bnVsbCE9PWUmJihlLnBlbmRpbmc9bnVsbCk7ZD1kLm5leHR9eWg9ITF9eGg9MDtUPVM9Uj1udWxsO3poPSExO3BqLmN1cnJlbnQ9bnVsbDtpZihudWxsPT09Y3x8bnVsbD09PWMucmV0dXJuKXtWPTE7c2o9YjtZPW51bGw7YnJlYWt9YTp7dmFyIGY9YSxnPWMucmV0dXJuLGg9YyxrPWI7Yj1XO2guZmxhZ3N8PTIwNDg7aC5maXJzdEVmZmVjdD1oLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09ayYmXCJvYmplY3RcIj09PXR5cGVvZiBrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay50aGVuKXt2YXIgbD1rO2lmKDA9PT0oaC5tb2RlJjIpKXt2YXIgbj1oLmFsdGVybmF0ZTtuPyhoLnVwZGF0ZVF1ZXVlPW4udXBkYXRlUXVldWUsaC5tZW1vaXplZFN0YXRlPW4ubWVtb2l6ZWRTdGF0ZSxoLmxhbmVzPW4ubGFuZXMpOlxuKGgudXBkYXRlUXVldWU9bnVsbCxoLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIEE9MCE9PShQLmN1cnJlbnQmMSkscD1nO2Rve3ZhciBDO2lmKEM9MTM9PT1wLnRhZyl7dmFyIHg9cC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT14KUM9bnVsbCE9PXguZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciB3PXAubWVtb2l6ZWRQcm9wcztDPXZvaWQgMD09PXcuZmFsbGJhY2s/ITE6ITAhPT13LnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOkE/ITE6ITB9fWlmKEMpe3ZhciB6PXAudXBkYXRlUXVldWU7aWYobnVsbD09PXope3ZhciB1PW5ldyBTZXQ7dS5hZGQobCk7cC51cGRhdGVRdWV1ZT11fWVsc2Ugei5hZGQobCk7aWYoMD09PShwLm1vZGUmMikpe3AuZmxhZ3N8PTY0O2guZmxhZ3N8PTE2Mzg0O2guZmxhZ3MmPS0yOTgxO2lmKDE9PT1oLnRhZylpZihudWxsPT09aC5hbHRlcm5hdGUpaC50YWc9MTc7ZWxzZXt2YXIgdD16ZygtMSwxKTt0LnRhZz0yO0FnKGgsdCl9aC5sYW5lc3w9MTticmVhayBhfWs9XG52b2lkIDA7aD1iO3ZhciBxPWYucGluZ0NhY2hlO251bGw9PT1xPyhxPWYucGluZ0NhY2hlPW5ldyBPaSxrPW5ldyBTZXQscS5zZXQobCxrKSk6KGs9cS5nZXQobCksdm9pZCAwPT09ayYmKGs9bmV3IFNldCxxLnNldChsLGspKSk7aWYoIWsuaGFzKGgpKXtrLmFkZChoKTt2YXIgdj1Zai5iaW5kKG51bGwsZixsLGgpO2wudGhlbih2LHYpfXAuZmxhZ3N8PTQwOTY7cC5sYW5lcz1iO2JyZWFrIGF9cD1wLnJldHVybn13aGlsZShudWxsIT09cCk7az1FcnJvcigoUmEoaC50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiKX01IT09ViYmKFY9Mik7az1NaShrLGgpO3A9XG5nO2Rve3N3aXRjaChwLnRhZyl7Y2FzZSAzOmY9aztwLmZsYWdzfD00MDk2O2ImPS1iO3AubGFuZXN8PWI7dmFyIEo9UGkocCxmLGIpO0JnKHAsSik7YnJlYWsgYTtjYXNlIDE6Zj1rO3ZhciBLPXAudHlwZSxRPXAuc3RhdGVOb2RlO2lmKDA9PT0ocC5mbGFncyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgSy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1RJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgUS5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhRKSkpKXtwLmZsYWdzfD00MDk2O2ImPS1iO3AubGFuZXN8PWI7dmFyIEw9U2kocCxmLGIpO0JnKHAsTCk7YnJlYWsgYX19cD1wLnJldHVybn13aGlsZShudWxsIT09cCl9WmooYyl9Y2F0Y2godmEpe2I9dmE7WT09PWMmJm51bGwhPT1jJiYoWT1jPWMucmV0dXJuKTtjb250aW51ZX1icmVha313aGlsZSgxKX1cbmZ1bmN0aW9uIFBqKCl7dmFyIGE9b2ouY3VycmVudDtvai5jdXJyZW50PUdoO3JldHVybiBudWxsPT09YT9HaDphfWZ1bmN0aW9uIFRqKGEsYil7dmFyIGM9WDtYfD0xNjt2YXIgZD1QaigpO1U9PT1hJiZXPT09Ynx8UWooYSxiKTtkbyB0cnl7YWsoKTticmVha31jYXRjaChlKXtTaihhLGUpfXdoaWxlKDEpO3FnKCk7WD1jO29qLmN1cnJlbnQ9ZDtpZihudWxsIT09WSl0aHJvdyBFcnJvcih5KDI2MSkpO1U9bnVsbDtXPTA7cmV0dXJuIFZ9ZnVuY3Rpb24gYWsoKXtmb3IoO251bGwhPT1ZOyliayhZKX1mdW5jdGlvbiBSaigpe2Zvcig7bnVsbCE9PVkmJiFRZigpOyliayhZKX1mdW5jdGlvbiBiayhhKXt2YXIgYj1jayhhLmFsdGVybmF0ZSxhLHFqKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWI/WmooYSk6WT1iO3BqLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIFpqKGEpe3ZhciBiPWE7ZG97dmFyIGM9Yi5hbHRlcm5hdGU7YT1iLnJldHVybjtpZigwPT09KGIuZmxhZ3MmMjA0OCkpe2M9R2koYyxiLHFqKTtpZihudWxsIT09Yyl7WT1jO3JldHVybn1jPWI7aWYoMjQhPT1jLnRhZyYmMjMhPT1jLnRhZ3x8bnVsbD09PWMubWVtb2l6ZWRTdGF0ZXx8MCE9PShxaiYxMDczNzQxODI0KXx8MD09PShjLm1vZGUmNCkpe2Zvcih2YXIgZD0wLGU9Yy5jaGlsZDtudWxsIT09ZTspZHw9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZT1lLnNpYmxpbmc7Yy5jaGlsZExhbmVzPWR9bnVsbCE9PWEmJjA9PT0oYS5mbGFncyYyMDQ4KSYmKG51bGw9PT1hLmZpcnN0RWZmZWN0JiYoYS5maXJzdEVmZmVjdD1iLmZpcnN0RWZmZWN0KSxudWxsIT09Yi5sYXN0RWZmZWN0JiYobnVsbCE9PWEubGFzdEVmZmVjdCYmKGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLGEubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QpLDE8Yi5mbGFncyYmKG51bGwhPT1cbmEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iOmEuZmlyc3RFZmZlY3Q9YixhLmxhc3RFZmZlY3Q9YikpfWVsc2V7Yz1MaShiKTtpZihudWxsIT09Yyl7Yy5mbGFncyY9MjA0NztZPWM7cmV0dXJufW51bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmZsYWdzfD0yMDQ4KX1iPWIuc2libGluZztpZihudWxsIT09Yil7WT1iO3JldHVybn1ZPWI9YX13aGlsZShudWxsIT09Yik7MD09PVYmJihWPTUpfWZ1bmN0aW9uIFVqKGEpe3ZhciBiPWVnKCk7Z2coOTksZGsuYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gZGsoYSxiKXtkbyBPaigpO3doaWxlKG51bGwhPT15aik7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO3ZhciBjPWEuZmluaXNoZWRXb3JrO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcih5KDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7dmFyIGQ9Yy5sYW5lc3xjLmNoaWxkTGFuZXMsZT1kLGY9YS5wZW5kaW5nTGFuZXMmfmU7YS5wZW5kaW5nTGFuZXM9ZTthLnN1c3BlbmRlZExhbmVzPTA7YS5waW5nZWRMYW5lcz0wO2EuZXhwaXJlZExhbmVzJj1lO2EubXV0YWJsZVJlYWRMYW5lcyY9ZTthLmVudGFuZ2xlZExhbmVzJj1lO2U9YS5lbnRhbmdsZW1lbnRzO2Zvcih2YXIgZz1hLmV2ZW50VGltZXMsaD1hLmV4cGlyYXRpb25UaW1lczswPGY7KXt2YXIgaz0zMS1WYyhmKSxsPTE8PGs7ZVtrXT0wO2dba109LTE7aFtrXT0tMTtmJj1+bH1udWxsIT09XG5DaiYmMD09PShkJjI0KSYmQ2ouaGFzKGEpJiZDai5kZWxldGUoYSk7YT09PVUmJihZPVU9bnVsbCxXPTApOzE8Yy5mbGFncz9udWxsIT09Yy5sYXN0RWZmZWN0PyhjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGQ9Yy5maXJzdEVmZmVjdCk6ZD1jOmQ9Yy5maXJzdEVmZmVjdDtpZihudWxsIT09ZCl7ZT1YO1h8PTMyO3BqLmN1cnJlbnQ9bnVsbDtrZj1mZDtnPU5lKCk7aWYoT2UoZykpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGcpaD17c3RhcnQ6Zy5zZWxlY3Rpb25TdGFydCxlbmQ6Zy5zZWxlY3Rpb25FbmR9O2Vsc2UgYTppZihoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdywobD1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKSkmJjAhPT1sLnJhbmdlQ291bnQpe2g9bC5hbmNob3JOb2RlO2Y9bC5hbmNob3JPZmZzZXQ7az1sLmZvY3VzTm9kZTtsPWwuZm9jdXNPZmZzZXQ7dHJ5e2gubm9kZVR5cGUsay5ub2RlVHlwZX1jYXRjaCh2YSl7aD1udWxsO1xuYnJlYWsgYX12YXIgbj0wLEE9LTEscD0tMSxDPTAseD0wLHc9Zyx6PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgdTs7KXt3IT09aHx8MCE9PWYmJjMhPT13Lm5vZGVUeXBlfHwoQT1uK2YpO3chPT1rfHwwIT09bCYmMyE9PXcubm9kZVR5cGV8fChwPW4rbCk7Mz09PXcubm9kZVR5cGUmJihuKz13Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0odT13LmZpcnN0Q2hpbGQpKWJyZWFrO3o9dzt3PXV9Zm9yKDs7KXtpZih3PT09ZylicmVhayBiO3o9PT1oJiYrK0M9PT1mJiYoQT1uKTt6PT09ayYmKyt4PT09bCYmKHA9bik7aWYobnVsbCE9PSh1PXcubmV4dFNpYmxpbmcpKWJyZWFrO3c9ejt6PXcucGFyZW50Tm9kZX13PXV9aD0tMT09PUF8fC0xPT09cD9udWxsOntzdGFydDpBLGVuZDpwfX1lbHNlIGg9bnVsbDtoPWh8fHtzdGFydDowLGVuZDowfX1lbHNlIGg9bnVsbDtsZj17Zm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtmZD0hMTtJaj1udWxsO0pqPSExO1o9ZDtkbyB0cnl7ZWsoKX1jYXRjaCh2YSl7aWYobnVsbD09PVxuWil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtJaj1udWxsO1o9ZDtkbyB0cnl7Zm9yKGc9YTtudWxsIT09Wjspe3ZhciB0PVouZmxhZ3M7dCYxNiYmcGIoWi5zdGF0ZU5vZGUsXCJcIik7aWYodCYxMjgpe3ZhciBxPVouYWx0ZXJuYXRlO2lmKG51bGwhPT1xKXt2YXIgdj1xLnJlZjtudWxsIT09diYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB2P3YobnVsbCk6di5jdXJyZW50PW51bGwpfX1zd2l0Y2godCYxMDM4KXtjYXNlIDI6ZmooWik7Wi5mbGFncyY9LTM7YnJlYWs7Y2FzZSA2OmZqKFopO1ouZmxhZ3MmPS0zO2lqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgMTAyNDpaLmZsYWdzJj0tMTAyNTticmVhaztjYXNlIDEwMjg6Wi5mbGFncyY9LTEwMjU7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA0OmlqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgODpoPVo7Y2ooZyxoKTt2YXIgSj1oLmFsdGVybmF0ZTtkaihoKTtudWxsIT09XG5KJiZkaihKKX1aPVoubmV4dEVmZmVjdH19Y2F0Y2godmEpe2lmKG51bGw9PT1aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO3Y9bGY7cT1OZSgpO3Q9di5mb2N1c2VkRWxlbTtnPXYuc2VsZWN0aW9uUmFuZ2U7aWYocSE9PXQmJnQmJnQub3duZXJEb2N1bWVudCYmTWUodC5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCx0KSl7bnVsbCE9PWcmJk9lKHQpJiYocT1nLnN0YXJ0LHY9Zy5lbmQsdm9pZCAwPT09diYmKHY9cSksXCJzZWxlY3Rpb25TdGFydFwiaW4gdD8odC5zZWxlY3Rpb25TdGFydD1xLHQuc2VsZWN0aW9uRW5kPU1hdGgubWluKHYsdC52YWx1ZS5sZW5ndGgpKToodj0ocT10Lm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmcS5kZWZhdWx0Vmlld3x8d2luZG93LHYuZ2V0U2VsZWN0aW9uJiYodj12LmdldFNlbGVjdGlvbigpLGg9dC50ZXh0Q29udGVudC5sZW5ndGgsSj1NYXRoLm1pbihnLnN0YXJ0LGgpLGc9dm9pZCAwPT09XG5nLmVuZD9KOk1hdGgubWluKGcuZW5kLGgpLCF2LmV4dGVuZCYmSj5nJiYoaD1nLGc9SixKPWgpLGg9TGUodCxKKSxmPUxlKHQsZyksaCYmZiYmKDEhPT12LnJhbmdlQ291bnR8fHYuYW5jaG9yTm9kZSE9PWgubm9kZXx8di5hbmNob3JPZmZzZXQhPT1oLm9mZnNldHx8di5mb2N1c05vZGUhPT1mLm5vZGV8fHYuZm9jdXNPZmZzZXQhPT1mLm9mZnNldCkmJihxPXEuY3JlYXRlUmFuZ2UoKSxxLnNldFN0YXJ0KGgubm9kZSxoLm9mZnNldCksdi5yZW1vdmVBbGxSYW5nZXMoKSxKPmc/KHYuYWRkUmFuZ2UocSksdi5leHRlbmQoZi5ub2RlLGYub2Zmc2V0KSk6KHEuc2V0RW5kKGYubm9kZSxmLm9mZnNldCksdi5hZGRSYW5nZShxKSkpKSkpO3E9W107Zm9yKHY9dDt2PXYucGFyZW50Tm9kZTspMT09PXYubm9kZVR5cGUmJnEucHVzaCh7ZWxlbWVudDp2LGxlZnQ6di5zY3JvbGxMZWZ0LHRvcDp2LnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiB0LmZvY3VzJiZ0LmZvY3VzKCk7Zm9yKHQ9XG4wO3Q8cS5sZW5ndGg7dCsrKXY9cVt0XSx2LmVsZW1lbnQuc2Nyb2xsTGVmdD12LmxlZnQsdi5lbGVtZW50LnNjcm9sbFRvcD12LnRvcH1mZD0hIWtmO2xmPWtmPW51bGw7YS5jdXJyZW50PWM7Wj1kO2RvIHRyeXtmb3IodD1hO251bGwhPT1aOyl7dmFyIEs9Wi5mbGFncztLJjM2JiZZaSh0LFouYWx0ZXJuYXRlLFopO2lmKEsmMTI4KXtxPXZvaWQgMDt2YXIgUT1aLnJlZjtpZihudWxsIT09USl7dmFyIEw9Wi5zdGF0ZU5vZGU7c3dpdGNoKFoudGFnKXtjYXNlIDU6cT1MO2JyZWFrO2RlZmF1bHQ6cT1MfVwiZnVuY3Rpb25cIj09PXR5cGVvZiBRP1EocSk6US5jdXJyZW50PXF9fVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7Wj1udWxsOyRmKCk7WD1lfWVsc2UgYS5jdXJyZW50PWM7aWYoeGopeGo9ITEseWo9YSx6aj1iO2Vsc2UgZm9yKFo9ZDtudWxsIT09WjspYj1cbloubmV4dEVmZmVjdCxaLm5leHRFZmZlY3Q9bnVsbCxaLmZsYWdzJjgmJihLPVosSy5zaWJsaW5nPW51bGwsSy5zdGF0ZU5vZGU9bnVsbCksWj1iO2Q9YS5wZW5kaW5nTGFuZXM7MD09PWQmJihUaT1udWxsKTsxPT09ZD9hPT09RWo/RGorKzooRGo9MCxFaj1hKTpEaj0wO2M9Yy5zdGF0ZU5vZGU7aWYoTWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBNZi5vbkNvbW1pdEZpYmVyUm9vdCl0cnl7TWYub25Db21taXRGaWJlclJvb3QoTGYsYyx2b2lkIDAsNjQ9PT0oYy5jdXJyZW50LmZsYWdzJjY0KSl9Y2F0Y2godmEpe31NaihhLE8oKSk7aWYoUWkpdGhyb3cgUWk9ITEsYT1SaSxSaT1udWxsLGE7aWYoMCE9PShYJjgpKXJldHVybiBudWxsO2lnKCk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBlaygpe2Zvcig7bnVsbCE9PVo7KXt2YXIgYT1aLmFsdGVybmF0ZTtKanx8bnVsbD09PUlqfHwoMCE9PShaLmZsYWdzJjgpP2RjKFosSWopJiYoSmo9ITApOjEzPT09Wi50YWcmJm1qKGEsWikmJmRjKFosSWopJiYoSmo9ITApKTt2YXIgYj1aLmZsYWdzOzAhPT0oYiYyNTYpJiZYaShhLFopOzA9PT0oYiY1MTIpfHx4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKTtaPVoubmV4dEVmZmVjdH19ZnVuY3Rpb24gT2ooKXtpZig5MCE9PXpqKXt2YXIgYT05Nzx6aj85Nzp6ajt6aj05MDtyZXR1cm4gZ2coYSxmayl9cmV0dXJuITF9ZnVuY3Rpb24gJGkoYSxiKXtBai5wdXNoKGIsYSk7eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSl9ZnVuY3Rpb24gWmkoYSxiKXtCai5wdXNoKGIsYSk7eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSl9XG5mdW5jdGlvbiBmaygpe2lmKG51bGw9PT15ailyZXR1cm4hMTt2YXIgYT15ajt5aj1udWxsO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMzEpKTt2YXIgYj1YO1h8PTMyO3ZhciBjPUJqO0JqPVtdO2Zvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCs9Mil7dmFyIGU9Y1tkXSxmPWNbZCsxXSxnPWUuZGVzdHJveTtlLmRlc3Ryb3k9dm9pZCAwO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnKXRyeXtnKCl9Y2F0Y2goayl7aWYobnVsbD09PWYpdGhyb3cgRXJyb3IoeSgzMzApKTtXaShmLGspfX1jPUFqO0FqPVtdO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKz0yKXtlPWNbZF07Zj1jW2QrMV07dHJ5e3ZhciBoPWUuY3JlYXRlO2UuZGVzdHJveT1oKCl9Y2F0Y2goayl7aWYobnVsbD09PWYpdGhyb3cgRXJyb3IoeSgzMzApKTtXaShmLGspfX1mb3IoaD1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWg7KWE9aC5uZXh0RWZmZWN0LGgubmV4dEVmZmVjdD1udWxsLGguZmxhZ3MmOCYmKGguc2libGluZz1cbm51bGwsaC5zdGF0ZU5vZGU9bnVsbCksaD1hO1g9YjtpZygpO3JldHVybiEwfWZ1bmN0aW9uIGdrKGEsYixjKXtiPU1pKGMsYik7Yj1QaShhLGIsMSk7QWcoYSxiKTtiPUhnKCk7YT1LaihhLDEpO251bGwhPT1hJiYoJGMoYSwxLGIpLE1qKGEsYikpfVxuZnVuY3Rpb24gV2koYSxiKXtpZigzPT09YS50YWcpZ2soYSxhLGIpO2Vsc2UgZm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoMz09PWMudGFnKXtnayhjLGEsYik7YnJlYWt9ZWxzZSBpZigxPT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpe2E9TWkoYixhKTt2YXIgZT1TaShjLGEsMSk7QWcoYyxlKTtlPUhnKCk7Yz1LaihjLDEpO2lmKG51bGwhPT1jKSRjKGMsMSxlKSxNaihjLGUpO2Vsc2UgaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoZCkpKXRyeXtkLmNvbXBvbmVudERpZENhdGNoKGIsYSl9Y2F0Y2goZil7fWJyZWFrfX1jPWMucmV0dXJufX1cbmZ1bmN0aW9uIFlqKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7Yj1IZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmYztVPT09YSYmKFcmYyk9PT1jJiYoND09PVZ8fDM9PT1WJiYoVyY2MjkxNDU2MCk9PT1XJiY1MDA+TygpLWpqP1FqKGEsMCk6dWp8PWMpO01qKGEsYil9ZnVuY3Rpb24gbGooYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj0wOzA9PT1iJiYoYj1hLm1vZGUsMD09PShiJjIpP2I9MTowPT09KGImNCk/Yj05OT09PWVnKCk/MToyOigwPT09R2omJihHaj10aiksYj1ZYyg2MjkxNDU2MCZ+R2opLDA9PT1iJiYoYj00MTk0MzA0KSkpO2M9SGcoKTthPUtqKGEsYik7bnVsbCE9PWEmJigkYyhhLGIsYyksTWooYSxjKSl9dmFyIGNrO1xuY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWIubGFuZXM7aWYobnVsbCE9PWEpaWYoYS5tZW1vaXplZFByb3BzIT09Yi5wZW5kaW5nUHJvcHN8fE4uY3VycmVudCl1Zz0hMDtlbHNlIGlmKDAhPT0oYyZkKSl1Zz0wIT09KGEuZmxhZ3MmMTYzODQpPyEwOiExO2Vsc2V7dWc9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6cmkoYik7c2goKTticmVhaztjYXNlIDU6Z2goYik7YnJlYWs7Y2FzZSAxOkZmKGIudHlwZSkmJkpmKGIpO2JyZWFrO2Nhc2UgNDplaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6ZD1iLm1lbW9pemVkUHJvcHMudmFsdWU7dmFyIGU9Yi50eXBlLl9jb250ZXh0O0kobWcsZS5fY3VycmVudFZhbHVlKTtlLl9jdXJyZW50VmFsdWU9ZDticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2lmKDAhPT0oYyZiLmNoaWxkLmNoaWxkTGFuZXMpKXJldHVybiB0aShhLGIsYyk7SShQLFAuY3VycmVudCYxKTtiPWhpKGEsYixjKTtyZXR1cm4gbnVsbCE9PVxuYj9iLnNpYmxpbmc6bnVsbH1JKFAsUC5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD0wIT09KGMmYi5jaGlsZExhbmVzKTtpZigwIT09KGEuZmxhZ3MmNjQpKXtpZihkKXJldHVybiBBaShhLGIsYyk7Yi5mbGFnc3w9NjR9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsLGUubGFzdEVmZmVjdD1udWxsKTtJKFAsUC5jdXJyZW50KTtpZihkKWJyZWFrO2Vsc2UgcmV0dXJuIG51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBiLmxhbmVzPTAsbWkoYSxiLGMpfXJldHVybiBoaShhLGIsYyl9ZWxzZSB1Zz0hMTtiLmxhbmVzPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLnR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUVmKGIsTS5jdXJyZW50KTt0ZyhiLGMpO2U9Q2gobnVsbCxiLGQsYSxlLGMpO2IuZmxhZ3N8PTE7aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKEZmKGQpKXt2YXIgZj0hMDtKZihiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt4ZyhiKTt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmR2coYixkLGcsYSk7ZS51cGRhdGVyPUtnO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbHM9YjtPZyhiLGQsYSxjKTtiPXFpKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLGZpKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmU9Yi5lbGVtZW50VHlwZTthOntudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTtcbmE9Yi5wZW5kaW5nUHJvcHM7Zj1lLl9pbml0O2U9ZihlLl9wYXlsb2FkKTtiLnR5cGU9ZTtmPWIudGFnPWhrKGUpO2E9bGcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9bGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTpiPXBpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDExOmI9Z2kobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTQ6Yj1paShudWxsLGIsZSxsZyhlLnR5cGUsYSksZCxjKTticmVhayBhfXRocm93IEVycm9yKHkoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbGkoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSkscGkoYSxiLGQsZSxjKTtjYXNlIDM6cmkoYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1hfHxudWxsPT09ZCl0aHJvdyBFcnJvcih5KDI4MikpO1xuZD1iLnBlbmRpbmdQcm9wcztlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3lnKGEsYik7Q2coYixkLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlzaCgpLGI9aGkoYSxiLGMpO2Vsc2V7ZT1iLnN0YXRlTm9kZTtpZihmPWUuaHlkcmF0ZSlraD1yZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLGpoPWIsZj1saD0hMDtpZihmKXthPWUubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YTtpZihudWxsIT1hKWZvcihlPTA7ZTxhLmxlbmd0aDtlKz0yKWY9YVtlXSxmLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PWFbZSsxXSx0aC5wdXNoKGYpO2M9WmcoYixudWxsLGQsYyk7Zm9yKGIuY2hpbGQ9YztjOyljLmZsYWdzPWMuZmxhZ3MmLTN8MTAyNCxjPWMuc2libGluZ31lbHNlIGZpKGEsYixkLGMpLHNoKCk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gZ2goYiksbnVsbD09PWEmJlxucGgoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixuZihkLGUpP2c9bnVsbDpudWxsIT09ZiYmbmYoZCxmKSYmKGIuZmxhZ3N8PTE2KSxvaShhLGIpLGZpKGEsYixnLGMpLGIuY2hpbGQ7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmcGgoYiksbnVsbDtjYXNlIDEzOnJldHVybiB0aShhLGIsYyk7Y2FzZSA0OnJldHVybiBlaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1ZZyhiLG51bGwsZCxjKTpmaShhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksZ2koYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFxuYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO3ZhciBoPWIudHlwZS5fY29udGV4dDtJKG1nLGguX2N1cnJlbnRWYWx1ZSk7aC5fY3VycmVudFZhbHVlPWY7aWYobnVsbCE9PWcpaWYoaD1nLnZhbHVlLGY9SGUoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwLDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIU4uY3VycmVudCl7Yj1oaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09ayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1cbmsuZmlyc3RDb250ZXh0O251bGwhPT1sOyl7aWYobC5jb250ZXh0PT09ZCYmMCE9PShsLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYobD16ZygtMSxjJi1jKSxsLnRhZz0yLEFnKGgsbCkpO2gubGFuZXN8PWM7bD1oLmFsdGVybmF0ZTtudWxsIT09bCYmKGwubGFuZXN8PWMpO3NnKGgucmV0dXJuLGMpO2subGFuZXN8PWM7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9Z31maShhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbix0ZyhiLGMpLGU9dmcoZSxcbmYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5mbGFnc3w9MSxmaShhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9bGcoZSxiLnBlbmRpbmdQcm9wcyksZj1sZyhlLnR5cGUsZiksaWkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIGtpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpLGIudGFnPTEsRmYoZCk/KGE9ITAsSmYoYikpOmE9ITEsdGcoYixjKSxNZyhiLGQsZSksT2coYixkLGUsYykscWkobnVsbCxiLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiBBaShhLGIsYyk7Y2FzZSAyMzpyZXR1cm4gbWkoYSxiLGMpO2Nhc2UgMjQ6cmV0dXJuIG1pKGEsYixjKX10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO1xufTtmdW5jdGlvbiBpayhhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZmxhZ3M9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkTGFuZXM9dGhpcy5sYW5lcz0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gbmgoYSxiLGMsZCl7cmV0dXJuIG5ldyBpayhhLGIsYyxkKX1mdW5jdGlvbiBqaShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfVxuZnVuY3Rpb24gaGsoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGppKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1BYSlyZXR1cm4gMTE7aWYoYT09PURhKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFRnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9bmgoYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy50eXBlPWEudHlwZSxjLmZsYWdzPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzO2MubGFuZXM9YS5sYW5lcztjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2xhbmVzOmIubGFuZXMsZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0fTtcbmMuc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gVmcoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWppKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIHVhOnJldHVybiBYZyhjLmNoaWxkcmVuLGUsZixiKTtjYXNlIEhhOmc9ODtlfD0xNjticmVhaztjYXNlIHdhOmc9ODtlfD0xO2JyZWFrO2Nhc2UgeGE6cmV0dXJuIGE9bmgoMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT14YSxhLnR5cGU9eGEsYS5sYW5lcz1mLGE7Y2FzZSBCYTpyZXR1cm4gYT1uaCgxMyxjLGIsZSksYS50eXBlPUJhLGEuZWxlbWVudFR5cGU9QmEsYS5sYW5lcz1mLGE7Y2FzZSBDYTpyZXR1cm4gYT1uaCgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1DYSxhLmxhbmVzPWYsYTtjYXNlIElhOnJldHVybiB2aShjLGUsZixiKTtjYXNlIEphOnJldHVybiBhPW5oKDI0LGMsYixlKSxhLmVsZW1lbnRUeXBlPUphLGEubGFuZXM9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHlhOmc9MTA7YnJlYWsgYTtjYXNlIHphOmc9OTticmVhayBhO2Nhc2UgQWE6Zz0xMTticmVhayBhO2Nhc2UgRGE6Zz0xNDticmVhayBhO2Nhc2UgRWE6Zz0xNjtkPW51bGw7YnJlYWsgYTtjYXNlIEZhOmc9MjI7YnJlYWsgYX10aHJvdyBFcnJvcih5KDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPW5oKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmxhbmVzPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gWGcoYSxiLGMsZCl7YT1uaCg3LGEsZCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9ZnVuY3Rpb24gdmkoYSxiLGMsZCl7YT1uaCgyMyxhLGQsYik7YS5lbGVtZW50VHlwZT1JYTthLmxhbmVzPWM7cmV0dXJuIGF9ZnVuY3Rpb24gVWcoYSxiLGMpe2E9bmgoNixhLG51bGwsYik7YS5sYW5lcz1jO3JldHVybiBhfVxuZnVuY3Rpb24gV2coYSxiLGMpe2I9bmgoNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IubGFuZXM9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBqayhhLGIsYyl7dGhpcy50YWc9Yjt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLmZpbmlzaGVkV29yaz10aGlzLnBpbmdDYWNoZT10aGlzLmN1cnJlbnQ9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT0wO3RoaXMuZXZlbnRUaW1lcz1aYygwKTt0aGlzLmV4cGlyYXRpb25UaW1lcz1aYygtMSk7dGhpcy5lbnRhbmdsZWRMYW5lcz10aGlzLmZpbmlzaGVkTGFuZXM9dGhpcy5tdXRhYmxlUmVhZExhbmVzPXRoaXMuZXhwaXJlZExhbmVzPXRoaXMucGluZ2VkTGFuZXM9dGhpcy5zdXNwZW5kZWRMYW5lcz10aGlzLnBlbmRpbmdMYW5lcz0wO3RoaXMuZW50YW5nbGVtZW50cz1aYygwKTt0aGlzLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9bnVsbH1cbmZ1bmN0aW9uIGtrKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6dGEsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5mdW5jdGlvbiBsayhhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1IZygpLGc9SWcoZSk7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxzO2I6e2lmKFpiKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHkoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoRmYoaC50eXBlKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKTt0aHJvdyBFcnJvcih5KDE3MSkpO31pZigxPT09Yy50YWcpe3ZhciBrPWMudHlwZTtpZihGZihrKSl7Yz1JZihjLGssaCk7YnJlYWsgYX19Yz1ofWVsc2UgYz1DZjtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXpnKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09ZD9udWxsOmQ7bnVsbCE9PVxuZCYmKGIuY2FsbGJhY2s9ZCk7QWcoZSxiKTtKZyhlLGcsZik7cmV0dXJuIGd9ZnVuY3Rpb24gbWsoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBuayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkKXt2YXIgYz1hLnJldHJ5TGFuZTthLnJldHJ5TGFuZT0wIT09YyYmYzxiP2M6Yn19ZnVuY3Rpb24gb2soYSxiKXtuayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmbmsoYSxiKX1mdW5jdGlvbiBwaygpe3JldHVybiBudWxsfVxuZnVuY3Rpb24gcWsoYSxiLGMpe3ZhciBkPW51bGwhPWMmJm51bGwhPWMuaHlkcmF0aW9uT3B0aW9ucyYmYy5oeWRyYXRpb25PcHRpb25zLm11dGFibGVTb3VyY2VzfHxudWxsO2M9bmV3IGprKGEsYixudWxsIT1jJiYhMD09PWMuaHlkcmF0ZSk7Yj1uaCgzLG51bGwsbnVsbCwyPT09Yj83OjE9PT1iPzM6MCk7Yy5jdXJyZW50PWI7Yi5zdGF0ZU5vZGU9Yzt4ZyhiKTthW2ZmXT1jLmN1cnJlbnQ7Y2YoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO2lmKGQpZm9yKGE9MDthPGQubGVuZ3RoO2ErKyl7Yj1kW2FdO3ZhciBlPWIuX2dldFZlcnNpb247ZT1lKGIuX3NvdXJjZSk7bnVsbD09Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhP2MubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1bYixlXTpjLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEucHVzaChiLGUpfXRoaXMuX2ludGVybmFsUm9vdD1jfVxucWsucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXtsayhhLHRoaXMuX2ludGVybmFsUm9vdCxudWxsLG51bGwpfTtxay5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdCxiPWEuY29udGFpbmVySW5mbztsayhudWxsLGEsbnVsbCxmdW5jdGlvbigpe2JbZmZdPW51bGx9KX07ZnVuY3Rpb24gcmsoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfVxuZnVuY3Rpb24gc2soYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBxayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cbmZ1bmN0aW9uIHRrKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7aC5jYWxsKGEpfX1sayhiLGcsYSxlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPXNrKGMsZCk7Zz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBrPWU7ZT1mdW5jdGlvbigpe3ZhciBhPW1rKGcpO2suY2FsbChhKX19WGooZnVuY3Rpb24oKXtsayhiLGcsYSxlKX0pfXJldHVybiBtayhnKX1lYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNCxiKTtvayhhLDQpfX07ZmM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKTtKZyhhLDY3MTA4ODY0LGIpO29rKGEsNjcxMDg4NjQpfX07XG5nYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpLGM9SWcoYSk7SmcoYSxjLGIpO29rKGEsYyl9fTtoYz1mdW5jdGlvbihhLGIpe3JldHVybiBiKCl9O1xueWI9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjphYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9RGIoZCk7aWYoIWUpdGhyb3cgRXJyb3IoeSg5MCkpO1dhKGQpO2FiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmZmIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtHYj1XajtcbkhiPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9WDtYfD00O3RyeXtyZXR1cm4gZ2coOTgsYS5iaW5kKG51bGwsYixjLGQsZSkpfWZpbmFsbHl7WD1mLDA9PT1YJiYod2ooKSxpZygpKX19O0liPWZ1bmN0aW9uKCl7MD09PShYJjQ5KSYmKFZqKCksT2ooKSl9O0piPWZ1bmN0aW9uKGEsYil7dmFyIGM9WDtYfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fTtmdW5jdGlvbiB1ayhhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiBrayhhLGIsbnVsbCxjKX12YXIgdms9e0V2ZW50czpbQ2IsdWUsRGIsRWIsRmIsT2ose2N1cnJlbnQ6ITF9XX0sd2s9e2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTcuMC4xXCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifTtcbnZhciB4az17YnVuZGxlVHlwZTp3ay5idW5kbGVUeXBlLHZlcnNpb246d2sudmVyc2lvbixyZW5kZXJlclBhY2thZ2VOYW1lOndrLnJlbmRlcmVyUGFja2FnZU5hbWUscmVuZGVyZXJDb25maWc6d2sucmVuZGVyZXJDb25maWcsb3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsb3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzUmVuYW1lUGF0aDpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWNjKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp3ay5maW5kRmliZXJCeUhvc3RJbnN0YW5jZXx8XG5wayxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyl7dmFyIHlrPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZigheWsuaXNEaXNhYmxlZCYmeWsuc3VwcG9ydHNGaWJlcil0cnl7TGY9eWsuaW5qZWN0KHhrKSxNZj15a31jYXRjaChhKXt9fWV4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9dms7ZXhwb3J0cy5jcmVhdGVQb3J0YWw9dWs7XG5leHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbHM7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHkoMTg4KSk7dGhyb3cgRXJyb3IoeSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1jYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9O2V4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEsYil7dmFyIGM9WDtpZigwIT09KGMmNDgpKXJldHVybiBhKGIpO1h8PTE7dHJ5e2lmKGEpcmV0dXJuIGdnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1g9YyxpZygpfX07ZXhwb3J0cy5oeWRyYXRlPWZ1bmN0aW9uKGEsYixjKXtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4gdGsobnVsbCxhLGIsITAsYyl9O1xuZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMSxjKX07ZXhwb3J0cy51bm1vdW50Q29tcG9uZW50QXROb2RlPWZ1bmN0aW9uKGEpe2lmKCFyayhhKSl0aHJvdyBFcnJvcih5KDQwKSk7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oWGooZnVuY3Rpb24oKXt0ayhudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsO2FbZmZdPW51bGx9KX0pLCEwKTohMX07ZXhwb3J0cy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcz1XajtleHBvcnRzLnVuc3RhYmxlX2NyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3JldHVybiB1ayhhLGIsMjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGwpfTtcbmV4cG9ydHMudW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIXJrKGMpKXRocm93IEVycm9yKHkoMjAwKSk7aWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbHMpdGhyb3cgRXJyb3IoeSgzOCkpO3JldHVybiB0ayhhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMVxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBsPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49NjAxMDMscD02MDEwNjtleHBvcnRzLkZyYWdtZW50PTYwMTA3O2V4cG9ydHMuU3RyaWN0TW9kZT02MDEwODtleHBvcnRzLlByb2ZpbGVyPTYwMTE0O3ZhciBxPTYwMTA5LHI9NjAxMTAsdD02MDExMjtleHBvcnRzLlN1c3BlbnNlPTYwMTEzO3ZhciB1PTYwMTE1LHY9NjAxMTY7XG5pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgdz1TeW1ib2wuZm9yO249dyhcInJlYWN0LmVsZW1lbnRcIik7cD13KFwicmVhY3QucG9ydGFsXCIpO2V4cG9ydHMuRnJhZ21lbnQ9dyhcInJlYWN0LmZyYWdtZW50XCIpO2V4cG9ydHMuU3RyaWN0TW9kZT13KFwicmVhY3Quc3RyaWN0X21vZGVcIik7ZXhwb3J0cy5Qcm9maWxlcj13KFwicmVhY3QucHJvZmlsZXJcIik7cT13KFwicmVhY3QucHJvdmlkZXJcIik7cj13KFwicmVhY3QuY29udGV4dFwiKTt0PXcoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTtleHBvcnRzLlN1c3BlbnNlPXcoXCJyZWFjdC5zdXNwZW5zZVwiKTt1PXcoXCJyZWFjdC5tZW1vXCIpO3Y9dyhcInJlYWN0LmxhenlcIil9dmFyIHg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO1xuZnVuY3Rpb24geShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9eCYmYVt4XXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIHooYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgQT17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sQj17fTtmdW5jdGlvbiBDKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9Qy5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtDLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3Ioeig4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Qy5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBEKCl7fUQucHJvdG90eXBlPUMucHJvdG90eXBlO2Z1bmN0aW9uIEUoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Qjt0aGlzLnVwZGF0ZXI9Y3x8QX12YXIgRj1FLnByb3RvdHlwZT1uZXcgRDtGLmNvbnN0cnVjdG9yPUU7bChGLEMucHJvdG90eXBlKTtGLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBHPXtjdXJyZW50Om51bGx9LEg9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxJPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBKKGEsYixjKXt2YXIgZSxkPXt9LGs9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoaz1cIlwiK2Iua2V5KSxiKUguY2FsbChiLGUpJiYhSS5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGc9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1nKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zyl7Zm9yKHZhciBmPUFycmF5KGcpLG09MDttPGc7bSsrKWZbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1mfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGc9YS5kZWZhdWx0UHJvcHMsZyl2b2lkIDA9PT1kW2VdJiYoZFtlXT1nW2VdKTtyZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEsa2V5OmsscmVmOmgscHJvcHM6ZCxfb3duZXI6Ry5jdXJyZW50fX1cbmZ1bmN0aW9uIEsoYSxiKXtyZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIEwoYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PW59ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIithLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBNPS9cXC8rL2c7ZnVuY3Rpb24gTihhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShcIlwiK2Eua2V5KTpiLnRvU3RyaW5nKDM2KX1cbmZ1bmN0aW9uIE8oYSxiLGMsZSxkKXt2YXIgaz10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09a3x8XCJib29sZWFuXCI9PT1rKWE9bnVsbDt2YXIgaD0hMTtpZihudWxsPT09YSloPSEwO2Vsc2Ugc3dpdGNoKGspe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6aD0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgbjpjYXNlIHA6aD0hMH19aWYoaClyZXR1cm4gaD1hLGQ9ZChoKSxhPVwiXCI9PT1lP1wiLlwiK04oaCwwKTplLEFycmF5LmlzQXJyYXkoZCk/KGM9XCJcIixudWxsIT1hJiYoYz1hLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIiksTyhkLGIsYyxcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBhfSkpOm51bGwhPWQmJihMKGQpJiYoZD1LKGQsYysoIWQua2V5fHxoJiZoLmtleT09PWQua2V5P1wiXCI6KFwiXCIrZC5rZXkpLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIikrYSkpLGIucHVzaChkKSksMTtoPTA7ZT1cIlwiPT09ZT9cIi5cIjplK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBnPVxuMDtnPGEubGVuZ3RoO2crKyl7az1hW2ddO3ZhciBmPWUrTihrLGcpO2grPU8oayxiLGMsZixkKX1lbHNlIGlmKGY9eShhKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksZz0wOyEoaz1hLm5leHQoKSkuZG9uZTspaz1rLnZhbHVlLGY9ZStOKGssZysrKSxoKz1PKGssYixjLGYsZCk7ZWxzZSBpZihcIm9iamVjdFwiPT09ayl0aHJvdyBiPVwiXCIrYSxFcnJvcih6KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1iP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmIpKTtyZXR1cm4gaH1mdW5jdGlvbiBQKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBlPVtdLGQ9MDtPKGEsZSxcIlwiLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGIuY2FsbChjLGEsZCsrKX0pO3JldHVybiBlfVxuZnVuY3Rpb24gUShhKXtpZigtMT09PWEuX3N0YXR1cyl7dmFyIGI9YS5fcmVzdWx0O2I9YigpO2EuX3N0YXR1cz0wO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9aWYoMT09PWEuX3N0YXR1cylyZXR1cm4gYS5fcmVzdWx0O3Rocm93IGEuX3Jlc3VsdDt9dmFyIFI9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gUygpe3ZhciBhPVIuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcih6KDMyMSkpO3JldHVybiBhfXZhciBUPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlIsUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3RyYW5zaXRpb246MH0sUmVhY3RDdXJyZW50T3duZXI6RyxJc1NvbWVSZW5kZXJlckFjdGluZzp7Y3VycmVudDohMX0sYXNzaWduOmx9O1xuZXhwb3J0cy5DaGlsZHJlbj17bWFwOlAsZm9yRWFjaDpmdW5jdGlvbihhLGIsYyl7UChhLGZ1bmN0aW9uKCl7Yi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGMpfSxjb3VudDpmdW5jdGlvbihhKXt2YXIgYj0wO1AoYSxmdW5jdGlvbigpe2IrK30pO3JldHVybiBifSx0b0FycmF5OmZ1bmN0aW9uKGEpe3JldHVybiBQKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KXx8W119LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIUwoYSkpdGhyb3cgRXJyb3IoeigxNDMpKTtyZXR1cm4gYX19O2V4cG9ydHMuQ29tcG9uZW50PUM7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUU7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1UO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKHooMjY3LGEpKTt2YXIgZT1sKHt9LGEucHJvcHMpLGQ9YS5rZXksaz1hLnJlZixoPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZixoPUcuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZz1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihmIGluIGIpSC5jYWxsKGIsZikmJiFJLmhhc093blByb3BlcnR5KGYpJiYoZVtmXT12b2lkIDA9PT1iW2ZdJiZ2b2lkIDAhPT1nP2dbZl06YltmXSl9dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWUuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zz1BcnJheShmKTtmb3IodmFyIG09MDttPGY7bSsrKWdbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1nfXJldHVybnskJHR5cGVvZjpuLHR5cGU6YS50eXBlLFxua2V5OmQscmVmOmsscHJvcHM6ZSxfb3duZXI6aH19O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOnIsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjpxLF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1KO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1KLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07ZXhwb3J0cy5mb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp0LHJlbmRlcjphfX07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudD1MO1xuZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp2LF9wYXlsb2FkOntfc3RhdHVzOi0xLF9yZXN1bHQ6YX0sX2luaXQ6UX19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp1LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gUygpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gUygpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjFcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjIwLjFcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGs7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fVxuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHQ9bnVsbCx1PW51bGwsdz1mdW5jdGlvbigpe2lmKG51bGwhPT10KXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3QoITAsYSk7dD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodywwKSxiO319O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXQ/c2V0VGltZW91dChmLDAsYSk6KHQ9YSxzZXRUaW1lb3V0KHcsMCkpfTtnPWZ1bmN0aW9uKGEsYil7dT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodSl9O2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX07az1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB4PXdpbmRvdy5zZXRUaW1lb3V0LHk9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciB6PVxud2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIHomJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpfXZhciBBPSExLEI9bnVsbCxDPS0xLEQ9NSxFPTA7ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1cbkV9O2s9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOkQ9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBGPW5ldyBNZXNzYWdlQ2hhbm5lbCxHPUYucG9ydDI7Ri5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtpZihudWxsIT09Qil7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtFPWErRDt0cnl7QighMCxhKT9HLnBvc3RNZXNzYWdlKG51bGwpOihBPSExLEI9bnVsbCl9Y2F0Y2goYil7dGhyb3cgRy5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBBPSExfTtmPWZ1bmN0aW9uKGEpe0I9YTtBfHwoQT0hMCxHLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0M9XG54KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt5KEMpO0M9LTF9fWZ1bmN0aW9uIEgoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SShlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gSihhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gSyhhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5JKG4sYykpdm9pZCAwIT09ciYmMD5JKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5JKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBJKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBMPVtdLE09W10sTj0xLE89bnVsbCxQPTMsUT0hMSxSPSExLFM9ITE7XG5mdW5jdGlvbiBUKGEpe2Zvcih2YXIgYj1KKE0pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spSyhNKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKUsoTSksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxIKEwsYik7ZWxzZSBicmVhaztiPUooTSl9fWZ1bmN0aW9uIFUoYSl7Uz0hMTtUKGEpO2lmKCFSKWlmKG51bGwhPT1KKEwpKVI9ITAsZihWKTtlbHNle3ZhciBiPUooTSk7bnVsbCE9PWImJmcoVSxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBWKGEsYil7Uj0hMTtTJiYoUz0hMSxoKCkpO1E9ITA7dmFyIGM9UDt0cnl7VChiKTtmb3IoTz1KKEwpO251bGwhPT1PJiYoIShPLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZCgpKTspe3ZhciBkPU8uY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe08uY2FsbGJhY2s9bnVsbDtQPU8ucHJpb3JpdHlMZXZlbDt2YXIgZT1kKE8uZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9PLmNhbGxiYWNrPWU6Tz09PUooTCkmJksoTCk7VChiKX1lbHNlIEsoTCk7Tz1KKEwpfWlmKG51bGwhPT1PKXZhciBtPSEwO2Vsc2V7dmFyIG49SihNKTtudWxsIT09biYmZyhVLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtPPW51bGwsUD1jLFE9ITF9fXZhciBXPWs7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtcbmV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7Unx8UXx8KFI9ITAsZihWKSl9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUH07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBKKEwpfTtcbmV4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUCl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9UH12YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1A9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVc7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1QO1A9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1A9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDpOKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxIKE0sYSksbnVsbD09PUooTCkmJmE9PT1KKE0pJiYoUz9oKCk6Uz0hMCxnKFUsYy1kKSkpOihhLnNvcnRJbmRleD1lLEgoTCxhKSxSfHxRfHwoUj0hMCxmKFYpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7UD1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBoYXNoKHN0cikge1xuICB2YXIgaGFzaCA9IDUzODEsXG4gICAgICBpICAgID0gc3RyLmxlbmd0aDtcblxuICB3aGlsZShpKSB7XG4gICAgaGFzaCA9IChoYXNoICogMzMpIF4gc3RyLmNoYXJDb2RlQXQoLS1pKTtcbiAgfVxuXG4gIC8qIEphdmFTY3JpcHQgZG9lcyBiaXR3aXNlIG9wZXJhdGlvbnMgKGxpa2UgWE9SLCBhYm92ZSkgb24gMzItYml0IHNpZ25lZFxuICAgKiBpbnRlZ2Vycy4gU2luY2Ugd2Ugd2FudCB0aGUgcmVzdWx0cyB0byBiZSBhbHdheXMgcG9zaXRpdmUsIGNvbnZlcnQgdGhlXG4gICAqIHNpZ25lZCBpbnQgdG8gYW4gdW5zaWduZWQgYnkgZG9pbmcgYW4gdW5zaWduZWQgYml0c2hpZnQuICovXG4gIHJldHVybiBoYXNoID4+PiAwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2g7XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG5cdFx0cmV0dXJuIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0uZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMjRiYWI1ZDYzM2UzNmNhOGQxN2VkYzYzMTY0Y2Y5MzQuanBnXCI7IiwiaW1wb3J0IHN0cmluZ0hhc2ggZnJvbSAnc3RyaW5nLWhhc2gnO1xuaW1wb3J0IGFzYXAgZnJvbSAnYXNhcCc7XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG4gICAgdmFyIG93bktleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuXG4gICAgaWYgKHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBvd25LZXlzID0gb3duS2V5cy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwgc3ltKS5lbnVtZXJhYmxlO1xuICAgICAgfSkpO1xuICAgIH1cblxuICAgIG93bktleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTtcbn1cblxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIGFycjJbaV0gPSBhcnJbaV07XG5cbiAgICByZXR1cm4gYXJyMjtcbiAgfVxufVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSBcIltvYmplY3QgQXJndW1lbnRzXVwiKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2VcIik7XG59XG5cbi8qIEBmbG93ICovXG4vKiA6OlxudHlwZSBPYmplY3RNYXAgPSB7IFtpZDpzdHJpbmddOiBhbnkgfTtcbiovXG5cbnZhciBVUFBFUkNBU0VfUkUgPSAvKFtBLVpdKS9nO1xuXG52YXIgVVBQRVJDQVNFX1JFX1RPX0tFQkFCID0gZnVuY3Rpb24gVVBQRVJDQVNFX1JFX1RPX0tFQkFCKG1hdGNoXG4vKiA6IHN0cmluZyAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBcIi1cIi5jb25jYXQobWF0Y2gudG9Mb3dlckNhc2UoKSlcbiAgKTtcbn07XG5cbnZhciBrZWJhYmlmeVN0eWxlTmFtZSA9IGZ1bmN0aW9uIGtlYmFiaWZ5U3R5bGVOYW1lKHN0cmluZ1xuLyogOiBzdHJpbmcgKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIHZhciByZXN1bHQgPSBzdHJpbmcucmVwbGFjZShVUFBFUkNBU0VfUkUsIFVQUEVSQ0FTRV9SRV9UT19LRUJBQik7XG5cbiAgaWYgKHJlc3VsdFswXSA9PT0gJ20nICYmIHJlc3VsdFsxXSA9PT0gJ3MnICYmIHJlc3VsdFsyXSA9PT0gJy0nKSB7XG4gICAgcmV0dXJuIFwiLVwiLmNvbmNhdChyZXN1bHQpO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4vKipcbiAqIENTUyBwcm9wZXJ0aWVzIHdoaWNoIGFjY2VwdCBudW1iZXJzIGJ1dCBhcmUgbm90IGluIHVuaXRzIG9mIFwicHhcIi5cbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICovXG5cbnZhciBpc1VuaXRsZXNzTnVtYmVyID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogdHJ1ZSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IHRydWUsXG4gIGJvcmRlckltYWdlU2xpY2U6IHRydWUsXG4gIGJvcmRlckltYWdlV2lkdGg6IHRydWUsXG4gIGJveEZsZXg6IHRydWUsXG4gIGJveEZsZXhHcm91cDogdHJ1ZSxcbiAgYm94T3JkaW5hbEdyb3VwOiB0cnVlLFxuICBjb2x1bW5Db3VudDogdHJ1ZSxcbiAgZmxleDogdHJ1ZSxcbiAgZmxleEdyb3c6IHRydWUsXG4gIGZsZXhQb3NpdGl2ZTogdHJ1ZSxcbiAgZmxleFNocmluazogdHJ1ZSxcbiAgZmxleE5lZ2F0aXZlOiB0cnVlLFxuICBmbGV4T3JkZXI6IHRydWUsXG4gIGdyaWRSb3c6IHRydWUsXG4gIGdyaWRDb2x1bW46IHRydWUsXG4gIGZvbnRXZWlnaHQ6IHRydWUsXG4gIGxpbmVDbGFtcDogdHJ1ZSxcbiAgbGluZUhlaWdodDogdHJ1ZSxcbiAgb3BhY2l0eTogdHJ1ZSxcbiAgb3JkZXI6IHRydWUsXG4gIG9ycGhhbnM6IHRydWUsXG4gIHRhYlNpemU6IHRydWUsXG4gIHdpZG93czogdHJ1ZSxcbiAgekluZGV4OiB0cnVlLFxuICB6b29tOiB0cnVlLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiB0cnVlLFxuICBmbG9vZE9wYWNpdHk6IHRydWUsXG4gIHN0b3BPcGFjaXR5OiB0cnVlLFxuICBzdHJva2VEYXNoYXJyYXk6IHRydWUsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IHRydWUsXG4gIHN0cm9rZU1pdGVybGltaXQ6IHRydWUsXG4gIHN0cm9rZU9wYWNpdHk6IHRydWUsXG4gIHN0cm9rZVdpZHRoOiB0cnVlXG59O1xuLyoqXG4gKiBUYWtlbiBmcm9tIFJlYWN0J3MgQ1NTUHJvcGVydHkuanNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJlZml4IHZlbmRvci1zcGVjaWZpYyBwcmVmaXgsIGVnOiBXZWJraXRcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgc3R5bGUgbmFtZSwgZWc6IHRyYW5zaXRpb25EdXJhdGlvblxuICogQHJldHVybiB7c3RyaW5nfSBzdHlsZSBuYW1lIHByZWZpeGVkIHdpdGggYHByZWZpeGAsIHByb3Blcmx5IGNhbWVsQ2FzZWQsIGVnOlxuICogV2Via2l0VHJhbnNpdGlvbkR1cmF0aW9uXG4gKi9cblxuZnVuY3Rpb24gcHJlZml4S2V5KHByZWZpeCwga2V5KSB7XG4gIHJldHVybiBwcmVmaXggKyBrZXkuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBrZXkuc3Vic3RyaW5nKDEpO1xufVxuLyoqXG4gKiBTdXBwb3J0IHN0eWxlIG5hbWVzIHRoYXQgbWF5IGNvbWUgcGFzc2VkIGluIHByZWZpeGVkIGJ5IGFkZGluZyBwZXJtdXRhdGlvbnNcbiAqIG9mIHZlbmRvciBwcmVmaXhlcy5cbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICovXG5cblxudmFyIHByZWZpeGVzID0gWydXZWJraXQnLCAnbXMnLCAnTW96JywgJ08nXTsgLy8gVXNpbmcgT2JqZWN0LmtleXMgaGVyZSwgb3IgZWxzZSB0aGUgdmFuaWxsYSBmb3ItaW4gbG9vcCBtYWtlcyBJRTggZ28gaW50byBhblxuLy8gaW5maW5pdGUgbG9vcCwgYmVjYXVzZSBpdCBpdGVyYXRlcyBvdmVyIHRoZSBuZXdseSBhZGRlZCBwcm9wcyB0b28uXG4vLyBUYWtlbiBmcm9tIFJlYWN0J3MgQ1NTUHJvcGVydHkuanNcblxuT2JqZWN0LmtleXMoaXNVbml0bGVzc051bWJlcikuZm9yRWFjaChmdW5jdGlvbiAocHJvcCkge1xuICBwcmVmaXhlcy5mb3JFYWNoKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICBpc1VuaXRsZXNzTnVtYmVyW3ByZWZpeEtleShwcmVmaXgsIHByb3ApXSA9IGlzVW5pdGxlc3NOdW1iZXJbcHJvcF07XG4gIH0pO1xufSk7XG52YXIgc3RyaW5naWZ5VmFsdWUgPSBmdW5jdGlvbiBzdHJpbmdpZnlWYWx1ZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHByb3Bcbi8qIDogYW55ICovXG4pXG4vKiA6IHN0cmluZyAqL1xue1xuICBpZiAodHlwZW9mIHByb3AgPT09IFwibnVtYmVyXCIpIHtcbiAgICBpZiAoaXNVbml0bGVzc051bWJlcltrZXldKSB7XG4gICAgICByZXR1cm4gXCJcIiArIHByb3A7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBwcm9wICsgXCJweFwiO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gJycgKyBwcm9wO1xuICB9XG59O1xudmFyIHN0cmluZ2lmeUFuZEltcG9ydGFudGlmeVZhbHVlID0gZnVuY3Rpb24gc3RyaW5naWZ5QW5kSW1wb3J0YW50aWZ5VmFsdWUoa2V5XG4vKiA6IHN0cmluZyAqL1xuLCBwcm9wXG4vKiA6IGFueSAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBpbXBvcnRhbnRpZnkoc3RyaW5naWZ5VmFsdWUoa2V5LCBwcm9wKSlcbiAgKTtcbn07IC8vIFR1cm4gYSBzdHJpbmcgaW50byBhIGhhc2ggc3RyaW5nIG9mIGJhc2UtMzYgdmFsdWVzICh1c2luZyBsZXR0ZXJzIGFuZCBudW1iZXJzKVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5cbnZhciBoYXNoU3RyaW5nID0gZnVuY3Rpb24gaGFzaFN0cmluZyhzdHJpbmdcbi8qIDogc3RyaW5nICovXG4sIGtleVxuLyogOiA/c3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiBzdHJpbmcgKi9cbiAgICBzdHJpbmdIYXNoKHN0cmluZykudG9TdHJpbmcoMzYpXG4gICk7XG59OyAvLyBIYXNoIGEgamF2YXNjcmlwdCBvYmplY3QgdXNpbmcgSlNPTi5zdHJpbmdpZnkuIFRoaXMgaXMgdmVyeSBmYXN0LCBhYm91dCAzXG4vLyBtaWNyb3NlY29uZHMgb24gbXkgY29tcHV0ZXIgZm9yIGEgc2FtcGxlIG9iamVjdDpcbi8vIGh0dHA6Ly9qc3BlcmYuY29tL3Rlc3QtaGFzaGZudjMyYS1oYXNoLzVcbi8vXG4vLyBOb3RlIHRoYXQgdGhpcyB1c2VzIEpTT04uc3RyaW5naWZ5IHRvIHN0cmluZ2lmeSB0aGUgb2JqZWN0cyBzbyBpbiBvcmRlciBmb3Jcbi8vIHRoaXMgdG8gcHJvZHVjZSBjb25zaXN0ZW50IGhhc2hlcyBicm93c2VycyBuZWVkIHRvIGhhdmUgYSBjb25zaXN0ZW50XG4vLyBvcmRlcmluZyBvZiBvYmplY3RzLiBCZW4gQWxwZXJ0IHNheXMgdGhhdCBGYWNlYm9vayBkZXBlbmRzIG9uIHRoaXMsIHNvIHdlXG4vLyBjYW4gcHJvYmFibHkgZGVwZW5kIG9uIHRoaXMgdG9vLlxuXG52YXIgaGFzaE9iamVjdCA9IGZ1bmN0aW9uIGhhc2hPYmplY3Qob2JqZWN0XG4vKiA6IE9iamVjdE1hcCAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBoYXNoU3RyaW5nKEpTT04uc3RyaW5naWZ5KG9iamVjdCkpXG4gICk7XG59OyAvLyBHaXZlbiBhIHNpbmdsZSBzdHlsZSB2YWx1ZSBzdHJpbmcgbGlrZSB0aGUgXCJiXCIgZnJvbSBcImE6IGI7XCIsIGFkZHMgIWltcG9ydGFudFxuLy8gdG8gZ2VuZXJhdGUgXCJiICFpbXBvcnRhbnRcIi5cblxudmFyIGltcG9ydGFudGlmeSA9IGZ1bmN0aW9uIGltcG9ydGFudGlmeShzdHJpbmdcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiA6IHN0cmluZyAqL1xuICAgIC8vIEJyYWNrZXQgc3RyaW5nIGNoYXJhY3RlciBhY2Nlc3MgaXMgdmVyeSBmYXN0LCBhbmQgaW4gdGhlIGRlZmF1bHQgY2FzZSB3ZVxuICAgIC8vIG5vcm1hbGx5IGRvbid0IGV4cGVjdCB0aGVyZSB0byBiZSBcIiFpbXBvcnRhbnRcIiBhdCB0aGUgZW5kIG9mIHRoZSBzdHJpbmdcbiAgICAvLyBzbyB3ZSBjYW4gdXNlIHRoaXMgc2ltcGxlIGNoZWNrIHRvIHRha2UgYW4gb3B0aW1pemVkIHBhdGguIElmIHRoZXJlXG4gICAgLy8gaGFwcGVucyB0byBiZSBhIFwiIVwiIGluIHRoaXMgcG9zaXRpb24sIHdlIGZvbGxvdyB1cCB3aXRoIGEgbW9yZSB0aG9yb3VnaFxuICAgIC8vIGNoZWNrLlxuICAgIHN0cmluZ1tzdHJpbmcubGVuZ3RoIC0gMTBdID09PSAnIScgJiYgc3RyaW5nLnNsaWNlKC0xMSkgPT09ICcgIWltcG9ydGFudCcgPyBzdHJpbmcgOiBcIlwiLmNvbmNhdChzdHJpbmcsIFwiICFpbXBvcnRhbnRcIilcbiAgKTtcbn07XG5cbi8qIEBmbG93ICovXG52YXIgTUFQX0VYSVNUUyA9IHR5cGVvZiBNYXAgIT09ICd1bmRlZmluZWQnO1xuXG52YXIgT3JkZXJlZEVsZW1lbnRzID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgLyogOjpcbiAgZWxlbWVudHM6IHtbc3RyaW5nXTogYW55fTtcbiAga2V5T3JkZXI6IHN0cmluZ1tdO1xuICAqL1xuICBmdW5jdGlvbiBPcmRlcmVkRWxlbWVudHMoKSB7XG4gICAgdGhpcy5lbGVtZW50cyA9IHt9O1xuICAgIHRoaXMua2V5T3JkZXIgPSBbXTtcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBPcmRlcmVkRWxlbWVudHMucHJvdG90eXBlO1xuXG4gIF9wcm90by5mb3JFYWNoID0gZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja1xuICAvKiA6IChzdHJpbmcsIGFueSkgPT4gdm9pZCAqL1xuICApIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMua2V5T3JkZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgIC8vICh2YWx1ZSwga2V5KSB0byBtYXRjaCBNYXAncyBBUElcbiAgICAgIGNhbGxiYWNrKHRoaXMuZWxlbWVudHNbdGhpcy5rZXlPcmRlcltpXV0sIHRoaXMua2V5T3JkZXJbaV0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uc2V0ID0gZnVuY3Rpb24gc2V0KGtleVxuICAvKiA6IHN0cmluZyAqL1xuICAsIHZhbHVlXG4gIC8qIDogYW55ICovXG4gICwgc2hvdWxkUmVvcmRlclxuICAvKiA6ID9ib29sZWFuICovXG4gICkge1xuICAgIGlmICghdGhpcy5lbGVtZW50cy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICB0aGlzLmtleU9yZGVyLnB1c2goa2V5KTtcbiAgICB9IGVsc2UgaWYgKHNob3VsZFJlb3JkZXIpIHtcbiAgICAgIHZhciBpbmRleCA9IHRoaXMua2V5T3JkZXIuaW5kZXhPZihrZXkpO1xuICAgICAgdGhpcy5rZXlPcmRlci5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgdGhpcy5rZXlPcmRlci5wdXNoKGtleSk7XG4gICAgfVxuXG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IHZhbHVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChNQVBfRVhJU1RTICYmIHZhbHVlIGluc3RhbmNlb2YgTWFwIHx8IHZhbHVlIGluc3RhbmNlb2YgT3JkZXJlZEVsZW1lbnRzKSB7XG4gICAgICAvLyBXZSBoYXZlIGZvdW5kIGEgbmVzdGVkIE1hcCwgc28gd2UgbmVlZCB0byByZWN1cnNlIHNvIHRoYXQgYWxsXG4gICAgICAvLyBvZiB0aGUgbmVzdGVkIG9iamVjdHMgYW5kIE1hcHMgYXJlIG1lcmdlZCBwcm9wZXJseS5cbiAgICAgIHZhciBuZXN0ZWQgPSB0aGlzLmVsZW1lbnRzLmhhc093blByb3BlcnR5KGtleSkgPyB0aGlzLmVsZW1lbnRzW2tleV0gOiBuZXcgT3JkZXJlZEVsZW1lbnRzKCk7XG4gICAgICB2YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgICAgIG5lc3RlZC5zZXQoa2V5LCB2YWx1ZSwgc2hvdWxkUmVvcmRlcik7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IG5lc3RlZDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpICYmIF90eXBlb2YodmFsdWUpID09PSAnb2JqZWN0Jykge1xuICAgICAgLy8gV2UgaGF2ZSBmb3VuZCBhIG5lc3RlZCBvYmplY3QsIHNvIHdlIG5lZWQgdG8gcmVjdXJzZSBzbyB0aGF0IGFsbFxuICAgICAgLy8gb2YgdGhlIG5lc3RlZCBvYmplY3RzIGFuZCBNYXBzIGFyZSBtZXJnZWQgcHJvcGVybHkuXG4gICAgICB2YXIgX25lc3RlZCA9IHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KSA/IHRoaXMuZWxlbWVudHNba2V5XSA6IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcblxuICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBfbmVzdGVkLnNldChrZXlzW2ldLCB2YWx1ZVtrZXlzW2ldXSwgc2hvdWxkUmVvcmRlcik7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IF9uZXN0ZWQ7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5lbGVtZW50c1trZXldID0gdmFsdWU7XG4gIH07XG5cbiAgX3Byb3RvLmdldCA9IGZ1bmN0aW9uIGdldChrZXlcbiAgLyogOiBzdHJpbmcgKi9cbiAgKVxuICAvKiA6IGFueSAqL1xuICB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudHNba2V5XTtcbiAgfTtcblxuICBfcHJvdG8uaGFzID0gZnVuY3Rpb24gaGFzKGtleVxuICAvKiA6IHN0cmluZyAqL1xuICApXG4gIC8qIDogYm9vbGVhbiAqL1xuICB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KTtcbiAgfTtcblxuICBfcHJvdG8uYWRkU3R5bGVUeXBlID0gZnVuY3Rpb24gYWRkU3R5bGVUeXBlKHN0eWxlVHlwZVxuICAvKiA6IGFueSAqL1xuICApXG4gIC8qIDogdm9pZCAqL1xuICB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIGlmIChNQVBfRVhJU1RTICYmIHN0eWxlVHlwZSBpbnN0YW5jZW9mIE1hcCB8fCBzdHlsZVR5cGUgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgIHN0eWxlVHlwZS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgICAgIF90aGlzLnNldChrZXksIHZhbHVlLCB0cnVlKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHN0eWxlVHlwZSk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLnNldChrZXlzW2ldLCBzdHlsZVR5cGVba2V5c1tpXV0sIHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gT3JkZXJlZEVsZW1lbnRzO1xufSgpO1xuXG5mdW5jdGlvbiB1bndyYXBFeHBvcnRzICh4KSB7XG5cdHJldHVybiB4ICYmIHguX19lc01vZHVsZSAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoeCwgJ2RlZmF1bHQnKSA/IHguZGVmYXVsdCA6IHg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZuLCBtb2R1bGUpIHtcblx0cmV0dXJuIG1vZHVsZSA9IHsgZXhwb3J0czoge30gfSwgZm4obW9kdWxlLCBtb2R1bGUuZXhwb3J0cyksIG1vZHVsZS5leHBvcnRzO1xufVxuXG5mdW5jdGlvbiBnZXRDanNFeHBvcnRGcm9tTmFtZXNwYWNlIChuKSB7XG5cdHJldHVybiBuICYmIG4uZGVmYXVsdCB8fCBuO1xufVxuXG52YXIgY2FwaXRhbGl6ZVN0cmluZ18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2FwaXRhbGl6ZVN0cmluZztcbmZ1bmN0aW9uIGNhcGl0YWxpemVTdHJpbmcoc3RyKSB7XG4gIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG52YXIgcHJlZml4UHJvcGVydHlfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHByZWZpeFByb3BlcnR5O1xuXG5cblxudmFyIF9jYXBpdGFsaXplU3RyaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoY2FwaXRhbGl6ZVN0cmluZ18xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gcHJlZml4UHJvcGVydHkocHJlZml4UHJvcGVydGllcywgcHJvcGVydHksIHN0eWxlKSB7XG4gIGlmIChwcmVmaXhQcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHZhciBuZXdTdHlsZSA9IHt9O1xuICAgIHZhciByZXF1aXJlZFByZWZpeGVzID0gcHJlZml4UHJvcGVydGllc1twcm9wZXJ0eV07XG4gICAgdmFyIGNhcGl0YWxpemVkUHJvcGVydHkgPSAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KTtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHN0eWxlKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzdHlsZVByb3BlcnR5ID0ga2V5c1tpXTtcbiAgICAgIGlmIChzdHlsZVByb3BlcnR5ID09PSBwcm9wZXJ0eSkge1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHJlcXVpcmVkUHJlZml4ZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBuZXdTdHlsZVtyZXF1aXJlZFByZWZpeGVzW2pdICsgY2FwaXRhbGl6ZWRQcm9wZXJ0eV0gPSBzdHlsZVtwcm9wZXJ0eV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIG5ld1N0eWxlW3N0eWxlUHJvcGVydHldID0gc3R5bGVbc3R5bGVQcm9wZXJ0eV07XG4gICAgfVxuICAgIHJldHVybiBuZXdTdHlsZTtcbiAgfVxuICByZXR1cm4gc3R5bGU7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhwcmVmaXhQcm9wZXJ0eV8xKTtcblxudmFyIHByZWZpeFZhbHVlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBwcmVmaXhWYWx1ZTtcbmZ1bmN0aW9uIHByZWZpeFZhbHVlKHBsdWdpbnMsIHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIG1ldGFEYXRhKSB7XG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBwbHVnaW5zLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgdmFyIHByb2Nlc3NlZFZhbHVlID0gcGx1Z2luc1tpXShwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlLCBtZXRhRGF0YSk7XG5cbiAgICAvLyB3ZSBjYW4gc3RvcCBwcm9jZXNzaW5nIGlmIGEgdmFsdWUgaXMgcmV0dXJuZWRcbiAgICAvLyBhcyBhbGwgcGx1Z2luIGNyaXRlcmlhIGFyZSB1bmlxdWVcbiAgICBpZiAocHJvY2Vzc2VkVmFsdWUpIHtcbiAgICAgIHJldHVybiBwcm9jZXNzZWRWYWx1ZTtcbiAgICB9XG4gIH1cbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKHByZWZpeFZhbHVlXzEpO1xuXG52YXIgYWRkTmV3VmFsdWVzT25seV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYWRkTmV3VmFsdWVzT25seTtcbmZ1bmN0aW9uIGFkZElmTmV3KGxpc3QsIHZhbHVlKSB7XG4gIGlmIChsaXN0LmluZGV4T2YodmFsdWUpID09PSAtMSkge1xuICAgIGxpc3QucHVzaCh2YWx1ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkTmV3VmFsdWVzT25seShsaXN0LCB2YWx1ZXMpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzKSkge1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB2YWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgIGFkZElmTmV3KGxpc3QsIHZhbHVlc1tpXSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGFkZElmTmV3KGxpc3QsIHZhbHVlcyk7XG4gIH1cbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKGFkZE5ld1ZhbHVlc09ubHlfMSk7XG5cbnZhciBpc09iamVjdF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNPYmplY3Q7XG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBPYmplY3QgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxufSk7XG5cbnVud3JhcEV4cG9ydHMoaXNPYmplY3RfMSk7XG5cbnZhciBjcmVhdGVQcmVmaXhlcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlUHJlZml4ZXI7XG5cblxuXG52YXIgX3ByZWZpeFByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocHJlZml4UHJvcGVydHlfMSk7XG5cblxuXG52YXIgX3ByZWZpeFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocHJlZml4VmFsdWVfMSk7XG5cblxuXG52YXIgX2FkZE5ld1ZhbHVlc09ubHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChhZGROZXdWYWx1ZXNPbmx5XzEpO1xuXG5cblxudmFyIF9pc09iamVjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzT2JqZWN0XzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBjcmVhdGVQcmVmaXhlcihfcmVmKSB7XG4gIHZhciBwcmVmaXhNYXAgPSBfcmVmLnByZWZpeE1hcCxcbiAgICAgIHBsdWdpbnMgPSBfcmVmLnBsdWdpbnM7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHByZWZpeChzdHlsZSkge1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHN0eWxlKSB7XG4gICAgICB2YXIgdmFsdWUgPSBzdHlsZVtwcm9wZXJ0eV07XG5cbiAgICAgIC8vIGhhbmRsZSBuZXN0ZWQgb2JqZWN0c1xuICAgICAgaWYgKCgwLCBfaXNPYmplY3QyLmRlZmF1bHQpKHZhbHVlKSkge1xuICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBwcmVmaXgodmFsdWUpO1xuICAgICAgICAvLyBoYW5kbGUgYXJyYXkgdmFsdWVzXG4gICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHZhciBjb21iaW5lZFZhbHVlID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHZhbHVlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgdmFyIHByb2Nlc3NlZFZhbHVlID0gKDAsIF9wcmVmaXhWYWx1ZTIuZGVmYXVsdCkocGx1Z2lucywgcHJvcGVydHksIHZhbHVlW2ldLCBzdHlsZSwgcHJlZml4TWFwKTtcbiAgICAgICAgICAoMCwgX2FkZE5ld1ZhbHVlc09ubHkyLmRlZmF1bHQpKGNvbWJpbmVkVmFsdWUsIHByb2Nlc3NlZFZhbHVlIHx8IHZhbHVlW2ldKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG9ubHkgbW9kaWZ5IHRoZSB2YWx1ZSBpZiBpdCB3YXMgdG91Y2hlZFxuICAgICAgICAvLyBieSBhbnkgcGx1Z2luIHRvIHByZXZlbnQgdW5uZWNlc3NhcnkgbXV0YXRpb25zXG4gICAgICAgIGlmIChjb21iaW5lZFZhbHVlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBjb21iaW5lZFZhbHVlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgX3Byb2Nlc3NlZFZhbHVlID0gKDAsIF9wcmVmaXhWYWx1ZTIuZGVmYXVsdCkocGx1Z2lucywgcHJvcGVydHksIHZhbHVlLCBzdHlsZSwgcHJlZml4TWFwKTtcblxuICAgICAgICAvLyBvbmx5IG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgd2FzIHRvdWNoZWRcbiAgICAgICAgLy8gYnkgYW55IHBsdWdpbiB0byBwcmV2ZW50IHVubmVjZXNzYXJ5IG11dGF0aW9uc1xuICAgICAgICBpZiAoX3Byb2Nlc3NlZFZhbHVlKSB7XG4gICAgICAgICAgc3R5bGVbcHJvcGVydHldID0gX3Byb2Nlc3NlZFZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgc3R5bGUgPSAoMCwgX3ByZWZpeFByb3BlcnR5Mi5kZWZhdWx0KShwcmVmaXhNYXAsIHByb3BlcnR5LCBzdHlsZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0eWxlO1xuICB9O1xufVxufSk7XG5cbnZhciBjcmVhdGVQcmVmaXhlciA9IHVud3JhcEV4cG9ydHMoY3JlYXRlUHJlZml4ZXJfMSk7XG5cbnZhciBiYWNrZ3JvdW5kQ2xpcF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYmFja2dyb3VuZENsaXA7XG5cbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLWNsaXAjQnJvd3Nlcl9jb21wYXRpYmlsaXR5XG5mdW5jdGlvbiBiYWNrZ3JvdW5kQ2xpcChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWUgPT09ICd0ZXh0Jykge1xuICAgIHJldHVybiBbJy13ZWJraXQtdGV4dCcsICd0ZXh0J107XG4gIH1cbn1cbn0pO1xuXG52YXIgYmFja2dyb3VuZENsaXAgPSB1bndyYXBFeHBvcnRzKGJhY2tncm91bmRDbGlwXzEpO1xuXG52YXIgaXNQcmVmaXhlZFZhbHVlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpc1ByZWZpeGVkVmFsdWU7XG52YXIgcmVnZXggPSAvLXdlYmtpdC18LW1vei18LW1zLS87XG5cbmZ1bmN0aW9uIGlzUHJlZml4ZWRWYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiByZWdleC50ZXN0KHZhbHVlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xufSk7XG5cbnVud3JhcEV4cG9ydHMoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG52YXIgY2FsY18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2FsYztcblxuXG5cbnZhciBfaXNQcmVmaXhlZFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJy1tb3otJywgJyddO1xuZnVuY3Rpb24gY2FsYyhwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignY2FsYygnKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvY2FsY1xcKC9nLCBwcmVmaXggKyAnY2FsYygnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjYWxjID0gdW53cmFwRXhwb3J0cyhjYWxjXzEpO1xuXG52YXIgY3Jvc3NGYWRlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjcm9zc0ZhZGU7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNzZWFyY2g9Y3Jvc3MtZmFkZVxudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICcnXTtcbmZ1bmN0aW9uIGNyb3NzRmFkZShwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignY3Jvc3MtZmFkZSgnKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvY3Jvc3MtZmFkZVxcKC9nLCBwcmVmaXggKyAnY3Jvc3MtZmFkZSgnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjcm9zc0ZhZGUgPSB1bndyYXBFeHBvcnRzKGNyb3NzRmFkZV8xKTtcblxudmFyIGN1cnNvcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3Vyc29yO1xudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICctbW96LScsICcnXTtcblxudmFyIHZhbHVlcyA9IHtcbiAgJ3pvb20taW4nOiB0cnVlLFxuICAnem9vbS1vdXQnOiB0cnVlLFxuICBncmFiOiB0cnVlLFxuICBncmFiYmluZzogdHJ1ZVxufTtcblxuZnVuY3Rpb24gY3Vyc29yKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAocHJvcGVydHkgPT09ICdjdXJzb3InICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjdXJzb3IgPSB1bndyYXBFeHBvcnRzKGN1cnNvcl8xKTtcblxudmFyIGZpbHRlcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmlsdGVyO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIGh0dHA6Ly9jYW5pdXNlLmNvbS8jZmVhdD1jc3MtZmlsdGVyLWZ1bmN0aW9uXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJyddO1xuZnVuY3Rpb24gZmlsdGVyKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZS5pbmRleE9mKCdmaWx0ZXIoJykgPiAtMSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoL2ZpbHRlclxcKC9nLCBwcmVmaXggKyAnZmlsdGVyKCcpO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGZpbHRlciA9IHVud3JhcEV4cG9ydHMoZmlsdGVyXzEpO1xuXG52YXIgZmxleF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmxleDtcbnZhciB2YWx1ZXMgPSB7XG4gIGZsZXg6IFsnLXdlYmtpdC1ib3gnLCAnLW1vei1ib3gnLCAnLW1zLWZsZXhib3gnLCAnLXdlYmtpdC1mbGV4JywgJ2ZsZXgnXSxcbiAgJ2lubGluZS1mbGV4JzogWyctd2Via2l0LWlubGluZS1ib3gnLCAnLW1vei1pbmxpbmUtYm94JywgJy1tcy1pbmxpbmUtZmxleGJveCcsICctd2Via2l0LWlubGluZS1mbGV4JywgJ2lubGluZS1mbGV4J11cbn07XG5cbmZ1bmN0aW9uIGZsZXgocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2Rpc3BsYXknICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWVzW3ZhbHVlXTtcbiAgfVxufVxufSk7XG5cbnZhciBmbGV4ID0gdW53cmFwRXhwb3J0cyhmbGV4XzEpO1xuXG52YXIgZmxleGJveElFXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4Ym94SUU7XG52YXIgYWx0ZXJuYXRpdmVWYWx1ZXMgPSB7XG4gICdzcGFjZS1hcm91bmQnOiAnZGlzdHJpYnV0ZScsXG4gICdzcGFjZS1iZXR3ZWVuJzogJ2p1c3RpZnknLFxuICAnZmxleC1zdGFydCc6ICdzdGFydCcsXG4gICdmbGV4LWVuZCc6ICdlbmQnXG59O1xudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIGFsaWduQ29udGVudDogJ21zRmxleExpbmVQYWNrJyxcbiAgYWxpZ25TZWxmOiAnbXNGbGV4SXRlbUFsaWduJyxcbiAgYWxpZ25JdGVtczogJ21zRmxleEFsaWduJyxcbiAganVzdGlmeUNvbnRlbnQ6ICdtc0ZsZXhQYWNrJyxcbiAgb3JkZXI6ICdtc0ZsZXhPcmRlcicsXG4gIGZsZXhHcm93OiAnbXNGbGV4UG9zaXRpdmUnLFxuICBmbGV4U2hyaW5rOiAnbXNGbGV4TmVnYXRpdmUnLFxuICBmbGV4QmFzaXM6ICdtc0ZsZXhQcmVmZXJyZWRTaXplJ1xuICAvLyBGdWxsIGV4cGFuZGVkIHN5bnRheCBpcyBmbGV4LWdyb3cgfCBmbGV4LXNocmluayB8IGZsZXgtYmFzaXMuXG59O3ZhciBmbGV4U2hvcnRoYW5kTWFwcGluZ3MgPSB7XG4gIGF1dG86ICcxIDEgYXV0bycsXG4gIGluaGVyaXQ6ICdpbmhlcml0JyxcbiAgaW5pdGlhbDogJzAgMSBhdXRvJyxcbiAgbm9uZTogJzAgMCBhdXRvJyxcbiAgdW5zZXQ6ICd1bnNldCdcbn07XG52YXIgaXNVbml0bGVzc051bWJlciA9IC9eXFxkKyhcXC5cXGQrKT8kLztcblxuZnVuY3Rpb24gZmxleGJveElFKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhbHRlcm5hdGl2ZVByb3BzLCBwcm9wZXJ0eSkpIHtcbiAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BzW3Byb3BlcnR5XV0gPSBhbHRlcm5hdGl2ZVZhbHVlc1t2YWx1ZV0gfHwgdmFsdWU7XG4gIH1cbiAgaWYgKHByb3BlcnR5ID09PSAnZmxleCcpIHtcbiAgICAvLyBGb3IgY2VydGFpbiB2YWx1ZXMgd2UgY2FuIGRvIHN0cmFpZ2h0IG1hcHBpbmdzIGJhc2VkIG9uIHRoZSBzcGVjXG4gICAgLy8gZm9yIHRoZSBleHBhbnNpb25zLlxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZmxleFNob3J0aGFuZE1hcHBpbmdzLCB2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zRmxleCA9IGZsZXhTaG9ydGhhbmRNYXBwaW5nc1t2YWx1ZV07XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIEhlcmUgd2UgaGF2ZSBubyBkaXJlY3QgbWFwcGluZywgc28gd2UgZmF2b3IgbG9va2luZyBmb3IgYVxuICAgIC8vIHVuaXRsZXNzIHBvc2l0aXZlIG51bWJlciBhcyB0aGF0IHdpbGwgYmUgdGhlIG1vc3QgY29tbW9uIHVzZS1jYXNlLlxuICAgIGlmIChpc1VuaXRsZXNzTnVtYmVyLnRlc3QodmFsdWUpKSB7XG4gICAgICBzdHlsZS5tc0ZsZXggPSB2YWx1ZSArICcgMSAwJSc7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gVGhlIG5leHQgdGhpbmcgd2UgY2FuIGxvb2sgZm9yIGlzIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSB2YWx1ZXMuXG4gICAgdmFyIGZsZXhWYWx1ZXMgPSB2YWx1ZS5zcGxpdCgvXFxzLyk7XG4gICAgLy8gSWYgd2Ugb25seSBoYXZlIGEgc2luZ2xlIHZhbHVlIHRoYXQgd2Fzbid0IGEgcG9zaXRpdmUgdW5pdGxlc3NcbiAgICAvLyBvciBhIHByZS1tYXBwZWQgdmFsdWUsIHRoZW4gd2UgY2FuIGFzc3VtZSBpdCBpcyBhIHVuaXQgdmFsdWUuXG4gICAgc3dpdGNoIChmbGV4VmFsdWVzLmxlbmd0aCkge1xuICAgICAgY2FzZSAxOlxuICAgICAgICBzdHlsZS5tc0ZsZXggPSAnMSAxICcgKyB2YWx1ZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgY2FzZSAyOlxuICAgICAgICAvLyBJZiB3ZSBoYXZlIDIgdW5pdHMsIHRoZW4gd2UgZXhwZWN0IHRoYXQgdGhlIGZpcnN0IHdpbGxcbiAgICAgICAgLy8gYWx3YXlzIGJlIGEgdW5pdGxlc3MgbnVtYmVyIGFuZCByZXByZXNlbnRzIGZsZXgtZ3Jvdy5cbiAgICAgICAgLy8gVGhlIHNlY29uZCB1bml0IHdpbGwgcmVwcmVzZW50IGZsZXgtc2hyaW5rIGZvciBhIHVuaXRsZXNzXG4gICAgICAgIC8vIHZhbHVlLCBvciBmbGV4LWJhc2lzIG90aGVyd2lzZS5cbiAgICAgICAgaWYgKGlzVW5pdGxlc3NOdW1iZXIudGVzdChmbGV4VmFsdWVzWzFdKSkge1xuICAgICAgICAgIHN0eWxlLm1zRmxleCA9IGZsZXhWYWx1ZXNbMF0gKyAnICcgKyBmbGV4VmFsdWVzWzFdICsgJyAwJSc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3R5bGUubXNGbGV4ID0gZmxleFZhbHVlc1swXSArICcgMSAnICsgZmxleFZhbHVlc1sxXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBzdHlsZS5tc0ZsZXggPSB2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbn0pO1xuXG52YXIgZmxleGJveElFID0gdW53cmFwRXhwb3J0cyhmbGV4Ym94SUVfMSk7XG5cbnZhciBmbGV4Ym94T2xkXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4Ym94T2xkO1xudmFyIGFsdGVybmF0aXZlVmFsdWVzID0ge1xuICAnc3BhY2UtYXJvdW5kJzogJ2p1c3RpZnknLFxuICAnc3BhY2UtYmV0d2Vlbic6ICdqdXN0aWZ5JyxcbiAgJ2ZsZXgtc3RhcnQnOiAnc3RhcnQnLFxuICAnZmxleC1lbmQnOiAnZW5kJyxcbiAgJ3dyYXAtcmV2ZXJzZSc6ICdtdWx0aXBsZScsXG4gIHdyYXA6ICdtdWx0aXBsZSdcbn07XG5cbnZhciBhbHRlcm5hdGl2ZVByb3BzID0ge1xuICBhbGlnbkl0ZW1zOiAnV2Via2l0Qm94QWxpZ24nLFxuICBqdXN0aWZ5Q29udGVudDogJ1dlYmtpdEJveFBhY2snLFxuICBmbGV4V3JhcDogJ1dlYmtpdEJveExpbmVzJyxcbiAgZmxleEdyb3c6ICdXZWJraXRCb3hGbGV4J1xufTtcblxuZnVuY3Rpb24gZmxleGJveE9sZChwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2ZsZXhEaXJlY3Rpb24nICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICBpZiAodmFsdWUuaW5kZXhPZignY29sdW1uJykgPiAtMSkge1xuICAgICAgc3R5bGUuV2Via2l0Qm94T3JpZW50ID0gJ3ZlcnRpY2FsJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuV2Via2l0Qm94T3JpZW50ID0gJ2hvcml6b250YWwnO1xuICAgIH1cbiAgICBpZiAodmFsdWUuaW5kZXhPZigncmV2ZXJzZScpID4gLTEpIHtcbiAgICAgIHN0eWxlLldlYmtpdEJveERpcmVjdGlvbiA9ICdyZXZlcnNlJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuV2Via2l0Qm94RGlyZWN0aW9uID0gJ25vcm1hbCc7XG4gICAgfVxuICB9XG4gIGlmIChhbHRlcm5hdGl2ZVByb3BzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHN0eWxlW2FsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldXSA9IGFsdGVybmF0aXZlVmFsdWVzW3ZhbHVlXSB8fCB2YWx1ZTtcbiAgfVxufVxufSk7XG5cbnZhciBmbGV4Ym94T2xkID0gdW53cmFwRXhwb3J0cyhmbGV4Ym94T2xkXzEpO1xuXG52YXIgZ3JhZGllbnRfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGdyYWRpZW50O1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5cbnZhciB2YWx1ZXMgPSAvbGluZWFyLWdyYWRpZW50fHJhZGlhbC1ncmFkaWVudHxyZXBlYXRpbmctbGluZWFyLWdyYWRpZW50fHJlcGVhdGluZy1yYWRpYWwtZ3JhZGllbnQvZ2k7XG5cbmZ1bmN0aW9uIGdyYWRpZW50KHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZXMudGVzdCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKHZhbHVlcywgZnVuY3Rpb24gKGdyYWQpIHtcbiAgICAgICAgcmV0dXJuIHByZWZpeCArIGdyYWQ7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBncmFkaWVudCA9IHVud3JhcEV4cG9ydHMoZ3JhZGllbnRfMSk7XG5cbnZhciBncmlkXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfc2xpY2VkVG9BcnJheSA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gc2xpY2VJdGVyYXRvcihhcnIsIGkpIHsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0pIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfSByZXR1cm4gZnVuY3Rpb24gKGFyciwgaSkgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IHJldHVybiBhcnI7IH0gZWxzZSBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSB7IHJldHVybiBzbGljZUl0ZXJhdG9yKGFyciwgaSk7IH0gZWxzZSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpOyB9IH07IH0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZ3JpZDtcbmZ1bmN0aW9uIGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiAhaXNOYU4odmFsdWUpO1xufVxuXG52YXIgYWxpZ25tZW50VmFsdWVzID0gWydjZW50ZXInLCAnZW5kJywgJ3N0YXJ0JywgJ3N0cmV0Y2gnXTtcblxudmFyIGRpc3BsYXlWYWx1ZXMgPSB7XG4gICdpbmxpbmUtZ3JpZCc6IFsnLW1zLWlubGluZS1ncmlkJywgJ2lubGluZS1ncmlkJ10sXG4gIGdyaWQ6IFsnLW1zLWdyaWQnLCAnZ3JpZCddXG59O1xuXG52YXIgcHJvcGVydHlDb252ZXJ0ZXJzID0ge1xuICBhbGlnblNlbGY6IGZ1bmN0aW9uIGFsaWduU2VsZih2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoYWxpZ25tZW50VmFsdWVzLmluZGV4T2YodmFsdWUpID4gLTEpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvd0FsaWduID0gdmFsdWU7XG4gICAgfVxuICB9LFxuXG4gIGdyaWRDb2x1bW46IGZ1bmN0aW9uIGdyaWRDb2x1bW4odmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbiA9IHZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgX3ZhbHVlJHNwbGl0JG1hcCA9IHZhbHVlLnNwbGl0KCcvJykubWFwKGZ1bmN0aW9uIChwb3NpdGlvbikge1xuICAgICAgICByZXR1cm4gK3Bvc2l0aW9uO1xuICAgICAgfSksXG4gICAgICAgICAgX3ZhbHVlJHNwbGl0JG1hcDIgPSBfc2xpY2VkVG9BcnJheShfdmFsdWUkc3BsaXQkbWFwLCAyKSxcbiAgICAgICAgICBzdGFydCA9IF92YWx1ZSRzcGxpdCRtYXAyWzBdLFxuICAgICAgICAgIGVuZCA9IF92YWx1ZSRzcGxpdCRtYXAyWzFdO1xuXG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZENvbHVtblN0YXJ0KHN0YXJ0LCBzdHlsZSk7XG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZENvbHVtbkVuZChlbmQsIHN0eWxlKTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtbkVuZDogZnVuY3Rpb24gZ3JpZENvbHVtbkVuZCh2YWx1ZSwgc3R5bGUpIHtcbiAgICB2YXIgbXNHcmlkQ29sdW1uID0gc3R5bGUubXNHcmlkQ29sdW1uO1xuXG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkgJiYgaXNTaW1wbGVQb3NpdGlvblZhbHVlKG1zR3JpZENvbHVtbikpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtblNwYW4gPSB2YWx1ZSAtIG1zR3JpZENvbHVtbjtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtblN0YXJ0OiBmdW5jdGlvbiBncmlkQ29sdW1uU3RhcnQodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbiA9IHZhbHVlO1xuICAgIH1cbiAgfSxcblxuICBncmlkUm93OiBmdW5jdGlvbiBncmlkUm93KHZhbHVlLCBzdHlsZSkge1xuICAgIGlmIChpc1NpbXBsZVBvc2l0aW9uVmFsdWUodmFsdWUpKSB7XG4gICAgICBzdHlsZS5tc0dyaWRSb3cgPSB2YWx1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF92YWx1ZSRzcGxpdCRtYXAzID0gdmFsdWUuc3BsaXQoJy8nKS5tYXAoZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIHJldHVybiArcG9zaXRpb247XG4gICAgICB9KSxcbiAgICAgICAgICBfdmFsdWUkc3BsaXQkbWFwNCA9IF9zbGljZWRUb0FycmF5KF92YWx1ZSRzcGxpdCRtYXAzLCAyKSxcbiAgICAgICAgICBzdGFydCA9IF92YWx1ZSRzcGxpdCRtYXA0WzBdLFxuICAgICAgICAgIGVuZCA9IF92YWx1ZSRzcGxpdCRtYXA0WzFdO1xuXG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZFJvd1N0YXJ0KHN0YXJ0LCBzdHlsZSk7XG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZFJvd0VuZChlbmQsIHN0eWxlKTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZFJvd0VuZDogZnVuY3Rpb24gZ3JpZFJvd0VuZCh2YWx1ZSwgc3R5bGUpIHtcbiAgICB2YXIgbXNHcmlkUm93ID0gc3R5bGUubXNHcmlkUm93O1xuXG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkgJiYgaXNTaW1wbGVQb3NpdGlvblZhbHVlKG1zR3JpZFJvdykpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvd1NwYW4gPSB2YWx1ZSAtIG1zR3JpZFJvdztcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZFJvd1N0YXJ0OiBmdW5jdGlvbiBncmlkUm93U3RhcnQodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvdyA9IHZhbHVlO1xuICAgIH1cbiAgfSxcblxuICBncmlkVGVtcGxhdGVDb2x1bW5zOiBmdW5jdGlvbiBncmlkVGVtcGxhdGVDb2x1bW5zKHZhbHVlLCBzdHlsZSkge1xuICAgIHN0eWxlLm1zR3JpZENvbHVtbnMgPSB2YWx1ZTtcbiAgfSxcblxuICBncmlkVGVtcGxhdGVSb3dzOiBmdW5jdGlvbiBncmlkVGVtcGxhdGVSb3dzKHZhbHVlLCBzdHlsZSkge1xuICAgIHN0eWxlLm1zR3JpZFJvd3MgPSB2YWx1ZTtcbiAgfSxcblxuICBqdXN0aWZ5U2VsZjogZnVuY3Rpb24ganVzdGlmeVNlbGYodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGFsaWdubWVudFZhbHVlcy5pbmRleE9mKHZhbHVlKSA+IC0xKSB7XG4gICAgICBzdHlsZS5tc0dyaWRDb2x1bW5BbGlnbiA9IHZhbHVlO1xuICAgIH1cbiAgfVxufTtcblxuZnVuY3Rpb24gZ3JpZChwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2Rpc3BsYXknICYmIHZhbHVlIGluIGRpc3BsYXlWYWx1ZXMpIHtcbiAgICByZXR1cm4gZGlzcGxheVZhbHVlc1t2YWx1ZV07XG4gIH1cblxuICBpZiAocHJvcGVydHkgaW4gcHJvcGVydHlDb252ZXJ0ZXJzKSB7XG4gICAgdmFyIHByb3BlcnR5Q29udmVydGVyID0gcHJvcGVydHlDb252ZXJ0ZXJzW3Byb3BlcnR5XTtcbiAgICBwcm9wZXJ0eUNvbnZlcnRlcih2YWx1ZSwgc3R5bGUpO1xuICB9XG59XG59KTtcblxudmFyIGdyaWQgPSB1bndyYXBFeHBvcnRzKGdyaWRfMSk7XG5cbnZhciBpbWFnZVNldF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaW1hZ2VTZXQ7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNmZWF0PWNzcy1pbWFnZS1zZXRcbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnJ107XG5mdW5jdGlvbiBpbWFnZVNldChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignaW1hZ2Utc2V0KCcpID4gLTEpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC9pbWFnZS1zZXRcXCgvZywgcHJlZml4ICsgJ2ltYWdlLXNldCgnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBpbWFnZVNldCA9IHVud3JhcEV4cG9ydHMoaW1hZ2VTZXRfMSk7XG5cbnZhciBsb2dpY2FsXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBsb2dpY2FsO1xudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIG1hcmdpbkJsb2NrU3RhcnQ6IFsnV2Via2l0TWFyZ2luQmVmb3JlJ10sXG4gIG1hcmdpbkJsb2NrRW5kOiBbJ1dlYmtpdE1hcmdpbkFmdGVyJ10sXG4gIG1hcmdpbklubGluZVN0YXJ0OiBbJ1dlYmtpdE1hcmdpblN0YXJ0JywgJ01vek1hcmdpblN0YXJ0J10sXG4gIG1hcmdpbklubGluZUVuZDogWydXZWJraXRNYXJnaW5FbmQnLCAnTW96TWFyZ2luRW5kJ10sXG4gIHBhZGRpbmdCbG9ja1N0YXJ0OiBbJ1dlYmtpdFBhZGRpbmdCZWZvcmUnXSxcbiAgcGFkZGluZ0Jsb2NrRW5kOiBbJ1dlYmtpdFBhZGRpbmdBZnRlciddLFxuICBwYWRkaW5nSW5saW5lU3RhcnQ6IFsnV2Via2l0UGFkZGluZ1N0YXJ0JywgJ01velBhZGRpbmdTdGFydCddLFxuICBwYWRkaW5nSW5saW5lRW5kOiBbJ1dlYmtpdFBhZGRpbmdFbmQnLCAnTW96UGFkZGluZ0VuZCddLFxuICBib3JkZXJCbG9ja1N0YXJ0OiBbJ1dlYmtpdEJvcmRlckJlZm9yZSddLFxuICBib3JkZXJCbG9ja1N0YXJ0Q29sb3I6IFsnV2Via2l0Qm9yZGVyQmVmb3JlQ29sb3InXSxcbiAgYm9yZGVyQmxvY2tTdGFydFN0eWxlOiBbJ1dlYmtpdEJvcmRlckJlZm9yZVN0eWxlJ10sXG4gIGJvcmRlckJsb2NrU3RhcnRXaWR0aDogWydXZWJraXRCb3JkZXJCZWZvcmVXaWR0aCddLFxuICBib3JkZXJCbG9ja0VuZDogWydXZWJraXRCb3JkZXJBZnRlciddLFxuICBib3JkZXJCbG9ja0VuZENvbG9yOiBbJ1dlYmtpdEJvcmRlckFmdGVyQ29sb3InXSxcbiAgYm9yZGVyQmxvY2tFbmRTdHlsZTogWydXZWJraXRCb3JkZXJBZnRlclN0eWxlJ10sXG4gIGJvcmRlckJsb2NrRW5kV2lkdGg6IFsnV2Via2l0Qm9yZGVyQWZ0ZXJXaWR0aCddLFxuICBib3JkZXJJbmxpbmVTdGFydDogWydXZWJraXRCb3JkZXJTdGFydCcsICdNb3pCb3JkZXJTdGFydCddLFxuICBib3JkZXJJbmxpbmVTdGFydENvbG9yOiBbJ1dlYmtpdEJvcmRlclN0YXJ0Q29sb3InLCAnTW96Qm9yZGVyU3RhcnRDb2xvciddLFxuICBib3JkZXJJbmxpbmVTdGFydFN0eWxlOiBbJ1dlYmtpdEJvcmRlclN0YXJ0U3R5bGUnLCAnTW96Qm9yZGVyU3RhcnRTdHlsZSddLFxuICBib3JkZXJJbmxpbmVTdGFydFdpZHRoOiBbJ1dlYmtpdEJvcmRlclN0YXJ0V2lkdGgnLCAnTW96Qm9yZGVyU3RhcnRXaWR0aCddLFxuICBib3JkZXJJbmxpbmVFbmQ6IFsnV2Via2l0Qm9yZGVyRW5kJywgJ01vekJvcmRlckVuZCddLFxuICBib3JkZXJJbmxpbmVFbmRDb2xvcjogWydXZWJraXRCb3JkZXJFbmRDb2xvcicsICdNb3pCb3JkZXJFbmRDb2xvciddLFxuICBib3JkZXJJbmxpbmVFbmRTdHlsZTogWydXZWJraXRCb3JkZXJFbmRTdHlsZScsICdNb3pCb3JkZXJFbmRTdHlsZSddLFxuICBib3JkZXJJbmxpbmVFbmRXaWR0aDogWydXZWJraXRCb3JkZXJFbmRXaWR0aCcsICdNb3pCb3JkZXJFbmRXaWR0aCddXG59O1xuXG5mdW5jdGlvbiBsb2dpY2FsKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhbHRlcm5hdGl2ZVByb3BzLCBwcm9wZXJ0eSkpIHtcbiAgICB2YXIgYWx0ZXJuYXRpdmVQcm9wTGlzdCA9IGFsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldO1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBhbHRlcm5hdGl2ZVByb3BMaXN0Lmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BMaXN0W2ldXSA9IHZhbHVlO1xuICAgIH1cbiAgfVxufVxufSk7XG5cbnZhciBsb2dpY2FsID0gdW53cmFwRXhwb3J0cyhsb2dpY2FsXzEpO1xuXG52YXIgcG9zaXRpb25fMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHBvc2l0aW9uO1xuZnVuY3Rpb24gcG9zaXRpb24ocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ3Bvc2l0aW9uJyAmJiB2YWx1ZSA9PT0gJ3N0aWNreScpIHtcbiAgICByZXR1cm4gWyctd2Via2l0LXN0aWNreScsICdzdGlja3knXTtcbiAgfVxufVxufSk7XG5cbnZhciBwb3NpdGlvbiA9IHVud3JhcEV4cG9ydHMocG9zaXRpb25fMSk7XG5cbnZhciBzaXppbmdfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHNpemluZztcbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5cbnZhciBwcm9wZXJ0aWVzID0ge1xuICBtYXhIZWlnaHQ6IHRydWUsXG4gIG1heFdpZHRoOiB0cnVlLFxuICB3aWR0aDogdHJ1ZSxcbiAgaGVpZ2h0OiB0cnVlLFxuICBjb2x1bW5XaWR0aDogdHJ1ZSxcbiAgbWluV2lkdGg6IHRydWUsXG4gIG1pbkhlaWdodDogdHJ1ZVxufTtcbnZhciB2YWx1ZXMgPSB7XG4gICdtaW4tY29udGVudCc6IHRydWUsXG4gICdtYXgtY29udGVudCc6IHRydWUsXG4gICdmaWxsLWF2YWlsYWJsZSc6IHRydWUsXG4gICdmaXQtY29udGVudCc6IHRydWUsXG4gICdjb250YWluLWZsb2F0cyc6IHRydWVcbn07XG5cbmZ1bmN0aW9uIHNpemluZyhwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkocHJvcGVydHkpICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBzaXppbmcgPSB1bndyYXBFeHBvcnRzKHNpemluZ18xKTtcblxuLyogZXNsaW50LWRpc2FibGUgbm8tdmFyLCBwcmVmZXItdGVtcGxhdGUgKi9cbnZhciB1cHBlcmNhc2VQYXR0ZXJuID0gL1tBLVpdL2c7XG52YXIgbXNQYXR0ZXJuID0gL15tcy0vO1xudmFyIGNhY2hlID0ge307XG5cbmZ1bmN0aW9uIHRvSHlwaGVuTG93ZXIobWF0Y2gpIHtcbiAgcmV0dXJuICctJyArIG1hdGNoLnRvTG93ZXJDYXNlKClcbn1cblxuZnVuY3Rpb24gaHlwaGVuYXRlU3R5bGVOYW1lKG5hbWUpIHtcbiAgaWYgKGNhY2hlLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgcmV0dXJuIGNhY2hlW25hbWVdXG4gIH1cblxuICB2YXIgaE5hbWUgPSBuYW1lLnJlcGxhY2UodXBwZXJjYXNlUGF0dGVybiwgdG9IeXBoZW5Mb3dlcik7XG4gIHJldHVybiAoY2FjaGVbbmFtZV0gPSBtc1BhdHRlcm4udGVzdChoTmFtZSkgPyAnLScgKyBoTmFtZSA6IGhOYW1lKVxufVxuXG52YXIgaHlwaGVuYXRlU3R5bGVOYW1lJDEgPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XG4gIGRlZmF1bHQ6IGh5cGhlbmF0ZVN0eWxlTmFtZVxufSk7XG5cbnZhciBfaHlwaGVuYXRlU3R5bGVOYW1lID0gZ2V0Q2pzRXhwb3J0RnJvbU5hbWVzcGFjZShoeXBoZW5hdGVTdHlsZU5hbWUkMSk7XG5cbnZhciBoeXBoZW5hdGVQcm9wZXJ0eV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaHlwaGVuYXRlUHJvcGVydHk7XG5cblxuXG52YXIgX2h5cGhlbmF0ZVN0eWxlTmFtZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oeXBoZW5hdGVTdHlsZU5hbWUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBoeXBoZW5hdGVQcm9wZXJ0eShwcm9wZXJ0eSkge1xuICByZXR1cm4gKDAsIF9oeXBoZW5hdGVTdHlsZU5hbWUyLmRlZmF1bHQpKHByb3BlcnR5KTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xufSk7XG5cbnVud3JhcEV4cG9ydHMoaHlwaGVuYXRlUHJvcGVydHlfMSk7XG5cbnZhciB0cmFuc2l0aW9uXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB0cmFuc2l0aW9uO1xuXG5cblxudmFyIF9oeXBoZW5hdGVQcm9wZXJ0eTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGh5cGhlbmF0ZVByb3BlcnR5XzEpO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cblxuXG52YXIgX2NhcGl0YWxpemVTdHJpbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJvcGVydGllcyA9IHtcbiAgdHJhbnNpdGlvbjogdHJ1ZSxcbiAgdHJhbnNpdGlvblByb3BlcnR5OiB0cnVlLFxuICBXZWJraXRUcmFuc2l0aW9uOiB0cnVlLFxuICBXZWJraXRUcmFuc2l0aW9uUHJvcGVydHk6IHRydWUsXG4gIE1velRyYW5zaXRpb246IHRydWUsXG4gIE1velRyYW5zaXRpb25Qcm9wZXJ0eTogdHJ1ZVxufTtcblxuXG52YXIgcHJlZml4TWFwcGluZyA9IHtcbiAgV2Via2l0OiAnLXdlYmtpdC0nLFxuICBNb3o6ICctbW96LScsXG4gIG1zOiAnLW1zLSdcbn07XG5cbmZ1bmN0aW9uIHByZWZpeFZhbHVlKHZhbHVlLCBwcm9wZXJ0eVByZWZpeE1hcCkge1xuICBpZiAoKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIC8vIG9ubHkgc3BsaXQgbXVsdGkgdmFsdWVzLCBub3QgY3ViaWMgYmV6aWVyc1xuICB2YXIgbXVsdGlwbGVWYWx1ZXMgPSB2YWx1ZS5zcGxpdCgvLCg/IVteKCldKig/OlxcKFteKCldKlxcKSk/XFwpKS9nKTtcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gbXVsdGlwbGVWYWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICB2YXIgc2luZ2xlVmFsdWUgPSBtdWx0aXBsZVZhbHVlc1tpXTtcbiAgICB2YXIgdmFsdWVzID0gW3NpbmdsZVZhbHVlXTtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiBwcm9wZXJ0eVByZWZpeE1hcCkge1xuICAgICAgdmFyIGRhc2hDYXNlUHJvcGVydHkgPSAoMCwgX2h5cGhlbmF0ZVByb3BlcnR5Mi5kZWZhdWx0KShwcm9wZXJ0eSk7XG5cbiAgICAgIGlmIChzaW5nbGVWYWx1ZS5pbmRleE9mKGRhc2hDYXNlUHJvcGVydHkpID4gLTEgJiYgZGFzaENhc2VQcm9wZXJ0eSAhPT0gJ29yZGVyJykge1xuICAgICAgICB2YXIgcHJlZml4ZXMgPSBwcm9wZXJ0eVByZWZpeE1hcFtwcm9wZXJ0eV07XG4gICAgICAgIGZvciAodmFyIGogPSAwLCBwTGVuID0gcHJlZml4ZXMubGVuZ3RoOyBqIDwgcExlbjsgKytqKSB7XG4gICAgICAgICAgLy8gam9pbiBhbGwgcHJlZml4ZXMgYW5kIGNyZWF0ZSBhIG5ldyB2YWx1ZVxuICAgICAgICAgIHZhbHVlcy51bnNoaWZ0KHNpbmdsZVZhbHVlLnJlcGxhY2UoZGFzaENhc2VQcm9wZXJ0eSwgcHJlZml4TWFwcGluZ1twcmVmaXhlc1tqXV0gKyBkYXNoQ2FzZVByb3BlcnR5KSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBtdWx0aXBsZVZhbHVlc1tpXSA9IHZhbHVlcy5qb2luKCcsJyk7XG4gIH1cblxuICByZXR1cm4gbXVsdGlwbGVWYWx1ZXMuam9pbignLCcpO1xufVxuXG5mdW5jdGlvbiB0cmFuc2l0aW9uKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIHByb3BlcnR5UHJlZml4TWFwKSB7XG4gIC8vIGFsc28gY2hlY2sgZm9yIGFscmVhZHkgcHJlZml4ZWQgdHJhbnNpdGlvbnNcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgcHJvcGVydGllcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICB2YXIgb3V0cHV0VmFsdWUgPSBwcmVmaXhWYWx1ZSh2YWx1ZSwgcHJvcGVydHlQcmVmaXhNYXApO1xuICAgIC8vIGlmIHRoZSBwcm9wZXJ0eSBpcyBhbHJlYWR5IHByZWZpeGVkXG4gICAgdmFyIHdlYmtpdE91dHB1dCA9IG91dHB1dFZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7XG4gICAgICByZXR1cm4gIS8tbW96LXwtbXMtLy50ZXN0KHZhbCk7XG4gICAgfSkuam9pbignLCcpO1xuXG4gICAgaWYgKHByb3BlcnR5LmluZGV4T2YoJ1dlYmtpdCcpID4gLTEpIHtcbiAgICAgIHJldHVybiB3ZWJraXRPdXRwdXQ7XG4gICAgfVxuXG4gICAgdmFyIG1vek91dHB1dCA9IG91dHB1dFZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7XG4gICAgICByZXR1cm4gIS8td2Via2l0LXwtbXMtLy50ZXN0KHZhbCk7XG4gICAgfSkuam9pbignLCcpO1xuXG4gICAgaWYgKHByb3BlcnR5LmluZGV4T2YoJ01veicpID4gLTEpIHtcbiAgICAgIHJldHVybiBtb3pPdXRwdXQ7XG4gICAgfVxuXG4gICAgc3R5bGVbJ1dlYmtpdCcgKyAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KV0gPSB3ZWJraXRPdXRwdXQ7XG4gICAgc3R5bGVbJ01veicgKyAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KV0gPSBtb3pPdXRwdXQ7XG4gICAgcmV0dXJuIG91dHB1dFZhbHVlO1xuICB9XG59XG59KTtcblxudmFyIHRyYW5zaXRpb24gPSB1bndyYXBFeHBvcnRzKHRyYW5zaXRpb25fMSk7XG5cbnZhciB3ID0gW1wiV2Via2l0XCJdO1xudmFyIG0gPSBbXCJNb3pcIl07XG52YXIgbXMgPSBbXCJtc1wiXTtcbnZhciB3bSA9IFtcIldlYmtpdFwiLCBcIk1velwiXTtcbnZhciB3bXMgPSBbXCJXZWJraXRcIiwgXCJtc1wiXTtcbnZhciB3bW1zID0gW1wiV2Via2l0XCIsIFwiTW96XCIsIFwibXNcIl07XG52YXIgc3RhdGljRGF0YSA9IHtcbiAgcGx1Z2luczogW2JhY2tncm91bmRDbGlwLCBjYWxjLCBjcm9zc0ZhZGUsIGN1cnNvciwgZmlsdGVyLCBmbGV4LCBmbGV4Ym94SUUsIGZsZXhib3hPbGQsIGdyYWRpZW50LCBncmlkLCBpbWFnZVNldCwgbG9naWNhbCwgcG9zaXRpb24sIHNpemluZywgdHJhbnNpdGlvbl0sXG4gIHByZWZpeE1hcDoge1xuICAgIFwidHJhbnNmb3JtXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpblwiOiB3bXMsXG4gICAgXCJ0cmFuc2Zvcm1PcmlnaW5YXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpbllcIjogd21zLFxuICAgIFwiYmFja2ZhY2VWaXNpYmlsaXR5XCI6IHcsXG4gICAgXCJwZXJzcGVjdGl2ZVwiOiB3LFxuICAgIFwicGVyc3BlY3RpdmVPcmlnaW5cIjogdyxcbiAgICBcInRyYW5zZm9ybVN0eWxlXCI6IHcsXG4gICAgXCJ0cmFuc2Zvcm1PcmlnaW5aXCI6IHcsXG4gICAgXCJhbmltYXRpb25cIjogdyxcbiAgICBcImFuaW1hdGlvbkRlbGF5XCI6IHcsXG4gICAgXCJhbmltYXRpb25EaXJlY3Rpb25cIjogdyxcbiAgICBcImFuaW1hdGlvbkZpbGxNb2RlXCI6IHcsXG4gICAgXCJhbmltYXRpb25EdXJhdGlvblwiOiB3LFxuICAgIFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogdyxcbiAgICBcImFuaW1hdGlvbk5hbWVcIjogdyxcbiAgICBcImFuaW1hdGlvblBsYXlTdGF0ZVwiOiB3LFxuICAgIFwiYW5pbWF0aW9uVGltaW5nRnVuY3Rpb25cIjogdyxcbiAgICBcImFwcGVhcmFuY2VcIjogd20sXG4gICAgXCJ1c2VyU2VsZWN0XCI6IHdtbXMsXG4gICAgXCJmb250S2VybmluZ1wiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzUG9zaXRpb25cIjogdyxcbiAgICBcInRleHRFbXBoYXNpc1wiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzU3R5bGVcIjogdyxcbiAgICBcInRleHRFbXBoYXNpc0NvbG9yXCI6IHcsXG4gICAgXCJib3hEZWNvcmF0aW9uQnJlYWtcIjogdyxcbiAgICBcImNsaXBQYXRoXCI6IHcsXG4gICAgXCJtYXNrSW1hZ2VcIjogdyxcbiAgICBcIm1hc2tNb2RlXCI6IHcsXG4gICAgXCJtYXNrUmVwZWF0XCI6IHcsXG4gICAgXCJtYXNrUG9zaXRpb25cIjogdyxcbiAgICBcIm1hc2tDbGlwXCI6IHcsXG4gICAgXCJtYXNrT3JpZ2luXCI6IHcsXG4gICAgXCJtYXNrU2l6ZVwiOiB3LFxuICAgIFwibWFza0NvbXBvc2l0ZVwiOiB3LFxuICAgIFwibWFza1wiOiB3LFxuICAgIFwibWFza0JvcmRlclNvdXJjZVwiOiB3LFxuICAgIFwibWFza0JvcmRlck1vZGVcIjogdyxcbiAgICBcIm1hc2tCb3JkZXJTbGljZVwiOiB3LFxuICAgIFwibWFza0JvcmRlcldpZHRoXCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyT3V0c2V0XCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyUmVwZWF0XCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyXCI6IHcsXG4gICAgXCJtYXNrVHlwZVwiOiB3LFxuICAgIFwidGV4dERlY29yYXRpb25TdHlsZVwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uU2tpcFwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uTGluZVwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uQ29sb3JcIjogd20sXG4gICAgXCJmaWx0ZXJcIjogdyxcbiAgICBcImZvbnRGZWF0dXJlU2V0dGluZ3NcIjogd20sXG4gICAgXCJicmVha0FmdGVyXCI6IHdtbXMsXG4gICAgXCJicmVha0JlZm9yZVwiOiB3bW1zLFxuICAgIFwiYnJlYWtJbnNpZGVcIjogd21tcyxcbiAgICBcImNvbHVtbkNvdW50XCI6IHdtLFxuICAgIFwiY29sdW1uRmlsbFwiOiB3bSxcbiAgICBcImNvbHVtbkdhcFwiOiB3bSxcbiAgICBcImNvbHVtblJ1bGVcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlQ29sb3JcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlU3R5bGVcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlV2lkdGhcIjogd20sXG4gICAgXCJjb2x1bW5zXCI6IHdtLFxuICAgIFwiY29sdW1uU3BhblwiOiB3bSxcbiAgICBcImNvbHVtbldpZHRoXCI6IHdtLFxuICAgIFwid3JpdGluZ01vZGVcIjogd21zLFxuICAgIFwiZmxleFwiOiB3bXMsXG4gICAgXCJmbGV4QmFzaXNcIjogdyxcbiAgICBcImZsZXhEaXJlY3Rpb25cIjogd21zLFxuICAgIFwiZmxleEdyb3dcIjogdyxcbiAgICBcImZsZXhGbG93XCI6IHdtcyxcbiAgICBcImZsZXhTaHJpbmtcIjogdyxcbiAgICBcImZsZXhXcmFwXCI6IHdtcyxcbiAgICBcImFsaWduQ29udGVudFwiOiB3LFxuICAgIFwiYWxpZ25JdGVtc1wiOiB3LFxuICAgIFwiYWxpZ25TZWxmXCI6IHcsXG4gICAgXCJqdXN0aWZ5Q29udGVudFwiOiB3LFxuICAgIFwib3JkZXJcIjogdyxcbiAgICBcInRyYW5zaXRpb25EZWxheVwiOiB3LFxuICAgIFwidHJhbnNpdGlvbkR1cmF0aW9uXCI6IHcsXG4gICAgXCJ0cmFuc2l0aW9uUHJvcGVydHlcIjogdyxcbiAgICBcInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvblwiOiB3LFxuICAgIFwiYmFja2Ryb3BGaWx0ZXJcIjogdyxcbiAgICBcInNjcm9sbFNuYXBUeXBlXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBQb2ludHNYXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBQb2ludHNZXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBEZXN0aW5hdGlvblwiOiB3bXMsXG4gICAgXCJzY3JvbGxTbmFwQ29vcmRpbmF0ZVwiOiB3bXMsXG4gICAgXCJzaGFwZUltYWdlVGhyZXNob2xkXCI6IHcsXG4gICAgXCJzaGFwZUltYWdlTWFyZ2luXCI6IHcsXG4gICAgXCJzaGFwZUltYWdlT3V0c2lkZVwiOiB3LFxuICAgIFwiaHlwaGVuc1wiOiB3bW1zLFxuICAgIFwiZmxvd0ludG9cIjogd21zLFxuICAgIFwiZmxvd0Zyb21cIjogd21zLFxuICAgIFwicmVnaW9uRnJhZ21lbnRcIjogd21zLFxuICAgIFwidGV4dE9yaWVudGF0aW9uXCI6IHcsXG4gICAgXCJib3hTaXppbmdcIjogbSxcbiAgICBcInRleHRBbGlnbkxhc3RcIjogbSxcbiAgICBcInRhYlNpemVcIjogbSxcbiAgICBcIndyYXBGbG93XCI6IG1zLFxuICAgIFwid3JhcFRocm91Z2hcIjogbXMsXG4gICAgXCJ3cmFwTWFyZ2luXCI6IG1zLFxuICAgIFwidG91Y2hBY3Rpb25cIjogbXMsXG4gICAgXCJ0ZXh0U2l6ZUFkanVzdFwiOiB3bXMsXG4gICAgXCJib3JkZXJJbWFnZVwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VPdXRzZXRcIjogdyxcbiAgICBcImJvcmRlckltYWdlUmVwZWF0XCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVNsaWNlXCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVNvdXJjZVwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VXaWR0aFwiOiB3XG4gIH1cbn07XG5cbnZhciBwcmVmaXhBbGwgPSBjcmVhdGVQcmVmaXhlcihzdGF0aWNEYXRhKTtcbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNoZWV0RGVmaW5pdGlvbiB9IGZyb20gJy4vaW5kZXguanMnO1xudHlwZSBTdHJpbmdIYW5kbGVycyA9IHsgW2lkOnN0cmluZ106IEZ1bmN0aW9uIH07XG50eXBlIFNlbGVjdG9yQ2FsbGJhY2sgPSAoc2VsZWN0b3I6IHN0cmluZykgPT4gc3RyaW5nW107XG5leHBvcnQgdHlwZSBTZWxlY3RvckhhbmRsZXIgPSAoXG4gICAgc2VsZWN0b3I6IHN0cmluZyxcbiAgICBiYXNlU2VsZWN0b3I6IHN0cmluZyxcbiAgICBjYWxsYmFjazogU2VsZWN0b3JDYWxsYmFja1xuKSA9PiBzdHJpbmdbXSB8IHN0cmluZyB8IG51bGw7XG4qL1xuXG4vKipcbiAqIGBzZWxlY3RvckhhbmRsZXJzYCBhcmUgZnVuY3Rpb25zIHdoaWNoIGhhbmRsZSBzcGVjaWFsIHNlbGVjdG9ycyB3aGljaCBhY3RcbiAqIGRpZmZlcmVudGx5IHRoYW4gbm9ybWFsIHN0eWxlIGRlZmluaXRpb25zLiBUaGVzZSBmdW5jdGlvbnMgbG9vayBhdCB0aGVcbiAqIGN1cnJlbnQgc2VsZWN0b3IgYW5kIGNhbiBnZW5lcmF0ZSBDU1MgZm9yIHRoZSBzdHlsZXMgaW4gdGhlaXIgc3VidHJlZSBieVxuICogY2FsbGluZyB0aGUgY2FsbGJhY2sgd2l0aCBhIG5ldyBzZWxlY3Rvci5cbiAqXG4gKiBGb3IgZXhhbXBsZSwgd2hlbiBnZW5lcmF0aW5nIHN0eWxlcyB3aXRoIGEgYmFzZSBzZWxlY3RvciBvZiAnLmZvbycgYW5kIHRoZVxuICogZm9sbG93aW5nIHN0eWxlcyBvYmplY3Q6XG4gKlxuICogICB7XG4gKiAgICAgJzpudGgtY2hpbGQoMm4pJzoge1xuICogICAgICAgJzpob3Zlcic6IHtcbiAqICAgICAgICAgY29sb3I6ICdyZWQnXG4gKiAgICAgICB9XG4gKiAgICAgfVxuICogICB9XG4gKlxuICogd2hlbiB3ZSByZWFjaCB0aGUgJzpob3Zlcicgc3R5bGUsIHdlIHdvdWxkIGNhbGwgb3VyIHNlbGVjdG9yIGhhbmRsZXJzIGxpa2VcbiAqXG4gKiAgIGhhbmRsZXIoJzpob3ZlcicsICcuZm9vOm50aC1jaGlsZCgybiknLCBjYWxsYmFjaylcbiAqXG4gKiBTaW5jZSBvdXIgYHBzZXVkb1NlbGVjdG9yc2AgaGFuZGxlcyAnOmhvdmVyJyBzdHlsZXMsIHRoYXQgaGFuZGxlciB3b3VsZCBjYWxsXG4gKiB0aGUgY2FsbGJhY2sgbGlrZVxuICpcbiAqICAgY2FsbGJhY2soJy5mb286bnRoLWNoaWxkKDJuKTpob3ZlcicpXG4gKlxuICogdG8gZ2VuZXJhdGUgaXRzIHN1YnRyZWUgYHsgY29sb3I6ICdyZWQnIH1gIHN0eWxlcyB3aXRoIGFcbiAqICcuZm9vOm50aC1jaGlsZCgybik6aG92ZXInIHNlbGVjdG9yLiBUaGUgY2FsbGJhY2sgd291bGQgcmV0dXJuIGFuIGFycmF5IG9mIENTU1xuICogcnVsZXMgbGlrZVxuICpcbiAqICAgWycuZm9vOm50aC1jaGlsZCgybik6aG92ZXJ7Y29sb3I6cmVkICFpbXBvcnRhbnQ7fSddXG4gKlxuICogYW5kIHRoZSBoYW5kbGVyIHdvdWxkIHRoZW4gcmV0dXJuIHRoYXQgcmVzdWx0aW5nIENTUy5cbiAqXG4gKiBgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnNgIGlzIHRoZSBsaXN0IG9mIGRlZmF1bHQgaGFuZGxlcnMgdXNlZCBpbiBhIGNhbGwgdG9cbiAqIGBnZW5lcmF0ZUNTU2AuXG4gKlxuICogQG5hbWUgU2VsZWN0b3JIYW5kbGVyXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvcjogVGhlIGN1cnJlbnRseSBpbnNwZWN0ZWQgc2VsZWN0b3IuICc6aG92ZXInIGluIHRoZVxuICogICAgIGV4YW1wbGUgYWJvdmUuXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVNlbGVjdG9yOiBUaGUgc2VsZWN0b3Igb2YgdGhlIHBhcmVudCBzdHlsZXMuXG4gKiAgICAgJy5mb286bnRoLWNoaWxkKDJuKScgaW4gdGhlIGV4YW1wbGUgYWJvdmUuXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBnZW5lcmF0ZVN1YnRyZWVTdHlsZXM6IEEgZnVuY3Rpb24gd2hpY2ggY2FuIGJlIGNhbGxlZCB0b1xuICogICAgIGdlbmVyYXRlIENTUyBmb3IgdGhlIHN1YnRyZWUgb2Ygc3R5bGVzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHNlbGVjdG9yLlxuICogICAgIEFjY2VwdHMgYSBuZXcgYmFzZVNlbGVjdG9yIHRvIHVzZSBmb3IgZ2VuZXJhdGluZyB0aG9zZSBzdHlsZXMuXG4gKiBAcmV0dXJucyB7c3RyaW5nW10gfCBzdHJpbmcgfCBudWxsfSBUaGUgZ2VuZXJhdGVkIENTUyBmb3IgdGhpcyBzZWxlY3Rvciwgb3JcbiAqICAgICBudWxsIGlmIHdlIGRvbid0IGhhbmRsZSB0aGlzIHNlbGVjdG9yLlxuICovXG5cbnZhciBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyc1xuLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuPSBbLy8gSGFuZGxlIHBzZXVkby1zZWxlY3RvcnMsIGxpa2UgOmhvdmVyIGFuZCA6bnRoLWNoaWxkKDNuKVxuZnVuY3Rpb24gcHNldWRvU2VsZWN0b3JzKHNlbGVjdG9yLCBiYXNlU2VsZWN0b3IsIGdlbmVyYXRlU3VidHJlZVN0eWxlcykge1xuICBpZiAoc2VsZWN0b3JbMF0gIT09IFwiOlwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdGVTdWJ0cmVlU3R5bGVzKGJhc2VTZWxlY3RvciArIHNlbGVjdG9yKTtcbn0sIC8vIEhhbmRsZSBtZWRpYSBxdWVyaWVzIChvciBmb250LWZhY2VzKVxuZnVuY3Rpb24gbWVkaWFRdWVyaWVzKHNlbGVjdG9yLCBiYXNlU2VsZWN0b3IsIGdlbmVyYXRlU3VidHJlZVN0eWxlcykge1xuICBpZiAoc2VsZWN0b3JbMF0gIT09IFwiQFwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH0gLy8gR2VuZXJhdGUgdGhlIHN0eWxlcyBub3JtYWxseSwgYW5kIHRoZW4gd3JhcCB0aGVtIGluIHRoZSBtZWRpYSBxdWVyeS5cblxuXG4gIHZhciBnZW5lcmF0ZWQgPSBnZW5lcmF0ZVN1YnRyZWVTdHlsZXMoYmFzZVNlbGVjdG9yKTtcbiAgcmV0dXJuIFtcIlwiLmNvbmNhdChzZWxlY3RvciwgXCJ7XCIpLmNvbmNhdChnZW5lcmF0ZWQuam9pbignJyksIFwifVwiKV07XG59XTtcbi8qKlxuICogR2VuZXJhdGUgQ1NTIGZvciBhIHNlbGVjdG9yIGFuZCBzb21lIHN0eWxlcy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGhhbmRsZXMgdGhlIG1lZGlhIHF1ZXJpZXMgYW5kIHBzZXVkbyBzZWxlY3RvcnMgdGhhdCBjYW4gYmUgdXNlZFxuICogaW4gYXBocm9kaXRlIHN0eWxlcy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3I6IEEgYmFzZSBDU1Mgc2VsZWN0b3IgZm9yIHRoZSBzdHlsZXMgdG8gYmUgZ2VuZXJhdGVkXG4gKiAgICAgd2l0aC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdHlsZVR5cGVzOiBBIGxpc3Qgb2YgcHJvcGVydGllcyBvZiB0aGUgcmV0dXJuIHR5cGUgb2ZcbiAqICAgICBTdHlsZVNoZWV0LmNyZWF0ZSwgZS5nLiBbc3R5bGVzLnJlZCwgc3R5bGVzLmJsdWVdLlxuICogQHBhcmFtIHtBcnJheS48U2VsZWN0b3JIYW5kbGVyPn0gc2VsZWN0b3JIYW5kbGVyczogQSBsaXN0IG9mIHNlbGVjdG9yXG4gKiAgICAgaGFuZGxlcnMgdG8gdXNlIGZvciBoYW5kbGluZyBzcGVjaWFsIHNlbGVjdG9ycy4gU2VlXG4gKiAgICAgYGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzYC5cbiAqIEBwYXJhbSBzdHJpbmdIYW5kbGVyczogU2VlIGBnZW5lcmF0ZUNTU1J1bGVzZXRgXG4gKiBAcGFyYW0gdXNlSW1wb3J0YW50OiBTZWUgYGdlbmVyYXRlQ1NTUnVsZXNldGBcbiAqXG4gKiBUbyBhY3R1YWxseSBnZW5lcmF0ZSB0aGUgQ1NTIHNwZWNpYWwtY29uc3RydWN0LWxlc3Mgc3R5bGVzIGFyZSBwYXNzZWQgdG9cbiAqIGBnZW5lcmF0ZUNTU1J1bGVzZXRgLlxuICpcbiAqIEZvciBpbnN0YW5jZSwgYSBjYWxsIHRvXG4gKlxuICogICAgIGdlbmVyYXRlQ1NTKFwiLmZvb1wiLCBbe1xuICogICAgICAgY29sb3I6IFwicmVkXCIsXG4gKiAgICAgICBcIkBtZWRpYSBzY3JlZW5cIjoge1xuICogICAgICAgICBoZWlnaHQ6IDIwLFxuICogICAgICAgICBcIjpob3ZlclwiOiB7XG4gKiAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcImJsYWNrXCJcbiAqICAgICAgICAgfVxuICogICAgICAgfSxcbiAqICAgICAgIFwiOmFjdGl2ZVwiOiB7XG4gKiAgICAgICAgIGZvbnRXZWlnaHQ6IFwiYm9sZFwiXG4gKiAgICAgICB9XG4gKiAgICAgfV0sIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzKTtcbiAqXG4gKiB3aXRoIHRoZSBkZWZhdWx0IGBzZWxlY3RvckhhbmRsZXJzYCB3aWxsIG1ha2UgNSBjYWxscyB0b1xuICogYGdlbmVyYXRlQ1NTUnVsZXNldGA6XG4gKlxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb29cIiwgeyBjb2xvcjogXCJyZWRcIiB9LCAuLi4pXG4gKiAgICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmZvbzphY3RpdmVcIiwgeyBmb250V2VpZ2h0OiBcImJvbGRcIiB9LCAuLi4pXG4gKiAgICAgLy8gVGhlc2UgMiB3aWxsIGJlIHdyYXBwZWQgaW4gQG1lZGlhIHNjcmVlbiB7fVxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb29cIiwgeyBoZWlnaHQ6IDIwIH0sIC4uLilcbiAqICAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuZm9vOmhvdmVyXCIsIHsgYmFja2dyb3VuZENvbG9yOiBcImJsYWNrXCIgfSwgLi4uKVxuICovXG5cbnZhciBnZW5lcmF0ZUNTUyA9IGZ1bmN0aW9uIGdlbmVyYXRlQ1NTKHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBzdHlsZVR5cGVzXG4vKiA6IFNoZWV0RGVmaW5pdGlvbltdICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbiwgc3RyaW5nSGFuZGxlcnNcbi8qIDogU3RyaW5nSGFuZGxlcnMgKi9cbiwgdXNlSW1wb3J0YW50XG4vKiA6IGJvb2xlYW4gKi9cbilcbi8qIDogc3RyaW5nW10gKi9cbntcbiAgdmFyIG1lcmdlZCA9IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlVHlwZXMubGVuZ3RoOyBpKyspIHtcbiAgICBtZXJnZWQuYWRkU3R5bGVUeXBlKHN0eWxlVHlwZXNbaV0pO1xuICB9XG5cbiAgdmFyIHBsYWluRGVjbGFyYXRpb25zID0gbmV3IE9yZGVyZWRFbGVtZW50cygpO1xuICB2YXIgZ2VuZXJhdGVkU3R5bGVzID0gW107IC8vIFRPRE8oZW1pbHkpOiBiZW5jaG1hcmsgdGhpcyB0byBzZWUgaWYgYSBwbGFpbiBmb3IgbG9vcCB3b3VsZCBiZSBmYXN0ZXIuXG5cbiAgbWVyZ2VkLmZvckVhY2goZnVuY3Rpb24gKHZhbCwga2V5KSB7XG4gICAgLy8gRm9yIGVhY2gga2V5LCBzZWUgaWYgb25lIG9mIHRoZSBzZWxlY3RvciBoYW5kbGVycyB3aWxsIGhhbmRsZSB0aGVzZVxuICAgIC8vIHN0eWxlcy5cbiAgICB2YXIgZm91bmRIYW5kbGVyID0gc2VsZWN0b3JIYW5kbGVycy5zb21lKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gaGFuZGxlcihrZXksIHNlbGVjdG9yLCBmdW5jdGlvbiAobmV3U2VsZWN0b3IpIHtcbiAgICAgICAgcmV0dXJuIGdlbmVyYXRlQ1NTKG5ld1NlbGVjdG9yLCBbdmFsXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICAgIC8vIElmIHRoZSBoYW5kbGVyIHJldHVybmVkIHNvbWV0aGluZywgYWRkIGl0IHRvIHRoZSBnZW5lcmF0ZWRcbiAgICAgICAgLy8gQ1NTIGFuZCBzdG9wIGxvb2tpbmcgZm9yIGFub3RoZXIgaGFuZGxlci5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocmVzdWx0KSkge1xuICAgICAgICAgIGdlbmVyYXRlZFN0eWxlcy5wdXNoLmFwcGx5KGdlbmVyYXRlZFN0eWxlcywgX3RvQ29uc3VtYWJsZUFycmF5KHJlc3VsdCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgICAgIGNvbnNvbGUud2FybignV0FSTklORzogU2VsZWN0b3IgaGFuZGxlcnMgc2hvdWxkIHJldHVybiBhbiBhcnJheSBvZiBydWxlcy4nICsgJ1JldHVybmluZyBhIHN0cmluZyBjb250YWluaW5nIG11bHRpcGxlIHJ1bGVzIGlzIGRlcHJlY2F0ZWQuJywgaGFuZGxlcik7XG4gICAgICAgICAgZ2VuZXJhdGVkU3R5bGVzLnB1c2goXCJAbWVkaWEgYWxsIHtcIi5jb25jYXQocmVzdWx0LCBcIn1cIikpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSk7IC8vIElmIG5vbmUgb2YgdGhlIGhhbmRsZXJzIGhhbmRsZWQgaXQsIGFkZCBpdCB0byB0aGUgbGlzdCBvZiBwbGFpblxuICAgIC8vIHN0eWxlIGRlY2xhcmF0aW9ucy5cblxuICAgIGlmICghZm91bmRIYW5kbGVyKSB7XG4gICAgICBwbGFpbkRlY2xhcmF0aW9ucy5zZXQoa2V5LCB2YWwsIHRydWUpO1xuICAgIH1cbiAgfSk7XG4gIHZhciBnZW5lcmF0ZWRSdWxlc2V0ID0gZ2VuZXJhdGVDU1NSdWxlc2V0KHNlbGVjdG9yLCBwbGFpbkRlY2xhcmF0aW9ucywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCwgc2VsZWN0b3JIYW5kbGVycyk7XG5cbiAgaWYgKGdlbmVyYXRlZFJ1bGVzZXQpIHtcbiAgICBnZW5lcmF0ZWRTdHlsZXMudW5zaGlmdChnZW5lcmF0ZWRSdWxlc2V0KTtcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0ZWRTdHlsZXM7XG59O1xuLyoqXG4gKiBIZWxwZXIgbWV0aG9kIG9mIGdlbmVyYXRlQ1NTUnVsZXNldCB0byBmYWNpbGl0YXRlIGN1c3RvbSBoYW5kbGluZyBvZiBjZXJ0YWluXG4gKiBDU1MgcHJvcGVydGllcy4gVXNlZCBmb3IgZS5nLiBmb250IGZhbWlsaWVzLlxuICpcbiAqIFNlZSBnZW5lcmF0ZUNTU1J1bGVzZXQgZm9yIHVzYWdlIGFuZCBkb2N1bWVudGF0aW9uIG9mIHBhcmFtYXRlciB0eXBlcy5cbiAqL1xuXG52YXIgcnVuU3RyaW5nSGFuZGxlcnMgPSBmdW5jdGlvbiBydW5TdHJpbmdIYW5kbGVycyhkZWNsYXJhdGlvbnNcbi8qIDogT3JkZXJlZEVsZW1lbnRzICovXG4sIHN0cmluZ0hhbmRsZXJzXG4vKiA6IFN0cmluZ0hhbmRsZXJzICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogdm9pZCAqL1xue1xuICBpZiAoIXN0cmluZ0hhbmRsZXJzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHN0cmluZ0hhbmRsZXJLZXlzID0gT2JqZWN0LmtleXMoc3RyaW5nSGFuZGxlcnMpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyaW5nSGFuZGxlcktleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0gc3RyaW5nSGFuZGxlcktleXNbaV07XG5cbiAgICBpZiAoZGVjbGFyYXRpb25zLmhhcyhrZXkpKSB7XG4gICAgICAvLyBBIGRlY2xhcmF0aW9uIGV4aXN0cyBmb3IgdGhpcyBwYXJ0aWN1bGFyIHN0cmluZyBoYW5kbGVyLCBzbyB3ZVxuICAgICAgLy8gbmVlZCB0byBsZXQgdGhlIHN0cmluZyBoYW5kbGVyIGludGVycHJldCB0aGUgZGVjbGFyYXRpb24gZmlyc3RcbiAgICAgIC8vIGJlZm9yZSBwcm9jZWVkaW5nLlxuICAgICAgLy9cbiAgICAgIC8vIFRPRE8oZW1pbHkpOiBQYXNzIGluIGEgY2FsbGJhY2sgd2hpY2ggZ2VuZXJhdGVzIENTUywgc2ltaWxhciB0b1xuICAgICAgLy8gaG93IG91ciBzZWxlY3RvciBoYW5kbGVycyB3b3JrLCBpbnN0ZWFkIG9mIHBhc3NpbmcgaW5cbiAgICAgIC8vIGBzZWxlY3RvckhhbmRsZXJzYCBhbmQgaGF2ZSB0aGVtIG1ha2UgY2FsbHMgdG8gYGdlbmVyYXRlQ1NTYFxuICAgICAgLy8gdGhlbXNlbHZlcy4gUmlnaHQgbm93LCB0aGlzIGlzIGltcHJhY3RpY2FsIGJlY2F1c2Ugb3VyIHN0cmluZ1xuICAgICAgLy8gaGFuZGxlcnMgYXJlIHZlcnkgc3BlY2lhbGl6ZWQgYW5kIGRvIGNvbXBsZXggdGhpbmdzLlxuICAgICAgZGVjbGFyYXRpb25zLnNldChrZXksIHN0cmluZ0hhbmRsZXJzW2tleV0oZGVjbGFyYXRpb25zLmdldChrZXkpLCBzZWxlY3RvckhhbmRsZXJzKSwgLy8gUHJlc2VydmUgb3JkZXIgaGVyZSwgc2luY2Ugd2UgYXJlIHJlYWxseSByZXBsYWNpbmcgYW5cbiAgICAgIC8vIHVucHJvY2Vzc2VkIHN0eWxlIHdpdGggYSBwcm9jZXNzZWQgc3R5bGUsIG5vdCBvdmVycmlkaW5nIGFuXG4gICAgICAvLyBlYXJsaWVyIHN0eWxlXG4gICAgICBmYWxzZSk7XG4gICAgfVxuICB9XG59O1xuXG52YXIgdHJhbnNmb3JtUnVsZSA9IGZ1bmN0aW9uIHRyYW5zZm9ybVJ1bGUoa2V5XG4vKiA6IHN0cmluZyAqL1xuLCB2YWx1ZVxuLyogOiBzdHJpbmcgKi9cbiwgdHJhbnNmb3JtVmFsdWVcbi8qIDogZnVuY3Rpb24gKi9cbikge1xuICByZXR1cm4gKFxuICAgIC8qIDogc3RyaW5nICovXG4gICAgXCJcIi5jb25jYXQoa2ViYWJpZnlTdHlsZU5hbWUoa2V5KSwgXCI6XCIpLmNvbmNhdCh0cmFuc2Zvcm1WYWx1ZShrZXksIHZhbHVlKSwgXCI7XCIpXG4gICk7XG59O1xuXG52YXIgYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyID0gZnVuY3Rpb24gYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyKGFjYywgdmFsKSB7XG4gIGFjY1t2YWxdID0gdHJ1ZTtcbiAgcmV0dXJuIGFjYztcbn07XG4vKipcbiAqIEdlbmVyYXRlIGEgQ1NTIHJ1bGVzZXQgd2l0aCB0aGUgc2VsZWN0b3IgYW5kIGNvbnRhaW5pbmcgdGhlIGRlY2xhcmF0aW9ucy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgdGhhdCB0aGUgZ2l2ZW4gZGVjbGFyYXRpb25zIGRvbid0IGNvbnRhaW4gYW55IHNwZWNpYWxcbiAqIGNoaWxkcmVuIChzdWNoIGFzIG1lZGlhIHF1ZXJpZXMsIHBzZXVkby1zZWxlY3RvcnMsIG9yIGRlc2NlbmRhbnQgc3R5bGVzKS5cbiAqXG4gKiBOb3RlIHRoYXQgdGhpcyBtZXRob2QgZG9lcyBub3QgZGVhbCB3aXRoIG5lc3RpbmcgdXNlZCBmb3IgZS5nLlxuICogcHN1ZWRvLXNlbGVjdG9ycyBvciBtZWRpYSBxdWVyaWVzLiBUaGF0IHJlc3BvbnNpYmlsaXR5IGlzIGxlZnQgdG8gIHRoZVxuICogYGdlbmVyYXRlQ1NTYCBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3I6IHRoZSBzZWxlY3RvciBhc3NvY2lhdGVkIHdpdGggdGhlIHJ1bGVzZXRcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWNsYXJhdGlvbnM6IGEgbWFwIGZyb20gY2FtZWxDYXNlZCBDU1MgcHJvcGVydHkgbmFtZSB0byBDU1NcbiAqICAgICBwcm9wZXJ0eSB2YWx1ZS5cbiAqIEBwYXJhbSB7T2JqZWN0LjxzdHJpbmcsIGZ1bmN0aW9uPn0gc3RyaW5nSGFuZGxlcnM6IGEgbWFwIGZyb20gY2FtZWxDYXNlZCBDU1NcbiAqICAgICBwcm9wZXJ0eSBuYW1lIHRvIGEgZnVuY3Rpb24gd2hpY2ggd2lsbCBtYXAgdGhlIGdpdmVuIHZhbHVlIHRvIHRoZSB2YWx1ZVxuICogICAgIHRoYXQgaXMgb3V0cHV0LlxuICogQHBhcmFtIHtib29sfSB1c2VJbXBvcnRhbnQ6IEEgYm9vbGVhbiBzYXlpbmcgd2hldGhlciB0byBhcHBlbmQgXCIhaW1wb3J0YW50XCJcbiAqICAgICB0byBlYWNoIG9mIHRoZSBDU1MgZGVjbGFyYXRpb25zLlxuICogQHJldHVybnMge3N0cmluZ30gQSBzdHJpbmcgb2YgcmF3IENTUy5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaFwiLCB7IGNvbG9yOiBcInJlZFwiIH0pXG4gKiAgICAtPiBcIi5ibGFoe2NvbG9yOiByZWQgIWltcG9ydGFudDt9XCJcbiAqICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5ibGFoXCIsIHsgY29sb3I6IFwicmVkXCIgfSwge30sIGZhbHNlKVxuICogICAgLT4gXCIuYmxhaHtjb2xvcjogcmVkfVwiXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaFwiLCB7IGNvbG9yOiBcInJlZFwiIH0sIHtjb2xvcjogYyA9PiBjLnRvVXBwZXJDYXNlfSlcbiAqICAgIC0+IFwiLmJsYWh7Y29sb3I6IFJFRH1cIlxuICogICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmJsYWg6aG92ZXJcIiwgeyBjb2xvcjogXCJyZWRcIiB9KVxuICogICAgLT4gXCIuYmxhaDpob3Zlcntjb2xvcjogcmVkfVwiXG4gKi9cblxuXG52YXIgZ2VuZXJhdGVDU1NSdWxlc2V0ID0gZnVuY3Rpb24gZ2VuZXJhdGVDU1NSdWxlc2V0KHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBkZWNsYXJhdGlvbnNcbi8qIDogT3JkZXJlZEVsZW1lbnRzICovXG4sIHN0cmluZ0hhbmRsZXJzXG4vKiA6IFN0cmluZ0hhbmRsZXJzICovXG4sIHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIC8vIE11dGF0ZXMgZGVjbGFyYXRpb25zXG4gIHJ1blN0cmluZ0hhbmRsZXJzKGRlY2xhcmF0aW9ucywgc3RyaW5nSGFuZGxlcnMsIHNlbGVjdG9ySGFuZGxlcnMpO1xuICB2YXIgb3JpZ2luYWxFbGVtZW50cyA9IE9iamVjdC5rZXlzKGRlY2xhcmF0aW9ucy5lbGVtZW50cykucmVkdWNlKGFycmF5VG9PYmplY3RLZXlzUmVkdWNlciwgT2JqZWN0LmNyZWF0ZShudWxsKSk7IC8vIE5PVEUoZW1pbHkpOiBUaGlzIG11dGF0ZXMgaGFuZGxlZERlY2xhcmF0aW9ucy5lbGVtZW50cy5cblxuICB2YXIgcHJlZml4ZWRFbGVtZW50cyA9IHByZWZpeEFsbChkZWNsYXJhdGlvbnMuZWxlbWVudHMpO1xuICB2YXIgZWxlbWVudE5hbWVzID0gT2JqZWN0LmtleXMocHJlZml4ZWRFbGVtZW50cyk7XG5cbiAgaWYgKGVsZW1lbnROYW1lcy5sZW5ndGggIT09IGRlY2xhcmF0aW9ucy5rZXlPcmRlci5sZW5ndGgpIHtcbiAgICAvLyBUaGVyZSBhcmUgc29tZSBwcmVmaXhlZCB2YWx1ZXMsIHNvIHdlIG5lZWQgdG8gZmlndXJlIG91dCBob3cgdG8gc29ydFxuICAgIC8vIHRoZW0uXG4gICAgLy9cbiAgICAvLyBMb29wIHRocm91Z2ggcHJlZml4ZWRFbGVtZW50cywgbG9va2luZyBmb3IgYW55dGhpbmcgdGhhdCBpcyBub3QgaW5cbiAgICAvLyBzb3J0T3JkZXIsIHdoaWNoIG1lYW5zIGl0IHdhcyBhZGRlZCBieSBwcmVmaXhBbGwuIFRoaXMgbWVhbnMgdGhhdCB3ZVxuICAgIC8vIG5lZWQgdG8gZmlndXJlIG91dCB3aGVyZSBpdCBzaG91bGQgYXBwZWFyIGluIHRoZSBzb3J0T3JkZXIuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtZW50TmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICghb3JpZ2luYWxFbGVtZW50c1tlbGVtZW50TmFtZXNbaV1dKSB7XG4gICAgICAgIC8vIFRoaXMgZWxlbWVudCBpcyBub3QgaW4gdGhlIHNvcnRPcmRlciwgd2hpY2ggbWVhbnMgaXQgaXMgYSBwcmVmaXhlZFxuICAgICAgICAvLyB2YWx1ZSB0aGF0IHdhcyBhZGRlZCBieSBwcmVmaXhBbGwuIExldCdzIHRyeSB0byBmaWd1cmUgb3V0IHdoZXJlIGl0XG4gICAgICAgIC8vIGdvZXMuXG4gICAgICAgIHZhciBvcmlnaW5hbFN0eWxlID0gdm9pZCAwO1xuXG4gICAgICAgIGlmIChlbGVtZW50TmFtZXNbaV1bMF0gPT09ICdXJykge1xuICAgICAgICAgIC8vIFRoaXMgaXMgYSBXZWJraXQtcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJXZWJraXRUcmFuc2l0aW9uXCIuIExldCdzXG4gICAgICAgICAgLy8gZmluZCBpdHMgb3JpZ2luYWwgc3R5bGUncyBzb3J0IG9yZGVyLlxuICAgICAgICAgIG9yaWdpbmFsU3R5bGUgPSBlbGVtZW50TmFtZXNbaV1bNl0udG9Mb3dlckNhc2UoKSArIGVsZW1lbnROYW1lc1tpXS5zbGljZSg3KTtcbiAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50TmFtZXNbaV1bMV0gPT09ICdvJykge1xuICAgICAgICAgIC8vIFRoaXMgaXMgYSBNb3otcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJNb3pUcmFuc2l0aW9uXCIuIFdlIGNoZWNrXG4gICAgICAgICAgLy8gdGhlIHNlY29uZCBjaGFyYWN0ZXIgdG8gYXZvaWQgY29sbGlkaW5nIHdpdGggTXMtcHJlZml4ZWRcbiAgICAgICAgICAvLyBzdHlsZXMuIExldCdzIGZpbmQgaXRzIG9yaWdpbmFsIHN0eWxlJ3Mgc29ydCBvcmRlci5cbiAgICAgICAgICBvcmlnaW5hbFN0eWxlID0gZWxlbWVudE5hbWVzW2ldWzNdLnRvTG93ZXJDYXNlKCkgKyBlbGVtZW50TmFtZXNbaV0uc2xpY2UoNCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gaWYgKGVsZW1lbnROYW1lc1tpXVsxXSA9PT0gJ3MnKSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBhIE1zLXByZWZpeGVkIHN0eWxlLCBsaWtlIFwiTXNUcmFuc2l0aW9uXCIuXG4gICAgICAgICAgb3JpZ2luYWxTdHlsZSA9IGVsZW1lbnROYW1lc1tpXVsyXS50b0xvd2VyQ2FzZSgpICsgZWxlbWVudE5hbWVzW2ldLnNsaWNlKDMpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9yaWdpbmFsU3R5bGUgJiYgb3JpZ2luYWxFbGVtZW50c1tvcmlnaW5hbFN0eWxlXSkge1xuICAgICAgICAgIHZhciBvcmlnaW5hbEluZGV4ID0gZGVjbGFyYXRpb25zLmtleU9yZGVyLmluZGV4T2Yob3JpZ2luYWxTdHlsZSk7XG4gICAgICAgICAgZGVjbGFyYXRpb25zLmtleU9yZGVyLnNwbGljZShvcmlnaW5hbEluZGV4LCAwLCBlbGVtZW50TmFtZXNbaV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFdlIGRvbid0IGtub3cgd2hhdCB0aGUgb3JpZ2luYWwgc3R5bGUgd2FzLCBzbyBzb3J0IGl0IHRvXG4gICAgICAgICAgLy8gdG9wLiBUaGlzIGNhbiBoYXBwZW4gZm9yIHN0eWxlcyB0aGF0IGFyZSBhZGRlZCB0aGF0IGRvbid0XG4gICAgICAgICAgLy8gaGF2ZSB0aGUgc2FtZSBiYXNlIG5hbWUgYXMgdGhlIG9yaWdpbmFsIHN0eWxlLlxuICAgICAgICAgIGRlY2xhcmF0aW9ucy5rZXlPcmRlci51bnNoaWZ0KGVsZW1lbnROYW1lc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB2YXIgdHJhbnNmb3JtVmFsdWUgPSB1c2VJbXBvcnRhbnQgPT09IGZhbHNlID8gc3RyaW5naWZ5VmFsdWUgOiBzdHJpbmdpZnlBbmRJbXBvcnRhbnRpZnlWYWx1ZTtcbiAgdmFyIHJ1bGVzID0gW107XG5cbiAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGRlY2xhcmF0aW9ucy5rZXlPcmRlci5sZW5ndGg7IF9pKyspIHtcbiAgICB2YXIga2V5ID0gZGVjbGFyYXRpb25zLmtleU9yZGVyW19pXTtcbiAgICB2YXIgdmFsdWUgPSBwcmVmaXhlZEVsZW1lbnRzW2tleV07XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIC8vIGlubGluZS1zdHlsZS1wcmVmaXhlciByZXR1cm5zIGFuIGFycmF5IHdoZW4gdGhlcmUgc2hvdWxkIGJlXG4gICAgICAvLyBtdWx0aXBsZSBydWxlcyBmb3IgdGhlIHNhbWUga2V5LiBIZXJlIHdlIGZsYXR0ZW4gdG8gbXVsdGlwbGVcbiAgICAgIC8vIHBhaXJzIHdpdGggdGhlIHNhbWUga2V5LlxuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICBydWxlcy5wdXNoKHRyYW5zZm9ybVJ1bGUoa2V5LCB2YWx1ZVtqXSwgdHJhbnNmb3JtVmFsdWUpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcnVsZXMucHVzaCh0cmFuc2Zvcm1SdWxlKGtleSwgdmFsdWUsIHRyYW5zZm9ybVZhbHVlKSk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHJ1bGVzLmxlbmd0aCkge1xuICAgIHJldHVybiBcIlwiLmNvbmNhdChzZWxlY3RvciwgXCJ7XCIpLmNvbmNhdChydWxlcy5qb2luKFwiXCIpLCBcIn1cIik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbn07XG5cbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNoZWV0RGVmaW5pdGlvbiwgU2hlZXREZWZpbml0aW9ucyB9IGZyb20gJy4vaW5kZXguanMnO1xuaW1wb3J0IHR5cGUgeyBNYXliZVNoZWV0RGVmaW5pdGlvbiB9IGZyb20gJy4vZXhwb3J0cy5qcyc7XG5pbXBvcnQgdHlwZSB7IFNlbGVjdG9ySGFuZGxlciB9IGZyb20gJy4vZ2VuZXJhdGUuanMnO1xuKi9cbi8vIFRoZSBjdXJyZW50IDxzdHlsZT4gdGFnIHdlIGFyZSBpbnNlcnRpbmcgaW50bywgb3IgbnVsbCBpZiB3ZSBoYXZlbid0XG4vLyBpbnNlcnRlZCBhbnl0aGluZyB5ZXQuIFdlIGNvdWxkIGZpbmQgdGhpcyBlYWNoIHRpbWUgdXNpbmdcbi8vIGBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1hcGhyb2RpdGVcIl0pYCwgYnV0IGhvbGRpbmcgb250byBpdCBpc1xuLy8gZmFzdGVyLlxuXG52YXIgc3R5bGVUYWdcbi8qIDogP0hUTUxTdHlsZUVsZW1lbnQgKi9cbj0gbnVsbDsgLy8gSW5qZWN0IGEgc2V0IG9mIHJ1bGVzIGludG8gYSA8c3R5bGU+IHRhZyBpbiB0aGUgaGVhZCBvZiB0aGUgZG9jdW1lbnQuIFRoaXNcbi8vIHdpbGwgYXV0b21hdGljYWxseSBjcmVhdGUgYSBzdHlsZSB0YWcgYW5kIHRoZW4gY29udGludWUgdG8gdXNlIGl0IGZvclxuLy8gbXVsdGlwbGUgaW5qZWN0aW9ucy4gSXQgd2lsbCBhbHNvIHVzZSBhIHN0eWxlIHRhZyB3aXRoIHRoZSBgZGF0YS1hcGhyb2RpdGVgXG4vLyB0YWcgb24gaXQgaWYgdGhhdCBleGlzdHMgaW4gdGhlIERPTS4gVGhpcyBjb3VsZCBiZSB1c2VkIGZvciBlLmcuIHJldXNpbmcgdGhlXG4vLyBzYW1lIHN0eWxlIHRhZyB0aGF0IHNlcnZlci1zaWRlIHJlbmRlcmluZyBpbnNlcnRzLlxuXG52YXIgaW5qZWN0U3R5bGVUYWcgPSBmdW5jdGlvbiBpbmplY3RTdHlsZVRhZyhjc3NSdWxlc1xuLyogOiBzdHJpbmdbXSAqL1xuKSB7XG4gIGlmIChzdHlsZVRhZyA9PSBudWxsKSB7XG4gICAgLy8gVHJ5IHRvIGZpbmQgYSBzdHlsZSB0YWcgd2l0aCB0aGUgYGRhdGEtYXBocm9kaXRlYCBhdHRyaWJ1dGUgZmlyc3QuXG4gICAgc3R5bGVUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1hcGhyb2RpdGVdXCIpXG4gICAgLyogOiBhbnkgKi9cbiAgICA7IC8vIElmIHRoYXQgZG9lc24ndCB3b3JrLCBnZW5lcmF0ZSBhIG5ldyBzdHlsZSB0YWcuXG5cbiAgICBpZiAoc3R5bGVUYWcgPT0gbnVsbCkge1xuICAgICAgLy8gVGFrZW4gZnJvbVxuICAgICAgLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy81MjQ2OTYvaG93LXRvLWNyZWF0ZS1hLXN0eWxlLXRhZy13aXRoLWphdmFzY3JpcHRcbiAgICAgIHZhciBoZWFkID0gZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdO1xuICAgICAgc3R5bGVUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgc3R5bGVUYWcudHlwZSA9ICd0ZXh0L2Nzcyc7XG4gICAgICBzdHlsZVRhZy5zZXRBdHRyaWJ1dGUoXCJkYXRhLWFwaHJvZGl0ZVwiLCBcIlwiKTtcbiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGVUYWcpO1xuICAgIH1cbiAgfSAvLyAkRmxvd0ZpeE1lXG5cblxuICB2YXIgc2hlZXQgPSBzdHlsZVRhZy5zdHlsZVNoZWV0IHx8IHN0eWxlVGFnLnNoZWV0XG4gIC8qIDogYW55ICovXG4gIDtcblxuICBpZiAoc2hlZXQuaW5zZXJ0UnVsZSkge1xuICAgIHZhciBudW1SdWxlcyA9IHNoZWV0LmNzc1J1bGVzLmxlbmd0aDtcbiAgICBjc3NSdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChydWxlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBzaGVldC5pbnNlcnRSdWxlKHJ1bGUsIG51bVJ1bGVzKTtcbiAgICAgICAgbnVtUnVsZXMgKz0gMTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsvLyBUaGUgc2VsZWN0b3IgZm9yIHRoaXMgcnVsZSB3YXNuJ3QgY29tcGF0aWJsZSB3aXRoIHRoZSBicm93c2VyXG4gICAgICB9XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGVUYWcuaW5uZXJUZXh0ID0gKHN0eWxlVGFnLmlubmVyVGV4dCB8fCAnJykgKyBjc3NSdWxlcy5qb2luKCcnKTtcbiAgfVxufTsgLy8gQ3VzdG9tIGhhbmRsZXJzIGZvciBzdHJpbmdpZnlpbmcgQ1NTIHZhbHVlcyB0aGF0IGhhdmUgc2lkZSBlZmZlY3RzXG4vLyAoc3VjaCBhcyBmb250RmFtaWx5LCB3aGljaCBjYW4gY2F1c2UgQGZvbnQtZmFjZSBydWxlcyB0byBiZSBpbmplY3RlZClcblxuXG52YXIgc3RyaW5nSGFuZGxlcnMgPSB7XG4gIC8vIFdpdGggZm9udEZhbWlseSB3ZSBsb29rIGZvciBvYmplY3RzIHRoYXQgYXJlIHBhc3NlZCBpbiBhbmQgaW50ZXJwcmV0XG4gIC8vIHRoZW0gYXMgQGZvbnQtZmFjZSBydWxlcyB0aGF0IHdlIG5lZWQgdG8gaW5qZWN0LiBUaGUgdmFsdWUgb2YgZm9udEZhbWlseVxuICAvLyBjYW4gZWl0aGVyIGJlIGEgc3RyaW5nIChhcyBub3JtYWwpLCBhbiBvYmplY3QgKGEgc2luZ2xlIGZvbnQgZmFjZSksIG9yXG4gIC8vIGFuIGFycmF5IG9mIG9iamVjdHMgYW5kIHN0cmluZ3MuXG4gIGZvbnRGYW1pbHk6IGZ1bmN0aW9uIGZvbnRGYW1pbHkodmFsKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuICAgICAgdmFyIG5hbWVNYXAgPSB7fTtcbiAgICAgIHZhbC5mb3JFYWNoKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgIG5hbWVNYXBbZm9udEZhbWlseSh2KV0gPSB0cnVlO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXMobmFtZU1hcCkuam9pbihcIixcIik7XG4gICAgfSBlbHNlIGlmIChfdHlwZW9mKHZhbCkgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIGluamVjdFN0eWxlT25jZSh2YWwuc3JjLCBcIkBmb250LWZhY2VcIiwgW3ZhbF0sIGZhbHNlKTtcbiAgICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodmFsLmZvbnRGYW1pbHksIFwiXFxcIlwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH0sXG4gIC8vIFdpdGggYW5pbWF0aW9uTmFtZSB3ZSBsb29rIGZvciBhbiBvYmplY3QgdGhhdCBjb250YWlucyBrZXlmcmFtZXMgYW5kXG4gIC8vIGluamVjdCB0aGVtIGFzIGFuIGBAa2V5ZnJhbWVzYCBibG9jaywgcmV0dXJuaW5nIGEgdW5pcXVlbHkgZ2VuZXJhdGVkXG4gIC8vIG5hbWUuIFRoZSBrZXlmcmFtZXMgb2JqZWN0IHNob3VsZCBsb29rIGxpa2VcbiAgLy8gIGFuaW1hdGlvbk5hbWU6IHtcbiAgLy8gICAgZnJvbToge1xuICAvLyAgICAgIGxlZnQ6IDAsXG4gIC8vICAgICAgdG9wOiAwLFxuICAvLyAgICB9LFxuICAvLyAgICAnNTAlJzoge1xuICAvLyAgICAgIGxlZnQ6IDE1LFxuICAvLyAgICAgIHRvcDogNSxcbiAgLy8gICAgfSxcbiAgLy8gICAgdG86IHtcbiAgLy8gICAgICBsZWZ0OiAyMCxcbiAgLy8gICAgICB0b3A6IDIwLFxuICAvLyAgICB9XG4gIC8vICB9XG4gIC8vIFRPRE8oZW1pbHkpOiBgc3RyaW5nSGFuZGxlcnNgIGRvZXNuJ3QgbGV0IHVzIHJlbmFtZSB0aGUga2V5LCBzbyBJIGhhdmVcbiAgLy8gdG8gdXNlIGBhbmltYXRpb25OYW1lYCBoZXJlLiBJbXByb3ZlIHRoYXQgc28gd2UgY2FuIGNhbGwgdGhpc1xuICAvLyBgYW5pbWF0aW9uYCBpbnN0ZWFkIG9mIGBhbmltYXRpb25OYW1lYC5cbiAgYW5pbWF0aW9uTmFtZTogZnVuY3Rpb24gYW5pbWF0aW9uTmFtZSh2YWwsIHNlbGVjdG9ySGFuZGxlcnMpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICByZXR1cm4gdmFsLm1hcChmdW5jdGlvbiAodikge1xuICAgICAgICByZXR1cm4gYW5pbWF0aW9uTmFtZSh2LCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgICAgIH0pLmpvaW4oXCIsXCIpO1xuICAgIH0gZWxzZSBpZiAoX3R5cGVvZih2YWwpID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAvLyBHZW5lcmF0ZSBhIHVuaXF1ZSBuYW1lIGJhc2VkIG9uIHRoZSBoYXNoIG9mIHRoZSBvYmplY3QuIFdlIGNhbid0XG4gICAgICAvLyBqdXN0IHVzZSB0aGUgaGFzaCBiZWNhdXNlIHRoZSBuYW1lIGNhbid0IHN0YXJ0IHdpdGggYSBudW1iZXIuXG4gICAgICAvLyBUT0RPKGVtaWx5KTogdGhpcyBwcm9iYWJseSBtYWtlcyBkZWJ1Z2dpbmcgaGFyZCwgYWxsb3cgYSBjdXN0b21cbiAgICAgIC8vIG5hbWU/XG4gICAgICB2YXIgbmFtZSA9IFwia2V5ZnJhbWVfXCIuY29uY2F0KGhhc2hPYmplY3QodmFsKSk7IC8vIFNpbmNlIGtleWZyYW1lcyBuZWVkIDMgbGF5ZXJzIG9mIG5lc3RpbmcsIHdlIHVzZSBgZ2VuZXJhdGVDU1NgIHRvXG4gICAgICAvLyBidWlsZCB0aGUgaW5uZXIgbGF5ZXJzIGFuZCB3cmFwIGl0IGluIGBAa2V5ZnJhbWVzYCBvdXJzZWx2ZXMuXG5cbiAgICAgIHZhciBmaW5hbFZhbCA9IFwiQGtleWZyYW1lcyBcIi5jb25jYXQobmFtZSwgXCJ7XCIpOyAvLyBUT0RPIHNlZSBpZiB3ZSBjYW4gZmluZCBhIHdheSB3aGVyZSBjaGVja2luZyBmb3IgT3JkZXJlZEVsZW1lbnRzXG4gICAgICAvLyBoZXJlIGlzIG5vdCBuZWNlc3NhcnkuIEFsdGVybmF0aXZlbHksIHBlcmhhcHMgd2Ugc2hvdWxkIGhhdmUgYVxuICAgICAgLy8gdXRpbGl0eSBtZXRob2QgdGhhdCBjYW4gaXRlcmF0ZSBvdmVyIGVpdGhlciBhIHBsYWluIG9iamVjdCwgYW5cbiAgICAgIC8vIGluc3RhbmNlIG9mIE9yZGVyZWRFbGVtZW50cywgb3IgYSBNYXAsIGFuZCB0aGVuIHVzZSB0aGF0IGhlcmUgYW5kXG4gICAgICAvLyBlbHNld2hlcmUuXG5cbiAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgICAgdmFsLmZvckVhY2goZnVuY3Rpb24gKHZhbFZhbCwgdmFsS2V5KSB7XG4gICAgICAgICAgZmluYWxWYWwgKz0gZ2VuZXJhdGVDU1ModmFsS2V5LCBbdmFsVmFsXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIGZhbHNlKS5qb2luKCcnKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3Qua2V5cyh2YWwpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgIGZpbmFsVmFsICs9IGdlbmVyYXRlQ1NTKGtleSwgW3ZhbFtrZXldXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIGZhbHNlKS5qb2luKCcnKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGZpbmFsVmFsICs9ICd9JztcbiAgICAgIGluamVjdEdlbmVyYXRlZENTU09uY2UobmFtZSwgW2ZpbmFsVmFsXSk7XG4gICAgICByZXR1cm4gbmFtZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH1cbn07IC8vIFRoaXMgaXMgYSBtYXAgZnJvbSBBcGhyb2RpdGUncyBnZW5lcmF0ZWQgY2xhc3MgbmFtZXMgdG8gYHRydWVgIChhY3RpbmcgYXMgYVxuLy8gc2V0IG9mIGNsYXNzIG5hbWVzKVxuXG52YXIgYWxyZWFkeUluamVjdGVkID0ge307IC8vIFRoaXMgaXMgdGhlIGJ1ZmZlciBvZiBzdHlsZXMgd2hpY2ggaGF2ZSBub3QgeWV0IGJlZW4gZmx1c2hlZC5cblxudmFyIGluamVjdGlvbkJ1ZmZlclxuLyogOiBzdHJpbmdbXSAqL1xuPSBbXTsgLy8gQSBmbGFnIHRvIHRlbGwgaWYgd2UgYXJlIGFscmVhZHkgYnVmZmVyaW5nIHN0eWxlcy4gVGhpcyBjb3VsZCBoYXBwZW4gZWl0aGVyXG4vLyBiZWNhdXNlIHdlIHNjaGVkdWxlZCBhIGZsdXNoIGNhbGwgYWxyZWFkeSwgc28gbmV3bHkgYWRkZWQgc3R5bGVzIHdpbGxcbi8vIGFscmVhZHkgYmUgZmx1c2hlZCwgb3IgYmVjYXVzZSB3ZSBhcmUgc3RhdGljYWxseSBidWZmZXJpbmcgb24gdGhlIHNlcnZlci5cblxudmFyIGlzQnVmZmVyaW5nID0gZmFsc2U7XG5cbnZhciBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlID0gZnVuY3Rpb24gaW5qZWN0R2VuZXJhdGVkQ1NTT25jZShrZXksIGdlbmVyYXRlZENTUykge1xuICB2YXIgX2luamVjdGlvbkJ1ZmZlcjtcblxuICBpZiAoYWxyZWFkeUluamVjdGVkW2tleV0pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoIWlzQnVmZmVyaW5nKSB7XG4gICAgLy8gV2Ugc2hvdWxkIG5ldmVyIGJlIGF1dG9tYXRpY2FsbHkgYnVmZmVyaW5nIG9uIHRoZSBzZXJ2ZXIgKG9yIGFueVxuICAgIC8vIHBsYWNlIHdpdGhvdXQgYSBkb2N1bWVudCksIHNvIGd1YXJkIGFnYWluc3QgdGhhdC5cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYXV0b21hdGljYWxseSBidWZmZXIgd2l0aG91dCBhIGRvY3VtZW50XCIpO1xuICAgIH0gLy8gSWYgd2UncmUgbm90IGFscmVhZHkgYnVmZmVyaW5nLCBzY2hlZHVsZSBhIGNhbGwgdG8gZmx1c2ggdGhlXG4gICAgLy8gY3VycmVudCBzdHlsZXMuXG5cblxuICAgIGlzQnVmZmVyaW5nID0gdHJ1ZTtcbiAgICBhc2FwKGZsdXNoVG9TdHlsZVRhZyk7XG4gIH1cblxuICAoX2luamVjdGlvbkJ1ZmZlciA9IGluamVjdGlvbkJ1ZmZlcikucHVzaC5hcHBseShfaW5qZWN0aW9uQnVmZmVyLCBfdG9Db25zdW1hYmxlQXJyYXkoZ2VuZXJhdGVkQ1NTKSk7XG5cbiAgYWxyZWFkeUluamVjdGVkW2tleV0gPSB0cnVlO1xufTtcblxudmFyIGluamVjdFN0eWxlT25jZSA9IGZ1bmN0aW9uIGluamVjdFN0eWxlT25jZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBkZWZpbml0aW9uc1xuLyogOiBTaGVldERlZmluaXRpb25bXSAqL1xuLCB1c2VJbXBvcnRhbnRcbi8qIDogYm9vbGVhbiAqL1xuKSB7XG4gIHZhciBzZWxlY3RvckhhbmRsZXJzXG4gIC8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbiAgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IFtdO1xuXG4gIGlmIChhbHJlYWR5SW5qZWN0ZWRba2V5XSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBnZW5lcmF0ZWQgPSBnZW5lcmF0ZUNTUyhzZWxlY3RvciwgZGVmaW5pdGlvbnMsIHNlbGVjdG9ySGFuZGxlcnMsIHN0cmluZ0hhbmRsZXJzLCB1c2VJbXBvcnRhbnQpO1xuICBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlKGtleSwgZ2VuZXJhdGVkKTtcbn07XG52YXIgcmVzZXQgPSBmdW5jdGlvbiByZXNldCgpIHtcbiAgaW5qZWN0aW9uQnVmZmVyID0gW107XG4gIGFscmVhZHlJbmplY3RlZCA9IHt9O1xuICBpc0J1ZmZlcmluZyA9IGZhbHNlO1xuICBzdHlsZVRhZyA9IG51bGw7XG59O1xudmFyIHJlc2V0SW5qZWN0ZWRTdHlsZSA9IGZ1bmN0aW9uIHJlc2V0SW5qZWN0ZWRTdHlsZShrZXlcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgZGVsZXRlIGFscmVhZHlJbmplY3RlZFtrZXldO1xufTtcbnZhciBnZXRCdWZmZXJlZFN0eWxlcyA9IGZ1bmN0aW9uIGdldEJ1ZmZlcmVkU3R5bGVzKCkge1xuICByZXR1cm4gaW5qZWN0aW9uQnVmZmVyO1xufTtcbnZhciBzdGFydEJ1ZmZlcmluZyA9IGZ1bmN0aW9uIHN0YXJ0QnVmZmVyaW5nKCkge1xuICBpZiAoaXNCdWZmZXJpbmcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYnVmZmVyIHdoaWxlIGFscmVhZHkgYnVmZmVyaW5nXCIpO1xuICB9XG5cbiAgaXNCdWZmZXJpbmcgPSB0cnVlO1xufTtcblxudmFyIGZsdXNoVG9BcnJheSA9IGZ1bmN0aW9uIGZsdXNoVG9BcnJheSgpIHtcbiAgaXNCdWZmZXJpbmcgPSBmYWxzZTtcbiAgdmFyIHJldCA9IGluamVjdGlvbkJ1ZmZlcjtcbiAgaW5qZWN0aW9uQnVmZmVyID0gW107XG4gIHJldHVybiByZXQ7XG59O1xuXG52YXIgZmx1c2hUb1N0cmluZyA9IGZ1bmN0aW9uIGZsdXNoVG9TdHJpbmcoKSB7XG4gIHJldHVybiBmbHVzaFRvQXJyYXkoKS5qb2luKCcnKTtcbn07XG52YXIgZmx1c2hUb1N0eWxlVGFnID0gZnVuY3Rpb24gZmx1c2hUb1N0eWxlVGFnKCkge1xuICB2YXIgY3NzUnVsZXMgPSBmbHVzaFRvQXJyYXkoKTtcblxuICBpZiAoY3NzUnVsZXMubGVuZ3RoID4gMCkge1xuICAgIGluamVjdFN0eWxlVGFnKGNzc1J1bGVzKTtcbiAgfVxufTtcbnZhciBnZXRSZW5kZXJlZENsYXNzTmFtZXMgPSBmdW5jdGlvbiBnZXRSZW5kZXJlZENsYXNzTmFtZXMoKVxuLyogOiBzdHJpbmdbXSAqL1xue1xuICByZXR1cm4gT2JqZWN0LmtleXMoYWxyZWFkeUluamVjdGVkKTtcbn07XG52YXIgYWRkUmVuZGVyZWRDbGFzc05hbWVzID0gZnVuY3Rpb24gYWRkUmVuZGVyZWRDbGFzc05hbWVzKGNsYXNzTmFtZXNcbi8qIDogc3RyaW5nW10gKi9cbikge1xuICBjbGFzc05hbWVzLmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGFscmVhZHlJbmplY3RlZFtjbGFzc05hbWVdID0gdHJ1ZTtcbiAgfSk7XG59O1xuXG52YXIgaXNWYWxpZFN0eWxlRGVmaW5pdGlvbiA9IGZ1bmN0aW9uIGlzVmFsaWRTdHlsZURlZmluaXRpb24oZGVmXG4vKiA6IE9iamVjdCAqL1xuKSB7XG4gIHJldHVybiBcIl9kZWZpbml0aW9uXCIgaW4gZGVmICYmIFwiX25hbWVcIiBpbiBkZWYgJiYgXCJfbGVuXCIgaW4gZGVmO1xufTtcblxudmFyIHByb2Nlc3NTdHlsZURlZmluaXRpb25zID0gZnVuY3Rpb24gcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMoc3R5bGVEZWZpbml0aW9uc1xuLyogOiBhbnlbXSAqL1xuLCBjbGFzc05hbWVCaXRzXG4vKiA6IHN0cmluZ1tdICovXG4sIGRlZmluaXRpb25CaXRzXG4vKiA6IE9iamVjdFtdICovXG4sIGxlbmd0aFxuLyogOiBudW1iZXIgKi9cbilcbi8qIDogbnVtYmVyICovXG57XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVEZWZpbml0aW9ucy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIC8vIEZpbHRlciBvdXQgZmFsc3kgdmFsdWVzIGZyb20gdGhlIGlucHV0LCB0byBhbGxvdyBmb3JcbiAgICAvLyBgY3NzKGEsIHRlc3QgJiYgYylgXG4gICAgaWYgKHN0eWxlRGVmaW5pdGlvbnNbaV0pIHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHN0eWxlRGVmaW5pdGlvbnNbaV0pKSB7XG4gICAgICAgIC8vIFdlJ3ZlIGVuY291bnRlcmVkIGFuIGFycmF5LCBzbyBsZXQncyByZWN1cnNlXG4gICAgICAgIGxlbmd0aCArPSBwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyhzdHlsZURlZmluaXRpb25zW2ldLCBjbGFzc05hbWVCaXRzLCBkZWZpbml0aW9uQml0cywgbGVuZ3RoKTtcbiAgICAgIH0gZWxzZSBpZiAoaXNWYWxpZFN0eWxlRGVmaW5pdGlvbihzdHlsZURlZmluaXRpb25zW2ldKSkge1xuICAgICAgICBjbGFzc05hbWVCaXRzLnB1c2goc3R5bGVEZWZpbml0aW9uc1tpXS5fbmFtZSk7XG4gICAgICAgIGRlZmluaXRpb25CaXRzLnB1c2goc3R5bGVEZWZpbml0aW9uc1tpXS5fZGVmaW5pdGlvbik7XG4gICAgICAgIGxlbmd0aCArPSBzdHlsZURlZmluaXRpb25zW2ldLl9sZW47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIFN0eWxlIERlZmluaXRpb246IFN0eWxlcyBzaG91bGQgYmUgZGVmaW5lZCB1c2luZyB0aGUgU3R5bGVTaGVldC5jcmVhdGUgbWV0aG9kLlwiKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbGVuZ3RoO1xufTtcbi8qKlxuICogSW5qZWN0IHN0eWxlcyBhc3NvY2lhdGVkIHdpdGggdGhlIHBhc3NlZCBzdHlsZSBkZWZpbml0aW9uIG9iamVjdHMsIGFuZCByZXR1cm5cbiAqIGFuIGFzc29jaWF0ZWQgQ1NTIGNsYXNzIG5hbWUuXG4gKlxuICogQHBhcmFtIHtib29sZWFufSB1c2VJbXBvcnRhbnQgSWYgdHJ1ZSwgd2lsbCBhcHBlbmQgIWltcG9ydGFudCB0byBnZW5lcmF0ZWRcbiAqICAgICBDU1Mgb3V0cHV0LiBlLmcuIHtjb2xvcjogcmVkfSAtPiBcImNvbG9yOiByZWQgIWltcG9ydGFudFwiLlxuICogQHBhcmFtIHsoT2JqZWN0fE9iamVjdFtdKVtdfSBzdHlsZURlZmluaXRpb25zIHN0eWxlIGRlZmluaXRpb24gb2JqZWN0cywgb3JcbiAqICAgICBhcmJpdHJhcmlseSBuZXN0ZWQgYXJyYXlzIG9mIHRoZW0sIGFzIHJldHVybmVkIGFzIHByb3BlcnRpZXMgb2YgdGhlXG4gKiAgICAgcmV0dXJuIHZhbHVlIG9mIFN0eWxlU2hlZXQuY3JlYXRlKCkuXG4gKi9cblxuXG52YXIgaW5qZWN0QW5kR2V0Q2xhc3NOYW1lID0gZnVuY3Rpb24gaW5qZWN0QW5kR2V0Q2xhc3NOYW1lKHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4sIHN0eWxlRGVmaW5pdGlvbnNcbi8qIDogTWF5YmVTaGVldERlZmluaXRpb25bXSAqL1xuLCBzZWxlY3RvckhhbmRsZXJzXG4vKiA6IFNlbGVjdG9ySGFuZGxlcltdICovXG4pXG4vKiA6IHN0cmluZyAqL1xue1xuICB2YXIgY2xhc3NOYW1lQml0cyA9IFtdO1xuICB2YXIgZGVmaW5pdGlvbkJpdHMgPSBbXTsgLy8gTXV0YXRlcyBjbGFzc05hbWVCaXRzIGFuZCBkZWZpbml0aW9uQml0cyBhbmQgcmV0dXJucyBhIGxlbmd0aCB3aGljaCB3ZVxuICAvLyB3aWxsIGFwcGVuZCB0byB0aGUgaGFzaCB0byBkZWNyZWFzZSB0aGUgY2hhbmNlIG9mIGhhc2ggY29sbGlzaW9ucy5cblxuICB2YXIgbGVuZ3RoID0gcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMoc3R5bGVEZWZpbml0aW9ucywgY2xhc3NOYW1lQml0cywgZGVmaW5pdGlvbkJpdHMsIDApOyAvLyBCcmVhayBpZiB0aGVyZSBhcmVuJ3QgYW55IHZhbGlkIHN0eWxlcy5cblxuICBpZiAoY2xhc3NOYW1lQml0cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuXG4gIHZhciBjbGFzc05hbWU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVCaXRzLmxlbmd0aCA9PT0gMSA/IFwiX1wiLmNvbmNhdChjbGFzc05hbWVCaXRzWzBdKSA6IFwiX1wiLmNvbmNhdChoYXNoU3RyaW5nKGNsYXNzTmFtZUJpdHMuam9pbigpKSkuY29uY2F0KChsZW5ndGggJSAzNikudG9TdHJpbmcoMzYpKTtcbiAgfSBlbHNlIHtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVCaXRzLmpvaW4oXCItb19PLVwiKTtcbiAgfVxuXG4gIGluamVjdFN0eWxlT25jZShjbGFzc05hbWUsIFwiLlwiLmNvbmNhdChjbGFzc05hbWUpLCBkZWZpbml0aW9uQml0cywgdXNlSW1wb3J0YW50LCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgcmV0dXJuIGNsYXNzTmFtZTtcbn07XG5cbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNlbGVjdG9ySGFuZGxlciB9IGZyb20gJy4vZ2VuZXJhdGUuanMnO1xuZXhwb3J0IHR5cGUgU2hlZXREZWZpbml0aW9uID0geyBbaWQ6c3RyaW5nXTogYW55IH07XG5leHBvcnQgdHlwZSBTaGVldERlZmluaXRpb25zID0gU2hlZXREZWZpbml0aW9uIHwgU2hlZXREZWZpbml0aW9uW107XG50eXBlIFJlbmRlckZ1bmN0aW9uID0gKCkgPT4gc3RyaW5nO1xudHlwZSBFeHRlbnNpb24gPSB7XG4gICAgc2VsZWN0b3JIYW5kbGVyOiBTZWxlY3RvckhhbmRsZXJcbn07XG5leHBvcnQgdHlwZSBNYXliZVNoZWV0RGVmaW5pdGlvbiA9IFNoZWV0RGVmaW5pdGlvbiB8IGZhbHNlIHwgbnVsbCB8IHZvaWRcbiovXG5cbnZhciB1bm1pbmlmaWVkSGFzaEZuID0gZnVuY3Rpb24gdW5taW5pZmllZEhhc2hGbihzdHJcbi8qIDogc3RyaW5nICovXG4sIGtleVxuLyogOiBzdHJpbmcgKi9cbikge1xuICByZXR1cm4gXCJcIi5jb25jYXQoa2V5LCBcIl9cIikuY29uY2F0KGhhc2hTdHJpbmcoc3RyKSk7XG59OyAvLyBTdHlsZVNoZWV0LmNyZWF0ZSBpcyBpbiBhIGhvdCBwYXRoIHNvIHdlIHdhbnQgdG8ga2VlcCBhcyBtdWNoIGxvZ2ljIG91dCBvZiBpdFxuLy8gYXMgcG9zc2libGUuIFNvLCB3ZSBmaWd1cmUgb3V0IHdoaWNoIGhhc2ggZnVuY3Rpb24gdG8gdXNlIG9uY2UsIGFuZCBvbmx5XG4vLyBzd2l0Y2ggaXQgb3V0IHZpYSBtaW5pZnkoKSBhcyBuZWNlc3NhcnkuXG4vL1xuLy8gVGhpcyBpcyBpbiBhbiBleHBvcnRlZCBmdW5jdGlvbiB0byBtYWtlIGl0IGVhc2llciB0byB0ZXN0LlxuXG5cbnZhciBpbml0aWFsSGFzaEZuID0gZnVuY3Rpb24gaW5pdGlhbEhhc2hGbigpIHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgPyBoYXNoU3RyaW5nIDogdW5taW5pZmllZEhhc2hGbjtcbn07XG52YXIgaGFzaEZuID0gaW5pdGlhbEhhc2hGbigpO1xudmFyIFN0eWxlU2hlZXQgPSB7XG4gIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKHNoZWV0RGVmaW5pdGlvblxuICAvKiA6IFNoZWV0RGVmaW5pdGlvbiAqL1xuICApXG4gIC8qIDogT2JqZWN0ICovXG4gIHtcbiAgICB2YXIgbWFwcGVkU2hlZXREZWZpbml0aW9uID0ge307XG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhzaGVldERlZmluaXRpb24pO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgIHZhciB2YWwgPSBzaGVldERlZmluaXRpb25ba2V5XTtcbiAgICAgIHZhciBzdHJpbmdWYWwgPSBKU09OLnN0cmluZ2lmeSh2YWwpO1xuICAgICAgbWFwcGVkU2hlZXREZWZpbml0aW9uW2tleV0gPSB7XG4gICAgICAgIF9sZW46IHN0cmluZ1ZhbC5sZW5ndGgsXG4gICAgICAgIF9uYW1lOiBoYXNoRm4oc3RyaW5nVmFsLCBrZXkpLFxuICAgICAgICBfZGVmaW5pdGlvbjogdmFsXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBtYXBwZWRTaGVldERlZmluaXRpb247XG4gIH0sXG4gIHJlaHlkcmF0ZTogZnVuY3Rpb24gcmVoeWRyYXRlKCkge1xuICAgIHZhciByZW5kZXJlZENsYXNzTmFtZXNcbiAgICAvKiA6IHN0cmluZ1tdICovXG4gICAgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xuICAgIGFkZFJlbmRlcmVkQ2xhc3NOYW1lcyhyZW5kZXJlZENsYXNzTmFtZXMpO1xuICB9XG59O1xuLyoqXG4gKiBVdGlsaXRpZXMgZm9yIHVzaW5nIEFwaHJvZGl0ZSBzZXJ2ZXItc2lkZS5cbiAqXG4gKiBUaGlzIGNhbiBiZSBtaW5pZmllZCBvdXQgaW4gY2xpZW50LW9ubHkgYnVuZGxlcyBieSByZXBsYWNpbmcgYHR5cGVvZiB3aW5kb3dgXG4gKiB3aXRoIGBcIm9iamVjdFwiYCwgZS5nLiB2aWEgV2VicGFjaydzIERlZmluZVBsdWdpbjpcbiAqXG4gKiAgIG5ldyB3ZWJwYWNrLkRlZmluZVBsdWdpbih7XG4gKiAgICAgXCJ0eXBlb2Ygd2luZG93XCI6IEpTT04uc3RyaW5naWZ5KFwib2JqZWN0XCIpXG4gKiAgIH0pXG4gKi9cblxudmFyIFN0eWxlU2hlZXRTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IG51bGwgOiB7XG4gIHJlbmRlclN0YXRpYzogZnVuY3Rpb24gcmVuZGVyU3RhdGljKHJlbmRlckZ1bmNcbiAgLyogOiBSZW5kZXJGdW5jdGlvbiAqL1xuICApIHtcbiAgICByZXNldCgpO1xuICAgIHN0YXJ0QnVmZmVyaW5nKCk7XG4gICAgdmFyIGh0bWwgPSByZW5kZXJGdW5jKCk7XG4gICAgdmFyIGNzc0NvbnRlbnQgPSBmbHVzaFRvU3RyaW5nKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGh0bWw6IGh0bWwsXG4gICAgICBjc3M6IHtcbiAgICAgICAgY29udGVudDogY3NzQ29udGVudCxcbiAgICAgICAgcmVuZGVyZWRDbGFzc05hbWVzOiBnZXRSZW5kZXJlZENsYXNzTmFtZXMoKVxuICAgICAgfVxuICAgIH07XG4gIH1cbn07XG4vKipcbiAqIFV0aWxpdGllcyBmb3IgdXNpbmcgQXBocm9kaXRlIGluIHRlc3RzLlxuICpcbiAqIE5vdCBtZWFudCB0byBiZSB1c2VkIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIFN0eWxlU2hlZXRUZXN0VXRpbHMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gbnVsbCA6IHtcbiAgLyoqXG4gICogUHJldmVudCBzdHlsZXMgZnJvbSBiZWluZyBpbmplY3RlZCBpbnRvIHRoZSBET00uXG4gICpcbiAgKiBUaGlzIGlzIHVzZWZ1bCBpbiBzaXR1YXRpb25zIHdoZXJlIHlvdSdkIGxpa2UgdG8gdGVzdCByZW5kZXJpbmcgVUlcbiAgKiBjb21wb25lbnRzIHdoaWNoIHVzZSBBcGhyb2RpdGUgd2l0aG91dCBhbnkgb2YgdGhlIHNpZGUtZWZmZWN0cyBvZlxuICAqIEFwaHJvZGl0ZSBoYXBwZW5pbmcuIFBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHRlc3RpbmcgdGhlIG91dHB1dCBvZlxuICAqIGNvbXBvbmVudHMgd2hlbiB5b3UgaGF2ZSBubyBET00sIGUuZy4gdGVzdGluZyBpbiBOb2RlIHdpdGhvdXQgYSBmYWtlIERPTS5cbiAgKlxuICAqIFNob3VsZCBiZSBwYWlyZWQgd2l0aCBhIHN1YnNlcXVlbnQgY2FsbCB0b1xuICAqIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb24uXG4gICovXG4gIHN1cHByZXNzU3R5bGVJbmplY3Rpb246IGZ1bmN0aW9uIHN1cHByZXNzU3R5bGVJbmplY3Rpb24oKSB7XG4gICAgcmVzZXQoKTtcbiAgICBzdGFydEJ1ZmZlcmluZygpO1xuICB9LFxuXG4gIC8qKlxuICAqIE9wcG9zaXRlIG1ldGhvZCBvZiBwcmV2ZW50U3R5bGVJbmplY3QuXG4gICovXG4gIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb246IGZ1bmN0aW9uIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb24oKSB7XG4gICAgcmVzZXQoKTtcbiAgfSxcblxuICAvKipcbiAgKiBSZXR1cm5zIGEgc3RyaW5nIG9mIGJ1ZmZlcmVkIHN0eWxlcyB3aGljaCBoYXZlIG5vdCBiZWVuIGZsdXNoZWRcbiAgKlxuICAqIEByZXR1cm5zIHtzdHJpbmd9ICBCdWZmZXIgb2Ygc3R5bGVzIHdoaWNoIGhhdmUgbm90IHlldCBiZWVuIGZsdXNoZWQuXG4gICovXG4gIGdldEJ1ZmZlcmVkU3R5bGVzOiBmdW5jdGlvbiBnZXRCdWZmZXJlZFN0eWxlcyQxKCkge1xuICAgIHJldHVybiBnZXRCdWZmZXJlZFN0eWxlcygpO1xuICB9XG59O1xuLyoqXG4gKiBHZW5lcmF0ZSB0aGUgQXBocm9kaXRlIEFQSSBleHBvcnRzLCB3aXRoIGdpdmVuIGBzZWxlY3RvckhhbmRsZXJzYCBhbmRcbiAqIGB1c2VJbXBvcnRhbnRgIHN0YXRlLlxuICovXG5cbmZ1bmN0aW9uIG1ha2VFeHBvcnRzKHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4pIHtcbiAgdmFyIHNlbGVjdG9ySGFuZGxlcnNcbiAgLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuICA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnM7XG4gIHJldHVybiB7XG4gICAgU3R5bGVTaGVldDogX29iamVjdFNwcmVhZCh7fSwgU3R5bGVTaGVldCwge1xuICAgICAgLyoqXG4gICAgICAgKiBSZXR1cm5zIGEgdmVyc2lvbiBvZiB0aGUgZXhwb3J0cyBvZiBBcGhyb2RpdGUgKGkuZS4gYW4gb2JqZWN0XG4gICAgICAgKiB3aXRoIGBjc3NgIGFuZCBgU3R5bGVTaGVldGAgcHJvcGVydGllcykgd2hpY2ggaGF2ZSBzb21lXG4gICAgICAgKiBleHRlbnNpb25zIGluY2x1ZGVkLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IGV4dGVuc2lvbnM6IEFuIGFycmF5IG9mIGV4dGVuc2lvbnMgdG9cbiAgICAgICAqICAgICBhZGQgdG8gdGhpcyBpbnN0YW5jZSBvZiBBcGhyb2RpdGUuIEVhY2ggb2JqZWN0IHNob3VsZCBoYXZlIGFcbiAgICAgICAqICAgICBzaW5nbGUgcHJvcGVydHkgb24gaXQsIGRlZmluaW5nIHdoaWNoIGtpbmQgb2YgZXh0ZW5zaW9uIHRvXG4gICAgICAgKiAgICAgYWRkLlxuICAgICAgICogQHBhcmFtIHtTZWxlY3RvckhhbmRsZXJ9IFtleHRlbnNpb25zW10uc2VsZWN0b3JIYW5kbGVyXTogQVxuICAgICAgICogICAgIHNlbGVjdG9yIGhhbmRsZXIgZXh0ZW5zaW9uLiBTZWUgYGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzYCBpblxuICAgICAgICogICAgIGdlbmVyYXRlLmpzLlxuICAgICAgICpcbiAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IEFuIG9iamVjdCBjb250YWluaW5nIHRoZSBleHBvcnRzIG9mIHRoZSBuZXdcbiAgICAgICAqICAgICBpbnN0YW5jZSBvZiBBcGhyb2RpdGUuXG4gICAgICAgKi9cbiAgICAgIGV4dGVuZDogZnVuY3Rpb24gZXh0ZW5kKGV4dGVuc2lvbnNcbiAgICAgIC8qIDogRXh0ZW5zaW9uW10gKi9cbiAgICAgICkge1xuICAgICAgICB2YXIgZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycyA9IGV4dGVuc2lvbnMgLy8gUHVsbCBvdXQgZXh0ZW5zaW9ucyB3aXRoIGEgc2VsZWN0b3JIYW5kbGVyIHByb3BlcnR5XG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGV4dGVuc2lvbikge1xuICAgICAgICAgIHJldHVybiBleHRlbnNpb24uc2VsZWN0b3JIYW5kbGVyO1xuICAgICAgICB9KSAvLyBSZW1vdmUgbnVsbHMgKGkuZS4gZXh0ZW5zaW9ucyB3aXRob3V0IGEgc2VsZWN0b3JIYW5kbGVyIHByb3BlcnR5KS5cbiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICAgIHJldHVybiBoYW5kbGVyO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG1ha2VFeHBvcnRzKHVzZUltcG9ydGFudCwgc2VsZWN0b3JIYW5kbGVycy5jb25jYXQoZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycykpO1xuICAgICAgfVxuICAgIH0pLFxuICAgIFN0eWxlU2hlZXRTZXJ2ZXI6IFN0eWxlU2hlZXRTZXJ2ZXIsXG4gICAgU3R5bGVTaGVldFRlc3RVdGlsczogU3R5bGVTaGVldFRlc3RVdGlscyxcbiAgICBtaW5pZnk6IGZ1bmN0aW9uIG1pbmlmeShzaG91bGRNaW5pZnlcbiAgICAvKiA6IGJvb2xlYW4gKi9cbiAgICApIHtcbiAgICAgIGhhc2hGbiA9IHNob3VsZE1pbmlmeSA/IGhhc2hTdHJpbmcgOiB1bm1pbmlmaWVkSGFzaEZuO1xuICAgIH0sXG4gICAgY3NzOiBmdW5jdGlvbiBjc3MoKVxuICAgIC8qIDogTWF5YmVTaGVldERlZmluaXRpb25bXSAqL1xuICAgIHtcbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBzdHlsZURlZmluaXRpb25zID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBzdHlsZURlZmluaXRpb25zW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaW5qZWN0QW5kR2V0Q2xhc3NOYW1lKHVzZUltcG9ydGFudCwgc3R5bGVEZWZpbml0aW9ucywgc2VsZWN0b3JIYW5kbGVycyk7XG4gICAgfSxcbiAgICBmbHVzaFRvU3R5bGVUYWc6IGZsdXNoVG9TdHlsZVRhZyxcbiAgICBpbmplY3RBbmRHZXRDbGFzc05hbWU6IGluamVjdEFuZEdldENsYXNzTmFtZSxcbiAgICBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyczogZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsXG4gICAgcmVzZXQ6IHJlc2V0LFxuICAgIHJlc2V0SW5qZWN0ZWRTdHlsZTogcmVzZXRJbmplY3RlZFN0eWxlXG4gIH07XG59XG5cbmV4cG9ydCB7IG1ha2VFeHBvcnRzIGFzIGEgfTtcbiIsImltcG9ydCB7IGEgYXMgbWFrZUV4cG9ydHMgfSBmcm9tICcuL2NodW5rLWZlYmNlNDZiLmpzJztcbmltcG9ydCAnc3RyaW5nLWhhc2gnO1xuaW1wb3J0ICdhc2FwJztcblxudmFyIHVzZUltcG9ydGFudCA9IHRydWU7IC8vIEFkZCAhaW1wb3J0YW50IHRvIGFsbCBzdHlsZSBkZWZpbml0aW9uc1xuXG52YXIgQXBocm9kaXRlID0gbWFrZUV4cG9ydHModXNlSW1wb3J0YW50KTtcbnZhciBTdHlsZVNoZWV0ID0gQXBocm9kaXRlLlN0eWxlU2hlZXQsXG4gICAgU3R5bGVTaGVldFNlcnZlciA9IEFwaHJvZGl0ZS5TdHlsZVNoZWV0U2VydmVyLFxuICAgIFN0eWxlU2hlZXRUZXN0VXRpbHMgPSBBcGhyb2RpdGUuU3R5bGVTaGVldFRlc3RVdGlscyxcbiAgICBjc3MgPSBBcGhyb2RpdGUuY3NzLFxuICAgIG1pbmlmeSA9IEFwaHJvZGl0ZS5taW5pZnksXG4gICAgZmx1c2hUb1N0eWxlVGFnID0gQXBocm9kaXRlLmZsdXNoVG9TdHlsZVRhZyxcbiAgICBpbmplY3RBbmRHZXRDbGFzc05hbWUgPSBBcGhyb2RpdGUuaW5qZWN0QW5kR2V0Q2xhc3NOYW1lLFxuICAgIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzID0gQXBocm9kaXRlLmRlZmF1bHRTZWxlY3RvckhhbmRsZXJzLFxuICAgIHJlc2V0ID0gQXBocm9kaXRlLnJlc2V0LFxuICAgIHJlc2V0SW5qZWN0ZWRTdHlsZSA9IEFwaHJvZGl0ZS5yZXNldEluamVjdGVkU3R5bGU7XG5cbmV4cG9ydCB7IFN0eWxlU2hlZXQsIFN0eWxlU2hlZXRTZXJ2ZXIsIFN0eWxlU2hlZXRUZXN0VXRpbHMsIGNzcywgbWluaWZ5LCBmbHVzaFRvU3R5bGVUYWcsIGluamVjdEFuZEdldENsYXNzTmFtZSwgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsIHJlc2V0LCByZXNldEluamVjdGVkU3R5bGUgfTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBsb2dvIGZyb20gJy4uL2Fzc2V0cy9ob2xiZXJ0b24tbG9nby5qcGcnO1xyXG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tICdhcGhyb2RpdGUnO1xyXG5cclxuZnVuY3Rpb24gSGVhZGVyKCkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8aGVhZGVyIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5oZWFkZXIpfT5cclxuICAgICAgPGltZyBjbGFzc05hbWU9e2NzcyhzdHlsZXMubG9nbyl9IHNyYz17bG9nb30gYWx0PSdsb2dvJyAvPlxyXG4gICAgICA8aDEgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLnRpdGxlKX0+U2Nob29sIGRhc2hib2FyZDwvaDE+XHJcbiAgICA8L2hlYWRlcj5cclxuICApO1xyXG59XHJcblxyXG5jb25zdCBzY3JlZW5TaXplID0ge1xyXG4gIHNtYWxsOiAnQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTAwcHgpJyxcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICBoZWFkZXI6IHtcclxuICAgIGRpc3BsYXk6ICdmbGV4JyxcclxuICAgIGNvbG9yOiAnI2UwMzQ0YScsXHJcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgIGJvcmRlckJvdHRvbTogJ3RoaWNrIHNvbGlkICNlMDM0NGEnLFxyXG4gICAgd2lkdGg6ICcxMDAlJyxcclxuICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxyXG4gIH0sXHJcbiAgbG9nbzoge1xyXG4gICAgd2lkdGg6ICcxNDRweCcsXHJcbiAgICBbc2NyZWVuU2l6ZS5zbWFsbF06IHtcclxuICAgICAgd2lkdGg6ICcyNDBweCcsXHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgdGl0bGU6IHtcclxuICAgIG1hcmdpbjogMCxcclxuICAgIFtzY3JlZW5TaXplLnNtYWxsXToge1xyXG4gICAgICBmb250U2l6ZTogJzQwcHgnLFxyXG4gICAgfSxcclxuICB9LFxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEhlYWRlcjtcclxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcclxuXHJcbmZ1bmN0aW9uIExvZ2luKCkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8bWFpbiByb2xlPSdtYWluJyBjbGFzc05hbWU9e2NzcyhzdHlsZXMubG9naW4pfT5cclxuICAgICAgPHA+TG9naW4gdG8gYWNjZXNzIHRoZSBmdWxsIGRhc2hib2FyZDwvcD5cclxuICAgICAgPGxhYmVsIGh0bWxGb3I9J2VtYWlsJz5FbWFpbDo8L2xhYmVsPlxyXG4gICAgICA8aW5wdXQgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmlucCl9IHR5cGU9J2VtYWlsJyBuYW1lPSdlbWFpbCcgaWQ9J2VtYWlsJyAvPlxyXG4gICAgICA8bGFiZWwgaHRtbEZvcj0ncGFzc3dvcmQnPlBhc3N3b3JkOjwvbGFiZWw+XHJcbiAgICAgIDxpbnB1dFxyXG4gICAgICAgIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5pbnApfVxyXG4gICAgICAgIHR5cGU9J3Bhc3N3b3JkJ1xyXG4gICAgICAgIG5hbWU9J3Bhc3N3b3JkJ1xyXG4gICAgICAgIGlkPSdwYXNzd29yZCdcclxuICAgICAgLz5cclxuICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuYnRuKX0gdHlwZT0nYnV0dG9uJz5cclxuICAgICAgICBPS1xyXG4gICAgICA8L2J1dHRvbj5cclxuICAgIDwvbWFpbj5cclxuICApO1xyXG59XHJcblxyXG5jb25zdCBzY3JlZW5TaXplID0ge1xyXG4gIHNtYWxsOiAnQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTAwcHgpJyxcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICBsb2dpbjoge1xyXG4gICAgcGFkZGluZzogJzE2cHggMjRweCcsXHJcbiAgICBbc2NyZWVuU2l6ZS5zbWFsbF06IHtcclxuICAgICAgd2lkdGg6ICc5MCUnLFxyXG4gICAgICBwYWRkaW5nOiAwLFxyXG4gICAgfSxcclxuICB9LFxyXG4gIGlucDoge1xyXG4gICAgbWFyZ2luOiAnNHB4JyxcclxuICAgIFtzY3JlZW5TaXplLnNtYWxsXToge1xyXG4gICAgICBkaXNwbGF5OiAnYmxvY2snLFxyXG4gICAgICBib3JkZXI6ICdub25lJyxcclxuICAgICAgbWFyZ2luOiAwLFxyXG4gICAgfSxcclxuICB9LFxyXG4gIGJ0bjoge1xyXG4gICAgbWFyZ2luOiAnNHB4JyxcclxuICAgIGN1cnNvcjogJ3BvaW50ZXInLFxyXG4gICAgW3NjcmVlblNpemUuc21hbGxdOiB7XHJcbiAgICAgIHdpZHRoOiAnMzJweCcsXHJcbiAgICAgIGRpc3BsYXk6ICdibG9jaycsXHJcbiAgICAgIG1hcmdpbjogMCxcclxuICAgIH0sXHJcbiAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMb2dpbjtcclxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgZ2V0RnVsbFllYXIsIGdldEZvb3RlckNvcHkgfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcblxyXG5mdW5jdGlvbiBGb290ZXIoKSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxmb290ZXI+XHJcbiAgICAgIDxwPlxyXG4gICAgICAgIENvcHlyaWdodCB7Z2V0RnVsbFllYXIoKX0gLSB7Z2V0Rm9vdGVyQ29weSh0cnVlKX1cclxuICAgICAgPC9wPlxyXG4gICAgPC9mb290ZXI+XHJcbiAgKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9vdGVyO1xyXG4iLCJleHBvcnQgY29uc3QgZ2V0RnVsbFllYXIgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRGb290ZXJDb3B5ID0gKGlzSW5kZXgpID0+IHtcclxuICBsZXQgcmVzID0gdW5kZWZpbmVkO1xyXG4gIGlzSW5kZXhcclxuICAgID8gKHJlcyA9ICdIb2xiZXJ0b24gU2Nob29sJylcclxuICAgIDogKHJlcyA9ICdIb2xiZXJ0b24gU2Nob29sIG1haW4gZGFzaGJvYXJkJyk7XHJcbiAgcmV0dXJuIHJlcztcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRMYXRlc3ROb3RpZmljYXRpb24gPSAoKSA9PlxyXG4gICc8c3Ryb25nPlVyZ2VudCByZXF1aXJlbWVudDwvc3Ryb25nPiAtIGNvbXBsZXRlIGJ5IEVPRCc7XHJcbiIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI3Y2E3MjdkY2IwYjQxODFlZGEyNThiZDViMTg2OTc4YS5wbmdcIjsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tICdhcGhyb2RpdGUnO1xyXG5cclxuY2xhc3MgTm90aWZpY2F0aW9uSXRlbSBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQge1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICBzdXBlcihwcm9wcyk7XHJcbiAgfVxyXG4gIHJlbmRlcigpIHtcclxuICAgIGNvbnN0IHsgdHlwZSwgaHRtbCwgdmFsdWUsIG1hcmtBc1JlYWQsIGlkIH0gPSB0aGlzLnByb3BzO1xyXG4gICAgY29uc3QgY29sb3IgPSBjc3ModHlwZSA9PT0gJ3VyZ2VudCcgPyBzdHlsZXMudXJnZW50IDogc3R5bGVzLmRlZmF1bHQpO1xyXG4gICAgbGV0IGxpO1xyXG5cclxuICAgIHZhbHVlXHJcbiAgICAgID8gKGxpID0gKFxyXG4gICAgICAgICAgPGxpXHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y29sb3J9XHJcbiAgICAgICAgICAgIGRhdGEtbm90aWZpY2F0aW9uLXR5cGU9e3R5cGV9XHJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG1hcmtBc1JlYWQoaWQpfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICB7dmFsdWV9XHJcbiAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICkpXHJcbiAgICAgIDogKGxpID0gKFxyXG4gICAgICAgICAgPGxpXHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y29sb3J9XHJcbiAgICAgICAgICAgIGRhdGEtbm90aWZpY2F0aW9uLXR5cGU9e3R5cGV9XHJcbiAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXtodG1sfVxyXG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBtYXJrQXNSZWFkKGlkKX1cclxuICAgICAgICAgID48L2xpPlxyXG4gICAgICAgICkpO1xyXG5cclxuICAgIHJldHVybiBsaTtcclxuICB9XHJcbn1cclxuXHJcbk5vdGlmaWNhdGlvbkl0ZW0uZGVmYXVsdFByb3BzID0ge1xyXG4gIHR5cGU6ICdkZWZhdWx0JyxcclxuICBodG1sOiB7fSxcclxuICB2YWx1ZTogJycsXHJcbiAgbWFya0FzUmVhZDogKCkgPT4ge30sXHJcbiAgaWQ6IE5hTixcclxufTtcclxuXHJcbk5vdGlmaWNhdGlvbkl0ZW0ucHJvcFR5cGVzID0ge1xyXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgaHRtbDogUHJvcFR5cGVzLnNoYXBlKHtcclxuICAgIF9faHRtbDogUHJvcFR5cGVzLnN0cmluZyxcclxuICB9KSxcclxuICB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICBtYXJrQXNSZWFkOiBQcm9wVHlwZXMuZnVuYyxcclxuICBpZDogUHJvcFR5cGVzLm51bWJlcixcclxufTtcclxuXHJcbmNvbnN0IHNjcmVlblNpemUgPSB7XHJcbiAgc21hbGw6ICdAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5MDBweCknLFxyXG59O1xyXG5cclxuY29uc3Qgb25TbWFsbCA9IHtcclxuICBmb250U2l6ZTogJzIwcHgnLFxyXG4gIHBhZGRpbmc6ICcxMHB4IDhweCcsXHJcbiAgYm9yZGVyQm90dG9tOiAnMXB4IHNvbGlkIGJsYWNrJyxcclxuICBsaXN0U3R5bGU6ICdub25lJyxcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICBkZWZhdWx0OiB7XHJcbiAgICBjb2xvcjogJ2JsdWUnLFxyXG4gICAgW3NjcmVlblNpemUuc21hbGxdOiBvblNtYWxsLFxyXG4gIH0sXHJcblxyXG4gIHVyZ2VudDoge1xyXG4gICAgY29sb3I6ICdyZWQnLFxyXG4gICAgW3NjcmVlblNpemUuc21hbGxdOiBvblNtYWxsLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgTm90aWZpY2F0aW9uSXRlbTtcclxuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuXHJcbmNvbnN0IE5vdGlmaWNhdGlvbkl0ZW1TaGFwZSA9IFByb3BUeXBlcy5zaGFwZSh7XHJcbiAgaWQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcclxuICBodG1sOiBQcm9wVHlwZXMuc2hhcGUoe1xyXG4gICAgX19odG1sOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIH0pLFxyXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZyxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb25JdGVtU2hhcGU7XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQsIEZyYWdtZW50IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgY2xvc2VfaWNvbiBmcm9tICcuLi9hc3NldHMvY2xvc2UtaWNvbi5wbmcnO1xyXG5pbXBvcnQgTm90aWZpY2F0aW9uSXRlbSBmcm9tICcuL05vdGlmaWNhdGlvbkl0ZW0nO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgTm90aWZpY2F0aW9uSXRlbVNoYXBlIGZyb20gJy4vTm90aWZpY2F0aW9uSXRlbVNoYXBlJztcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcclxuXHJcbmNsYXNzIE5vdGlmaWNhdGlvbnMgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICBzdXBlcihwcm9wcyk7XHJcbiAgICB0aGlzLm1hcmtBc1JlYWQgPSB0aGlzLm1hcmtBc1JlYWQuYmluZCh0aGlzKTtcclxuICB9XHJcbiAgbWFya0FzUmVhZChpZCkge1xyXG4gICAgY29uc29sZS5sb2coYE5vdGlmaWNhdGlvbiAke2lkfSBoYXMgYmVlbiBtYXJrZWQgYXMgcmVhZGApO1xyXG4gIH1cclxuICBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICBuZXh0UHJvcHMubGlzdE5vdGlmaWNhdGlvbnMubGVuZ3RoID4gdGhpcy5wcm9wcy5saXN0Tm90aWZpY2F0aW9ucy5sZW5ndGhcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoKSB7XHJcbiAgICBjb25zdCB7IGRpc3BsYXlEcmF3ZXIsIGxpc3ROb3RpZmljYXRpb25zIH0gPSB0aGlzLnByb3BzO1xyXG4gICAgY29uc3Qgc2hvdyA9IGNzcyhkaXNwbGF5RHJhd2VyID8gc3R5bGVzLnNob3dPZmYgOiBzdHlsZXMuc2hvd09uKTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxGcmFnbWVudD5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5tZW51SXRlbSl9PlxyXG4gICAgICAgICAgPHAgY2xhc3NOYW1lPXtzaG93fT5Zb3VyIG5vdGlmaWNhdGlvbnM8L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAge2Rpc3BsYXlEcmF3ZXIgJiYgKFxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMubm90aWZpY2F0aW9ucyl9PlxyXG4gICAgICAgICAgICA8cD5IZXJlIGlzIHRoZSBsaXN0IG9mIG5vdGlmaWNhdGlvbnM8L3A+XHJcbiAgICAgICAgICAgIDx1bD5cclxuICAgICAgICAgICAgICB7bGlzdE5vdGlmaWNhdGlvbnMubGVuZ3RoID09PSAwICYmIChcclxuICAgICAgICAgICAgICAgIDxOb3RpZmljYXRpb25JdGVtIHZhbHVlPSdObyBuZXcgbm90aWZpY2F0aW9uIGZvciBub3cnIC8+XHJcbiAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgICB7bGlzdE5vdGlmaWNhdGlvbnMubWFwKChub3RpZmljYXRpb24pID0+IChcclxuICAgICAgICAgICAgICAgIDxOb3RpZmljYXRpb25JdGVtXHJcbiAgICAgICAgICAgICAgICAgIGtleT17bm90aWZpY2F0aW9uLmlkfVxyXG4gICAgICAgICAgICAgICAgICB0eXBlPXtub3RpZmljYXRpb24udHlwZX1cclxuICAgICAgICAgICAgICAgICAgdmFsdWU9e25vdGlmaWNhdGlvbi52YWx1ZX1cclxuICAgICAgICAgICAgICAgICAgaHRtbD17bm90aWZpY2F0aW9uLmh0bWx9XHJcbiAgICAgICAgICAgICAgICAgIG1hcmtBc1JlYWQ9e3RoaXMubWFya0FzUmVhZH1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgKSl9XHJcbiAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgICB0eXBlPSdidXR0b24nXHJcbiAgICAgICAgICAgICAgYXJpYS1sYWJlbD0nQ2xvc2UnXHJcbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gY29uc29sZS5sb2coJ0Nsb3NlIGJ1dHRvbiBoYXMgYmVlbiBjbGlja2VkJyl9XHJcbiAgICAgICAgICAgICAgc3R5bGU9e3tcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXHJcbiAgICAgICAgICAgICAgICB0b3A6ICc1NnB4JyxcclxuICAgICAgICAgICAgICAgIHJpZ2h0OiAnMTZweCcsXHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAwLFxyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAwLFxyXG4gICAgICAgICAgICAgICAgb3V0bGluZTogJ25vbmUnLFxyXG4gICAgICAgICAgICAgICAgY3Vyc29yOiAncG9pbnRlcicsXHJcbiAgICAgICAgICAgICAgICB6SW5kZXg6IDEsXHJcbiAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgIDxpbWdcclxuICAgICAgICAgICAgICAgIHNyYz17Y2xvc2VfaWNvbn1cclxuICAgICAgICAgICAgICAgIGFsdD0nJ1xyXG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgd2lkdGg6ICc4cHgnLCBoZWlnaHQ6ICc4cHgnIH19XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApfVxyXG4gICAgICA8L0ZyYWdtZW50PlxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbk5vdGlmaWNhdGlvbnMuZGVmYXVsdFByb3BzID0ge1xyXG4gIGRpc3BsYXlEcmF3ZXI6IGZhbHNlLFxyXG4gIGxpc3ROb3RpZmljYXRpb25zOiBbXSxcclxufTtcclxuXHJcbk5vdGlmaWNhdGlvbnMucHJvcFR5cGVzID0ge1xyXG4gIGRpc3BsYXlEcmF3ZXI6IFByb3BUeXBlcy5ib29sLFxyXG4gIGxpc3ROb3RpZmljYXRpb25zOiBQcm9wVHlwZXMuYXJyYXlPZihOb3RpZmljYXRpb25JdGVtU2hhcGUpLFxyXG59O1xyXG5cclxuY29uc3Qgc2NyZWVuU2l6ZSA9IHtcclxuICBzbWFsbDogJ0BtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDkwMHB4KScsXHJcbn07XHJcblxyXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XHJcbiAgbm90aWZpY2F0aW9uczoge1xyXG4gICAgZm9udFNpemU6ICcyMHB4JyxcclxuICAgIGJvcmRlcjogJ3RoaW4gZG90dGVkICNlMDM0NGEnLFxyXG4gICAgcGFkZGluZzogJzRweCAxNnB4JyxcclxuICAgIGZsb2F0OiAncmlnaHQnLFxyXG4gICAgW3NjcmVlblNpemUuc21hbGxdOiB7XHJcbiAgICAgIHdpZHRoOiAnOTAlJyxcclxuICAgICAgYm9yZGVyOiAnbm9uZScsXHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyxcclxuICAgIH0sXHJcbiAgfSxcclxuICBtZW51SXRlbToge1xyXG4gICAgdGV4dEFsaWduOiAncmlnaHQnLFxyXG4gICAgbWFyZ2luUmlnaHQ6ICcxNnB4JyxcclxuICAgIFtzY3JlZW5TaXplLnNtYWxsXToge30sXHJcbiAgfSxcclxuICBzaG93T2ZmOiB7XHJcbiAgICBtYXJnaW5SaWdodDogJzhweCcsXHJcbiAgICBbc2NyZWVuU2l6ZS5zbWFsbF06IHtcclxuICAgICAgZGlzcGxheTogJ25vbmUnLFxyXG4gICAgfSxcclxuICB9LFxyXG5cclxuICBzaG93T246IHtcclxuICAgIG1hcmdpblJpZ2h0OiAnOHB4JyxcclxuICB9LFxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbnM7XHJcbiIsImltcG9ydCBSZWFjdCwgeyBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcclxuXHJcbmNvbnN0IENvdXJzZUxpc3RSb3cgPSAoeyBpc0hlYWRlciwgdGV4dEZpcnN0Q2VsbCwgdGV4dFNlY29uZENlbGwgfSkgPT4ge1xyXG4gIGNvbnN0IGJnQ29sb3IxID0geyBiYWNrZ3JvdW5kQ29sb3I6ICcjZjVmNWY1YWInIH07XHJcbiAgY29uc3QgYmdDb2xvcjIgPSB7IGJhY2tncm91bmRDb2xvcjogJyNkZWI1YjU0NScgfTtcclxuICBsZXQgYmdDb2xvciA9IHVuZGVmaW5lZDtcclxuICBsZXQgY29udGVudCA9IHVuZGVmaW5lZDtcclxuXHJcbiAgaWYgKGlzSGVhZGVyID09PSB0cnVlKSB7XHJcbiAgICBiZ0NvbG9yID0gYmdDb2xvcjI7XHJcbiAgICBpZiAodGV4dFNlY29uZENlbGwgPT09IG51bGwpIHtcclxuICAgICAgY29udGVudCA9IDx0aCBjb2xTcGFuPScyJz57dGV4dEZpcnN0Q2VsbH08L3RoPjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnRlbnQgPSAoXHJcbiAgICAgICAgPEZyYWdtZW50PlxyXG4gICAgICAgICAgPHRoIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy50aCl9Pnt0ZXh0Rmlyc3RDZWxsfTwvdGg+XHJcbiAgICAgICAgICA8dGggY2xhc3NOYW1lPXtjc3Moc3R5bGVzLnRoKX0+e3RleHRTZWNvbmRDZWxsfTwvdGg+XHJcbiAgICAgICAgPC9GcmFnbWVudD5cclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcbiAgaWYgKGlzSGVhZGVyID09PSBmYWxzZSkge1xyXG4gICAgYmdDb2xvciA9IGJnQ29sb3IxO1xyXG4gICAgY29udGVudCA9IChcclxuICAgICAgPEZyYWdtZW50PlxyXG4gICAgICAgIDx0ZD57dGV4dEZpcnN0Q2VsbH08L3RkPlxyXG4gICAgICAgIDx0ZD57dGV4dFNlY29uZENlbGx9PC90ZD5cclxuICAgICAgPC9GcmFnbWVudD5cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gPHRyIHN0eWxlPXtiZ0NvbG9yfT57Y29udGVudH08L3RyPjtcclxufTtcclxuXHJcbkNvdXJzZUxpc3RSb3cuZGVmYXVsdFByb3BzID0ge1xyXG4gIGlzSGVhZGVyOiBmYWxzZSxcclxuICB0ZXh0U2Vjb25kQ2VsbDogbnVsbCxcclxufTtcclxuXHJcbkNvdXJzZUxpc3RSb3cucHJvcFR5cGVzID0ge1xyXG4gIGlzSGVhZGVyOiBQcm9wVHlwZXMuYm9vbCxcclxuICB0ZXh0Rmlyc3RDZWxsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgdGV4dFNlY29uZENlbGw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICB0aDoge1xyXG4gICAgdGV4dEFsaWduOiAnbGVmdCcsXHJcbiAgICBib3JkZXJUb3A6ICcxcHggc29saWQgZ3JheScsXHJcbiAgICBib3JkZXJCb3R0b206ICcxcHggc29saWQgZ3JheScsXHJcbiAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb3Vyc2VMaXN0Um93O1xyXG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5cclxuY29uc3QgQ291cnNlU2hhcGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xyXG4gIGlkOiBQcm9wVHlwZXMubnVtYmVyLFxyXG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgY3JlZGl0OiBQcm9wVHlwZXMubnVtYmVyLFxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENvdXJzZVNoYXBlO1xyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgQ291cnNlTGlzdFJvdyBmcm9tICcuL0NvdXJzZUxpc3RSb3cnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgQ291cnNlU2hhcGUgZnJvbSAnLi9Db3Vyc2VTaGFwZSc7XHJcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gJ2FwaHJvZGl0ZSc7XHJcblxyXG5jb25zdCBDb3Vyc2VMaXN0ID0gKHsgbGlzdENvdXJzZXMgfSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8dGFibGUgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmNvdXJzZUxpc3QpfT5cclxuICAgICAgPHRoZWFkPlxyXG4gICAgICAgIDxDb3Vyc2VMaXN0Um93IHRleHRGaXJzdENlbGw9J0F2YWlsYWJsZSBjb3Vyc2VzJyBpc0hlYWRlcj17dHJ1ZX0gLz5cclxuICAgICAgICA8Q291cnNlTGlzdFJvd1xyXG4gICAgICAgICAgdGV4dEZpcnN0Q2VsbD0nQ291cnNlIG5hbWUnXHJcbiAgICAgICAgICB0ZXh0U2Vjb25kQ2VsbD0nQ3JlZGl0J1xyXG4gICAgICAgICAgaXNIZWFkZXI9e3RydWV9XHJcbiAgICAgICAgLz5cclxuICAgICAgPC90aGVhZD5cclxuICAgICAgPHRib2R5PlxyXG4gICAgICAgIHtsaXN0Q291cnNlcy5sZW5ndGggPT09IDAgJiYgKFxyXG4gICAgICAgICAgPENvdXJzZUxpc3RSb3dcclxuICAgICAgICAgICAgdGV4dEZpcnN0Q2VsbD0nTm8gY291cnNlIGF2YWlsYWJsZSB5ZXQnXHJcbiAgICAgICAgICAgIGlzSGVhZGVyPXtmYWxzZX1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgKX1cclxuXHJcbiAgICAgICAge2xpc3RDb3Vyc2VzLm1hcCgoY291cnNlKSA9PiAoXHJcbiAgICAgICAgICA8Q291cnNlTGlzdFJvd1xyXG4gICAgICAgICAgICBrZXk9e2NvdXJzZS5pZH1cclxuICAgICAgICAgICAgdGV4dEZpcnN0Q2VsbD17Y291cnNlLm5hbWV9XHJcbiAgICAgICAgICAgIHRleHRTZWNvbmRDZWxsPXtjb3Vyc2UuY3JlZGl0fVxyXG4gICAgICAgICAgICBpc0hlYWRlcj17ZmFsc2V9XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICkpfVxyXG4gICAgICA8L3Rib2R5PlxyXG4gICAgPC90YWJsZT5cclxuICApO1xyXG59O1xyXG5cclxuQ291cnNlTGlzdC5kZWZhdWx0UHJvcHMgPSB7XHJcbiAgbGlzdENvdXJzZXM6IFtdLFxyXG59O1xyXG5cclxuQ291cnNlTGlzdC5wcm9wVHlwZXMgPSB7XHJcbiAgbGlzdENvdXJzZXM6IFByb3BUeXBlcy5hcnJheU9mKENvdXJzZVNoYXBlKSxcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICBjb3Vyc2VMaXN0OiB7XHJcbiAgICB3aWR0aDogJzk1JScsXHJcbiAgICBtYXJnaW46ICdhdXRvJyxcclxuICAgIGJvcmRlcjogJzFweCBzb2xpZCBncmF5JyxcclxuICAgIGJvcmRlckNvbGxhcHNlOiAnY29sbGFwc2UnLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ291cnNlTGlzdDtcclxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcclxuXHJcbmNsYXNzIEJvZHlTZWN0aW9uIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgc3VwZXIocHJvcHMpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyBjaGlsZHJlbiwgdGl0bGUgfSA9IHRoaXMucHJvcHM7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5ib2R5U2VjdGlvbil9PlxyXG4gICAgICAgIDxoMiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuaGVhZGluZyl9Pnt0aXRsZX08L2gyPlxyXG4gICAgICAgIHtjaGlsZHJlbn1cclxuICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuQm9keVNlY3Rpb24uZGVmYXVsdFByb3BzID0ge1xyXG4gIHRpdGxlOiAnJyxcclxufTtcclxuXHJcbkJvZHlTZWN0aW9uLnByb3BUeXBlcyA9IHtcclxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcclxufTtcclxuXHJcbmNvbnN0IHNjcmVlblNpemUgPSB7XHJcbiAgc21hbGw6ICdAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5MDBweCknLFxyXG59O1xyXG5cclxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xyXG4gIGJvZHlTZWN0aW9uOiB7XHJcbiAgICB3aWR0aDogJzEwMCUnLFxyXG4gICAgbWFyZ2luVG9wOiAnMTYwcHgnLFxyXG4gICAgZGlzcGxheTogJ2ZsZXgnLFxyXG4gICAgZmxleFdyYXA6ICd3cmFwJyxcclxuICAgIHBhZGRpbmc6ICczMnB4JyxcclxuICAgIFtzY3JlZW5TaXplLnNtYWxsXToge1xyXG4gICAgICBtYXJnaW46ICcyNDBweCAwIC0yNDBweCcsXHJcbiAgICAgIHBhZGRpbmc6ICcxNnB4JyxcclxuICAgIH0sXHJcbiAgfSxcclxuICBoZWFkaW5nOiB7XHJcbiAgICB3aWR0aDogJzEwMCUnLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQm9keVNlY3Rpb247XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcbmltcG9ydCBCb2R5U2VjdGlvbiBmcm9tICcuL0JvZHlTZWN0aW9uJztcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcclxuXHJcbmNsYXNzIEJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcclxuICAgIHN1cGVyKHByb3BzKTtcclxuICB9XHJcblxyXG4gIHJlbmRlcigpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmJvZHlTZWN0aW9uV2l0aE1hcmdpbil9PlxyXG4gICAgICAgIDxCb2R5U2VjdGlvbiB7Li4udGhpcy5wcm9wc30gLz5cclxuICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tLmRlZmF1bHRQcm9wcyA9IHtcclxuICB0aXRsZTogJycsXHJcbn07XHJcblxyXG5Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20ucHJvcFR5cGVzID0ge1xyXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG59O1xyXG5cclxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xyXG4gIGJveVNlY3Rpb25XaXRoTWFyZ2luOiB7XHJcbiAgICB3aWR0aDogJzEwMCUnLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tO1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50LCBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBIZWFkZXIgZnJvbSAnLi4vSGVhZGVyL0hlYWRlcic7XG5pbXBvcnQgTG9naW4gZnJvbSAnLi4vTG9naW4vTG9naW4nO1xuaW1wb3J0IEZvb3RlciBmcm9tICcuLi9Gb290ZXIvRm9vdGVyJztcbmltcG9ydCBOb3RpZmljYXRpb25zIGZyb20gJy4uL05vdGlmaWNhdGlvbnMvTm90aWZpY2F0aW9ucyc7XG5pbXBvcnQgQ291cnNlTGlzdCBmcm9tICcuLi9Db3Vyc2VMaXN0L0NvdXJzZUxpc3QnO1xuaW1wb3J0IEJvZHlTZWN0aW9uIGZyb20gJy4uL0JvZHlTZWN0aW9uL0JvZHlTZWN0aW9uJztcbmltcG9ydCBCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20gZnJvbSAnLi4vQm9keVNlY3Rpb24vQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBnZXRMYXRlc3ROb3RpZmljYXRpb24gfSBmcm9tICcuLi91dGlscy91dGlscyc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tICdhcGhyb2RpdGUnO1xuXG5jbGFzcyBBcHAgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLmhhbmRsZUxvZ291dCA9IHRoaXMuaGFuZGxlTG9nb3V0LmJpbmQodGhpcyk7XG4gIH1cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLmhhbmRsZUxvZ291dCk7XG4gIH1cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLmhhbmRsZUxvZ291dCk7XG4gIH1cbiAgaGFuZGxlTG9nb3V0KGUpIHtcbiAgICBpZiAoZS5jdHJsS2V5ICYmIGUua2V5ID09PSAnaCcpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGFsZXJ0KCdMb2dnaW5nIHlvdSBvdXQnKTtcbiAgICAgIHRoaXMucHJvcHMubG9nT3V0KCk7XG4gICAgfVxuICB9XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBsaXN0Q291cnNlcyA9IFtcbiAgICAgIHsgaWQ6IDEsIG5hbWU6ICdFUzYnLCBjcmVkaXQ6IDYwIH0sXG4gICAgICB7IGlkOiAyLCBuYW1lOiAnV2VicGFjaycsIGNyZWRpdDogMjAgfSxcbiAgICAgIHsgaWQ6IDMsIG5hbWU6ICdSZWFjdCcsIGNyZWRpdDogNDAgfSxcbiAgICBdO1xuICAgIGNvbnN0IGxpc3ROb3RpZmljYXRpb25zID0gW1xuICAgICAgeyBpZDogMSwgdHlwZTogJ2RlZmF1bHQnLCB2YWx1ZTogJ05ldyBjb3Vyc2UgYXZhaWxhYmxlJyB9LFxuICAgICAgeyBpZDogMiwgdHlwZTogJ3VyZ2VudCcsIHZhbHVlOiAnTmV3IHJlc3VtZSBhdmFpbGFibGUnIH0sXG4gICAgICB7IGlkOiAzLCB0eXBlOiAndXJnZW50JywgaHRtbDogeyBfX2h0bWw6IGdldExhdGVzdE5vdGlmaWNhdGlvbigpIH0gfSxcbiAgICBdO1xuICAgIGNvbnN0IHsgaXNMb2dnZWRJbiB9ID0gdGhpcy5wcm9wcztcbiAgICByZXR1cm4gKFxuICAgICAgPEZyYWdtZW50PlxuICAgICAgICA8Tm90aWZpY2F0aW9ucyBsaXN0Tm90aWZpY2F0aW9ucz17bGlzdE5vdGlmaWNhdGlvbnN9IC8+XG4gICAgICAgIDxIZWFkZXIgLz5cbiAgICAgICAge2lzTG9nZ2VkSW4gPyAoXG4gICAgICAgICAgPEJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSB0aXRsZT0nQ291cnNlIGxpc3QnPlxuICAgICAgICAgICAgPENvdXJzZUxpc3QgbGlzdENvdXJzZXM9e2xpc3RDb3Vyc2VzfSAvPlxuICAgICAgICAgIDwvQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tPlxuICAgICAgICApIDogKFxuICAgICAgICAgIDxCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20gdGl0bGU9J0xvZyBpbiB0byBjb250aW51ZSc+XG4gICAgICAgICAgICA8TG9naW4gLz5cbiAgICAgICAgICA8L0JvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbT5cbiAgICAgICAgKX1cbiAgICAgICAgPEJvZHlTZWN0aW9uIHRpdGxlPSdOZXdzIGZyb20gdGhlIFNjaG9vbCc+XG4gICAgICAgICAgPHAgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLnApfT5cbiAgICAgICAgICAgIExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0IGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIEl1c3RvLFxuICAgICAgICAgICAgdWxsYW0/IFF1aXNxdWFtIGVvcyB0ZW1wb3JpYnVzLCB2b2x1cHRhdGUgZXJyb3IsIHN1bnQgY29uc2VjdGV0dXJcbiAgICAgICAgICAgIGR1Y2ltdXMgZWFxdWUgZG9sb3J1bSBzaXQgZXhjZXB0dXJpIGRvbG9yaWJ1cyBvZmZpY2lpcyByZXByZWhlbmRlcml0XG4gICAgICAgICAgICBkaXN0aW5jdGlvIGRpZ25pc3NpbW9zIGFkaXBpc2NpIGEgYXNwZXJuYXR1ci5cbiAgICAgICAgICA8L3A+XG4gICAgICAgIDwvQm9keVNlY3Rpb24+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmZvb3Rlcil9PlxuICAgICAgICAgIDxGb290ZXIgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L0ZyYWdtZW50PlxuICAgICk7XG4gIH1cbn1cblxuQXBwLmRlZmF1bHRQcm9wcyA9IHtcbiAgaXNMb2dnZWRJbjogZmFsc2UsXG4gIGxvZ091dDogKCkgPT4gdW5kZWZpbmVkLFxufTtcblxuQXBwLnByb3BUeXBlcyA9IHtcbiAgaXNMb2dnZWRJbjogUHJvcFR5cGVzLmJvb2wsXG4gIGxvZ091dDogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGZvb3Rlcjoge1xuICAgIHdpZHRoOiAnMTAwJScsXG4gICAgcG9zaXRpb246ICdmaXhlZCcsXG4gICAgYm90dG9tOiAwLFxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgZm9udFN0eWxlOiAnaXRhbGljJyxcbiAgICBib3JkZXJUb3A6ICd0aGljayBzb2xpZCAjZTAzNDRhJyxcbiAgfSxcbiAgcDoge1xuICAgIG1hcmdpblRvcDogMCxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgQXBwIGZyb20gJy4vQXBwL0FwcCc7XG5cblJlYWN0RE9NLnJlbmRlcihcbiAgPFJlYWN0LlN0cmljdE1vZGU+XG4gICAgPEFwcCAvPlxuICA8L1JlYWN0LlN0cmljdE1vZGU+LFxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpXG4pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==
